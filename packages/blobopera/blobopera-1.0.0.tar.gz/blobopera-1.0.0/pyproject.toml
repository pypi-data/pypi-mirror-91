[tool.poetry]
name = "blobopera"
version = "1.0.0"
description = "Unofficial toolkit for Google Arts & Culture Blob Opera"
authors = ["Helio Machado <0x2b3bfa0@googlemail.com>"]
maintainers = ["Helio Machado <0x2b3bfa0@googlemail.com>"]
readme = "README.md"
license = "GPL-3.0-or-later"
homepage = "https://github.com/0x2b3bfa0/python-blobopera"
repository = "https://github.com/0x2b3bfa0/python-blobopera"
documentation = "https://0x2b3bfa0.github.io/python-blobopera"

[tool.poetry.dependencies]
python = "^3.9"
music21 = "^6.3.0"
requests = "^2.25.1"
matplotlib = "^3.3.3"
numpy = "^1.19.4"
proto-plus = "^1.13.0"
typer = {extras = ["all"], version = "^0.3.2"}
colorama = "^0.4.4"
more-itertools = "^8.6.0"

[tool.poetry.dev-dependencies]
grpcio-tools = "^1.34.0"
pytest = "^5.2"
typer-cli = "^0.0.11"
isort = "^5.7.0"
autoflake = "^1.4"
coverage = {extras = ["toml"], version = "^5.3.1"}
flake8 = "^3.8.4"
flake8-bandit = "^2.1.2"
flake8-bugbear = "^20.11.1"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.3.1"
flake8-eradicate = "^1.0.0"
flake8-isort = "^4.0.0"
flake8-pytest-style = "^1.3.0"
flakehell = "^0.7.1"
pep8-naming = "^0.11.1"
responses = "^0.12.1"
poethepoet = "^0.9.0"
black = "^20.8b1"
furo = "^2020.12.30-beta.24"
Sphinx = "^3.4.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
blobopera = "blobopera.command:application"

[tool.coverage.run]
omit = [".*", "*/site-packages/*"]

[tool.coverage.report]
fail_under = 80

[tool.flakehell]
format = "grouped"
max_line_length = 79
show_source = true
per_file_ignores=[""]

[tool.flakehell.plugins]
flake8-bandit = ["+*"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-darglint = ["+*"]
flake8-docstrings = ["+*"]
flake8-eradicate = ["+*"]
flake8-isort = ["+*"]
flake8-mutable = ["+*"]
flake8-pytest-style = ["+*"]
flake8-spellcheck = ["-*"]
mccabe = ["+*"]
pep8-naming = ["+*", "-N804"]  # Yes, I mean it; also self for class methods.
pycodestyle = ["+*", "-E741", "-E203"]
pyflakes = ["+*"]
pylint = ["+*"]

[tool.flakehell.exceptions."tests/*.py"]
flake8-bandit = ["-S101"]
flake8-builtins = ["-A001"]
pyflakes = ["-F811", "-F401"]

[tool.flakehell.exceptions."blobopera/**/__init__.py"]
pyflakes = ["-F401"]

[tool.flakehell.exceptions."blobopera/command/*.py"]
flake8-builtins = ["-A002"]
flake8-bugbear = ["-B008"]

[tool.poe.tasks]
isort = "isort --profile black -m 3 ."
autoflake = "autoflake --recursive --in-place --remove-unused-variables ."
black = "black --line-length=79 ."
isort-check = "isort --profile black -m 3 --check-only ."
black-check = "black --check --line-length=79 ."
style-check = ["isort-check", "black-check"]
style = ["isort", "autoflake", "black"]
lint = "flakehell lint"
test = "pytest"
coverage = {"shell" = "coverage run -m pytest; coverage report -m"}
document-command = "typer blobopera.command utils docs --output documentation/command/README.md --name blobopera"
document-module-generate = "sphinx-apidoc -feo documentation/module . tests"
document-module-build = "sphinx-build -Wb html -c documentation -d documentation/module/_build/doctrees documentation/module/ documentation/module/_build/html/"
document-module = ["document-module-generate", "document-module-build"]
document = ["document-command", "document-module"]
all = ["style", "lint", "coverage", "document"]
