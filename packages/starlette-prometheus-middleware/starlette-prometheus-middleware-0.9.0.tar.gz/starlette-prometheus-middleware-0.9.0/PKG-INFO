Metadata-Version: 2.1
Name: starlette-prometheus-middleware
Version: 0.9.0
Summary: Prometheus integration for Starlette
Home-page: https://github.com/faylixe/starlette-prometheus
License: GPL-3.0+
Keywords: starlette,prometheus,metrics
Author: José Antonio Perdiguero López
Author-email: perdy@perdy.io
Requires-Python: >=3.6,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Internet :: WWW/HTTP :: HTTP Servers
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Requires-Dist: prometheus_client (>=0.9.0,<0.10.0)
Requires-Dist: starlette (>=0.12.2)
Project-URL: Repository, https://github.com/faylixe/starlette-prometheus
Description-Content-Type: text/markdown

# Starlette Prometheus
[![Build Status](https://github.com/Faylixe/starlette-prometheus/workflows/Continuous%20Integration/badge.svg)](https://github.com/Faylixe/starlette-prometheus-middleware/actions)
[![Package Version](https://img.shields.io/pypi/v/starlette-prometheus-middleware?logo=PyPI&logoColor=white)](https://pypi.org/project/starlette-prometheus-middleware/)
[![PyPI Version](https://img.shields.io/pypi/pyversions/starlette-prometheus-middleware?logo=Python&logoColor=white)](https://pypi.org/project/starlette-prometheus-middleware/)

> :warning: This repository is a fork of the original
> [starlette_prometheus middleware](https://github.com/perdy/starlette-prometheus),
> using upgraded dependencies.

## Introduction

Prometheus integration for Starlette.

## Requirements

* Python 3.6+
* Starlette 0.9+

## Installation

```console
$ pip install starlette-prometheus-middleware
```

## Usage

A complete example that exposes prometheus metrics endpoint under `/metrics/` path.

```python
from starlette.applications import Starlette
from starlette_prometheus import metrics, PrometheusMiddleware

app = Starlette()

app.add_middleware(PrometheusMiddleware)
app.add_route("/metrics/", metrics)
```

Metrics for paths that do not match any Starlette route can be filtered by passing
`filter_unhandled_paths=True` argument to `add_middleware` method.

## Contributing

This project is absolutely open to contributions so if you have a nice idea, create an issue to let the community 
discuss it.

