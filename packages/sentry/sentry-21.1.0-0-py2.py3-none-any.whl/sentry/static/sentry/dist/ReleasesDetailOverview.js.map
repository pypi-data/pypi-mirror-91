{"version":3,"sources":["webpack:///./app/views/performance/transactionVitals/constants.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/components/discoverButton.tsx"],"names":["NUM_BUCKETS","PERCENTILE","WEB_VITAL_DETAILS","WebVital","FP","slug","name","t","acronym","description","failureThreshold","type","measurementType","FCP","LCP","FID","CLS","TTFB","RequestTime","LONG_WEB_VITAL_NAMES","Object","fromEntries","values","map","value","WEB_VITAL_ACRONYMS","FILTER_OPTIONS","label","_VITAL_GROUPS","vitals","min","precision","_COLORS","theme","charts","getColorPalette","reduce","count","length","reverse","VITAL_GROUPS","group","colors","splice","ZOOM_KEYS","keys","forEach","vital","vitalSlug","push","TransactionFilterOptions","transactionSummaryRouteWithQuery","orgSlug","transaction","projectID","query","unselectedSeries","display","trendDisplay","showTransactions","pathname","generateTransactionSummaryRoute","project","environment","statsPeriod","start","end","GenericDiscoverQuery","state","isLoading","tableFetchID","undefined","error","tableData","pageLinks","_shouldRefetchData","prevProps","thisAPIPayload","getPayload","props","otherAPIPayload","isAPIPayloadSimilar","limit","route","cursor","fetchData","api","beforeFetch","afterFetch","eventView","setError","noPagination","isValid","url","Symbol","apiPayload","setState","per_page","requestPromise","method","includeAllArgs","then","data","jqXHR","prevState","getResponseHeader","err","responseJSON","detail","this","refetchCondition","eventViewValidation","shouldRefetchExternal","shouldRefetchData","getRequestPayload","getEventsAPIPayload","location","childrenProps","children","React","Component","DiscoverQuery","withApi","DiscoverButton","buttonProps","features","hasFeature","disabled"],"mappings":"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","file":"ReleasesDetailOverview.js","sourcesContent":["import {t} from 'app/locale';\nimport {SelectValue} from 'app/types';\nimport {measurementType, WebVital} from 'app/utils/discover/fields';\nimport theme from 'app/utils/theme';\n\nimport {Vital, VitalGroup} from './types';\n\nexport const NUM_BUCKETS = 100;\n\nexport const PERCENTILE = 0.75;\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    failureThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    failureThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    failureThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    failureThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    failureThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    failureThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    failureThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\n// translate known short form names into their long forms\nexport const LONG_WEB_VITAL_NAMES = Object.fromEntries(\n  Object.values(WEB_VITAL_DETAILS).map(value => {\n    return [value.slug, value.name];\n  })\n);\n\nexport const WEB_VITAL_ACRONYMS = Object.fromEntries(\n  Object.values(WEB_VITAL_DETAILS).map(value => {\n    return [value.slug, value.acronym];\n  })\n);\n\nexport const FILTER_OPTIONS: SelectValue<string>[] = [\n  {label: t('Exclude Outliers'), value: 'exclude_outliers'},\n  {label: t('View All'), value: 'all'},\n];\n\n/**\n * This defines the grouping for histograms. Histograms that are in the same group\n * will be queried together on initial load for alignment. However, the zoom controls\n * are defined for each measurement independently.\n */\nconst _VITAL_GROUPS = [\n  {\n    vitals: [WebVital.FP, WebVital.FCP, WebVital.LCP],\n    min: 0,\n  },\n  {\n    vitals: [WebVital.FID],\n    min: 0,\n    precision: 2,\n  },\n  {\n    vitals: [WebVital.CLS],\n    min: 0,\n    precision: 2,\n  },\n];\n\nconst _COLORS = [\n  ...theme.charts.getColorPalette(\n    _VITAL_GROUPS.reduce((count, {vitals}) => count + vitals.length, 0) - 1\n  ),\n].reverse();\n\nexport const VITAL_GROUPS: VitalGroup[] = _VITAL_GROUPS.map(group => ({\n  ...group,\n  colors: _COLORS.splice(0, group.vitals.length),\n}));\n\nexport const ZOOM_KEYS = _VITAL_GROUPS.reduce((keys: string[], {vitals}) => {\n  vitals.forEach(vital => {\n    const vitalSlug = WEB_VITAL_DETAILS[vital].slug;\n    keys.push(`${vitalSlug}Start`);\n    keys.push(`${vitalSlug}End`);\n  });\n  return keys;\n}, []);\n","import {Query} from 'history';\n\nimport {TrendFunctionField} from '../trends/types';\n\nimport {DisplayModes} from './charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendDisplay,\n  showTransactions,\n}: {\n  orgSlug: string;\n  transaction: string;\n  query: Query;\n  display?: DisplayModes;\n  trendDisplay?: TrendFunctionField;\n  unselectedSeries?: string | string[];\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendDisplay,\n    },\n  };\n}\n","import React from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'app/actionCreators/events';\nimport {Client} from 'app/api';\nimport EventView, {\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'app/utils/discover/eventView';\n\nexport type GenericChildrenProps<T> = {\n  isLoading: boolean;\n  error: null | string;\n  tableData: T | null;\n  pageLinks: null | string;\n};\n\nexport type DiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  eventView: EventView;\n  orgSlug: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n};\n\ntype RequestProps<P> = DiscoverQueryProps & P;\n\ntype ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype Props<T, P> = RequestProps<P> &\n  ReactProps<T> & {\n    /**\n     * Route to the endpoint\n     */\n    route: string;\n    /**\n     * Allows components to modify the payload before it is set.\n     */\n    getRequestPayload?: (props: Props<T, P>) => any;\n    /**\n     * An external hook in addition to the event view check to check if data should be refetched\n     */\n    shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n    /**\n     * A hook before fetch that can be used to do things like clearing the api\n     */\n    beforeFetch?: (api: Client) => void;\n    /**\n     * A hook to modify data into the correct output after data has been received\n     */\n    afterFetch?: (data: any, props: Props<T, P>) => T;\n    /**\n     * A callback to set an error so that the error can be rendered in parent components\n     */\n    setError?: (msg: string | undefined) => void;\n  };\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass GenericDiscoverQuery<T, P> extends React.Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if we aren't already loading,\n    const refetchCondition = !this.state.isLoading && this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    if (this.props.getRequestPayload) {\n      return this.props.getRequestPayload(props);\n    }\n    return props.eventView.getEventsAPIPayload(props.location);\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  fetchData = () => {\n    const {\n      api,\n      beforeFetch,\n      afterFetch,\n      eventView,\n      orgSlug,\n      route,\n      limit,\n      cursor,\n      setError,\n      noPagination,\n    } = this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    if (limit) {\n      apiPayload.per_page = limit;\n    }\n    if (noPagination) {\n      apiPayload.noPagination = noPagination;\n    }\n    if (cursor) {\n      apiPayload.cursor = cursor;\n    }\n\n    beforeFetch?.(api);\n\n    api\n      .requestPromise(url, {\n        method: 'GET',\n        includeAllArgs: true,\n        query: {\n          // marking apiPayload as any so as to not cause typescript errors\n          ...(apiPayload as any),\n        },\n      })\n      .then(([data, _, jqXHR]) => {\n        if (this.state.tableFetchID !== tableFetchID) {\n          // invariant: a different request was initiated after this request\n          return;\n        }\n\n        const tableData = afterFetch ? afterFetch(data, this.props) : data;\n\n        this.setState(prevState => ({\n          isLoading: false,\n          tableFetchID: undefined,\n          error: null,\n          pageLinks: jqXHR?.getResponseHeader('Link') ?? prevState.pageLinks,\n          tableData,\n        }));\n      })\n      .catch(err => {\n        const error = err?.responseJSON?.detail ?? null;\n        this.setState({\n          isLoading: false,\n          tableFetchID: undefined,\n          error,\n          tableData: null,\n        });\n        if (setError) {\n          setError(error);\n        }\n      });\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\nexport default GenericDiscoverQuery;\n","import React from 'react';\n\nimport {MetaType} from 'app/utils/discover/eventView';\nimport withApi from 'app/utils/withApi';\n\nimport GenericDiscoverQuery, {DiscoverQueryProps} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  id: string;\n  [key: string]: React.ReactText;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\nfunction DiscoverQuery(props: DiscoverQueryProps) {\n  return <GenericDiscoverQuery<TableData, {}> route=\"eventsv2\" {...props} />;\n}\n\nexport default withApi(DiscoverQuery);\n","import React from 'react';\n\nimport Feature from 'app/components/acl/feature';\nimport Button from 'app/components/button';\n\ntype Props = React.PropsWithChildren<{\n  className?: string;\n}> &\n  React.ComponentProps<typeof Button>;\n\n/**\n * Provide a button that turns itself off if the current organization\n * doesn't have access to discover results.\n */\nfunction DiscoverButton({children, ...buttonProps}: Props) {\n  return (\n    <Feature features={['organizations:discover-basic']}>\n      {({hasFeature}) => (\n        <Button disabled={!hasFeature} {...buttonProps}>\n          {children}\n        </Button>\n      )}\n    </Feature>\n  );\n}\n\nexport default DiscoverButton;\n"],"sourceRoot":""}