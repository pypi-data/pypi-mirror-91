{"version":3,"sources":["webpack:///./app/components/forms/multiSelectControl.jsx","webpack:///./app/views/settings/project/projectOwnership/selectOwners.tsx","webpack:///./app/views/settings/project/projectOwnership/ruleBuilder.tsx","webpack:///./app/views/settings/project/projectOwnership/ownerInput.tsx"],"names":["React","forwardRef","props","ref","forwardedRef","multiple","ValueComponent","value","onRemove","onClick","actor","size","getSearchKeyForUser","user","email","toLowerCase","name","SelectOwners","state","loading","inputValue","selectRef","createRef","renderUserBadge","avatarSize","hideEmail","useLink","createMentionableUser","buildUserId","id","label","searchKey","type","createUnmentionableUser","disabled","DisabledLabel","position","title","t","createMentionableTeam","team","buildTeamId","slug","createUnmentionableTeam","canAddTeam","organization","access","includes","Container","AddToProjectButton","borderless","handleAddTeamToProject","bind","icon","isCircled","handleChange","newValue","onChange","handleInputChange","setState","onInputChange","queryMembers","debounce","query","cb","api","requestPromise","then","data","err","handleLoadOptions","usersInProject","getMentionableUsers","teamsInProject","getMentionableTeams","teamsNotInProject","getTeamsNotInProject","usersInProjectById","map","Promise","resolve","reject","result","members","filter","indexOf","options","prevProps","isEqual","this","projects","closeSelectMenu","MemberListStore","getAll","project","projectData","ProjectsStore","getBySlug","teams","TeamStore","excludedTeamIds","current","node","ReactDOM","findDOMNode","input","querySelector","blur","oldValue","addTeamToProject","deprecatedSelectControl","filterOptions","filterText","loadOptions","defaultOptions","async","clearable","cache","valueComponent","placeholder","css","Component","withApi","withProjects","Button","initialState","text","tagName","owners","isValid","getMatchPlaceholder","RuleBuilder","checkIsValid","length","handleTypeChange","val","handleTagNameChangeValue","e","target","handleChangeValue","handleChangeOwners","handleAddRule","ownerText","owner","getById","join","quotedText","match","rule","onAddRule","addErrorMessage","handleSelectCandidate","urls","paths","Fragment","Candidates","v","RuleCandidate","key","StyledIconAdd","StyledTextOverflow","TypeHint","BuilderBar","BuilderSelect","style","width","BuilderTagNameInput","BuilderInput","Divider","direction","SelectOwnersWrapper","AddButton","priority","p","theme","border","TextOverflow","familyMono","IconAdd","space","SelectField","Input","IconChevron","OwnerInput","hasChanges","error","handleUpdateOwnership","request","Client","method","raw","addSuccessMessage","responseJSON","status","startsWith","initialText","InvalidOwners","SyntaxOverlay","line","parseInt","member","display","projectWithTeams","onKeyDown","metaKey","StyledTextArea","spellCheck","autoComplete","autoCorrect","autoCapitalize","ActionBar","parseError","SaveButton","defaultProps","inputStyles","TextareaAutosize"],"mappings":"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","file":"CreateOwnershipRuleModal~ProjectOwnership.js","sourcesContent":["import React from 'react';\n\nimport SelectControl from 'app/components/forms/selectControl';\n\nexport default React.forwardRef(function MultiSelectControl(props, ref) {\n  return <SelectControl forwardedRef={ref} {...props} multiple />;\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport {addTeamToProject} from 'app/actionCreators/projects';\nimport {Client} from 'app/api';\nimport ActorAvatar from 'app/components/avatar/actorAvatar';\nimport Button from 'app/components/button';\nimport MultiSelectControl from 'app/components/forms/multiSelectControl';\nimport IdBadge from 'app/components/idBadge';\nimport Tooltip from 'app/components/tooltip';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport TeamStore from 'app/stores/teamStore';\nimport {Actor, Member, Organization, Project, Team, User} from 'app/types';\nimport {buildTeamId, buildUserId} from 'app/utils';\nimport withApi from 'app/utils/withApi';\nimport withProjects from 'app/utils/withProjects';\n\nexport type Owner = {\n  value: string;\n  label: React.ReactNode;\n  searchKey: string;\n  actor: Actor;\n  disabled?: boolean;\n};\n\ntype ValueProps = {\n  value: Owner;\n  onRemove: (item: Owner) => void;\n};\n\nfunction ValueComponent({value, onRemove}: ValueProps) {\n  return (\n    <a onClick={() => onRemove(value)}>\n      <ActorAvatar actor={value.actor} size={28} />\n    </a>\n  );\n}\n\nconst getSearchKeyForUser = (user: User) =>\n  `${user.email && user.email.toLowerCase()} ${user.name && user.name.toLowerCase()}`;\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n  value: any;\n  onChange: (owners: Owner[]) => void;\n  disabled: boolean;\n  onInputChange?: (text: string) => void;\n};\n\ntype State = {\n  loading: boolean;\n  inputValue: string;\n};\n\nclass SelectOwners extends React.Component<Props, State> {\n  state = {\n    loading: false,\n    inputValue: '',\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    // Once a team has been added to the project the menu can be closed.\n    if (!isEqual(this.props.projects, prevProps.projects)) {\n      this.closeSelectMenu();\n    }\n  }\n\n  private selectRef = React.createRef<React.ReactInstance>();\n\n  renderUserBadge = (user: User) => (\n    <IdBadge avatarSize={24} user={user} hideEmail useLink={false} />\n  );\n\n  createMentionableUser = (user: User): Owner => ({\n    value: buildUserId(user.id),\n    label: this.renderUserBadge(user),\n    searchKey: getSearchKeyForUser(user),\n    actor: {\n      type: 'user' as const,\n      id: user.id,\n      name: user.name,\n    },\n  });\n\n  createUnmentionableUser = ({user}): Owner => ({\n    ...this.createMentionableUser(user),\n    disabled: true,\n    label: (\n      <DisabledLabel>\n        <Tooltip\n          position=\"left\"\n          title={t('%s is not a member of project', user.name || user.email)}\n        >\n          {this.renderUserBadge(user)}\n        </Tooltip>\n      </DisabledLabel>\n    ),\n  });\n\n  createMentionableTeam = (team: Team): Owner => ({\n    value: buildTeamId(team.id),\n    label: <IdBadge team={team} />,\n    searchKey: `#${team.slug}`,\n    actor: {\n      type: 'team' as const,\n      id: team.id,\n      name: team.slug,\n    },\n  });\n\n  createUnmentionableTeam = (team: Team): Owner => {\n    const {organization} = this.props;\n    const canAddTeam = organization.access.includes('project:write');\n\n    return {\n      ...this.createMentionableTeam(team),\n      disabled: true,\n      label: (\n        <Container>\n          <DisabledLabel>\n            <Tooltip\n              position=\"left\"\n              title={t('%s is not a member of project', `#${team.slug}`)}\n            >\n              <IdBadge team={team} />\n            </Tooltip>\n          </DisabledLabel>\n          <Tooltip\n            title={\n              canAddTeam\n                ? t('Add %s to project', `#${team.slug}`)\n                : t('You do not have permission to add team to project.')\n            }\n          >\n            <AddToProjectButton\n              size=\"zero\"\n              borderless\n              disabled={!canAddTeam}\n              onClick={this.handleAddTeamToProject.bind(this, team)}\n              icon={<IconAdd isCircled />}\n            />\n          </Tooltip>\n        </Container>\n      ),\n    };\n  };\n\n  getMentionableUsers() {\n    return MemberListStore.getAll().map(this.createMentionableUser);\n  }\n\n  getMentionableTeams() {\n    const {project} = this.props;\n    const projectData = ProjectsStore.getBySlug(project.slug);\n\n    if (!projectData) {\n      return [];\n    }\n\n    return projectData.teams.map(this.createMentionableTeam);\n  }\n\n  /**\n   * Get list of teams that are not in the current project, for use in `MultiSelectMenu`\n   */\n  getTeamsNotInProject(teamsInProject: Owner[] = []) {\n    const teams = TeamStore.getAll() || [];\n    const excludedTeamIds = teamsInProject.map(({actor}) => actor.id);\n\n    return teams\n      .filter(team => excludedTeamIds.indexOf(team.id) === -1)\n      .map(this.createUnmentionableTeam);\n  }\n\n  /**\n   * Closes the select menu by blurring input if possible since that seems to be the only\n   * way to close it.\n   */\n  closeSelectMenu() {\n    // Close select menu\n    if (this.selectRef.current) {\n      // eslint-disable-next-line react/no-find-dom-node\n      const node = ReactDOM.findDOMNode(this.selectRef.current);\n      const input: HTMLInputElement | null = (node as Element)?.querySelector(\n        '.Select-input input'\n      );\n      if (input) {\n        // I don't think there's another way to close `react-select`\n        input.blur();\n      }\n    }\n  }\n\n  async handleAddTeamToProject(team) {\n    const {api, organization, project, value} = this.props;\n    // Copy old value\n    const oldValue = [...value];\n\n    // Optimistic update\n    this.props.onChange([...this.props.value, this.createMentionableTeam(team)]);\n\n    try {\n      // Try to add team to project\n      // Note: we can't close select menu here because we have to wait for ProjectsStore to update first\n      // The reason for this is because we have little control over `react-select`'s `AsyncSelect`\n      // We can't control when `handleLoadOptions` gets called, but it gets called when select closes, so\n      // wait for store to update before closing the menu. Otherwise, we'll have stale items in the select menu\n      await addTeamToProject(api, organization.slug, project.slug, team);\n    } catch (err) {\n      // Unable to add team to project, revert select menu value\n      this.props.onChange(oldValue);\n      this.closeSelectMenu();\n    }\n  }\n\n  handleChange = (newValue: Owner[]) => {\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (inputValue: string) => {\n    this.setState({inputValue});\n\n    if (this.props.onInputChange) {\n      this.props.onInputChange(inputValue);\n    }\n  };\n\n  queryMembers = debounce((query, cb) => {\n    const {api, organization} = this.props;\n\n    // Because this function is debounced, the component can potentially be\n    // unmounted before this fires, in which case, `this.api` is null\n    if (!api) {\n      return null;\n    }\n\n    return api\n      .requestPromise(`/organizations/${organization.slug}/members/`, {\n        query: {query},\n      })\n      .then(\n        (data: Member[]) => cb(null, data),\n        err => cb(err)\n      );\n  }, 250);\n\n  handleLoadOptions = () => {\n    const usersInProject = this.getMentionableUsers();\n    const teamsInProject = this.getMentionableTeams();\n    const teamsNotInProject = this.getTeamsNotInProject(teamsInProject);\n    const usersInProjectById = usersInProject.map(({actor}) => actor.id);\n\n    // Return a promise for `react-select`\n    return new Promise((resolve, reject) => {\n      this.queryMembers(this.state.inputValue, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    })\n      .then(members =>\n        // Be careful here as we actually want the `users` object, otherwise it means user\n        // has not registered for sentry yet, but has been invited\n        members\n          ? (members as Member[])\n              .filter(({user}) => user && usersInProjectById.indexOf(user.id) === -1)\n              .map(this.createUnmentionableUser)\n          : []\n      )\n      .then(members => ({\n        options: [...usersInProject, ...teamsInProject, ...teamsNotInProject, ...members],\n      }));\n  };\n\n  render() {\n    return (\n      <MultiSelectControl\n        deprecatedSelectControl\n        filterOptions={(options, filterText) =>\n          options.filter(({searchKey}) => searchKey.indexOf(filterText) > -1)\n        }\n        ref={this.selectRef}\n        loadOptions={this.handleLoadOptions}\n        defaultOptions\n        async\n        clearable\n        disabled={this.props.disabled}\n        cache={false}\n        valueComponent={ValueComponent}\n        placeholder={t('owners')}\n        onInputChange={this.handleInputChange}\n        onChange={this.handleChange}\n        value={this.props.value}\n        css={{width: 200}}\n      />\n    );\n  }\n}\n\nexport default withApi(withProjects(SelectOwners));\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DisabledLabel = styled('div')`\n  opacity: 0.5;\n  overflow: hidden; /* Needed so that \"Add to team\" button can fit */\n`;\n\nconst AddToProjectButton = styled(Button)`\n  flex-shrink: 0;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport SelectField from 'app/components/forms/selectField';\nimport TextOverflow from 'app/components/textOverflow';\nimport {IconAdd, IconChevron} from 'app/icons';\nimport {t} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport Input from 'app/views/settings/components/forms/controls/input';\nimport SelectOwners, {\n  Owner,\n} from 'app/views/settings/project/projectOwnership/selectOwners';\n\nconst initialState = {\n  text: '',\n  tagName: '',\n  type: 'path',\n  owners: [],\n  isValid: false,\n};\n\nfunction getMatchPlaceholder(type: string): string {\n  switch (type) {\n    case 'path':\n      return 'src/example/*';\n    case 'url':\n      return 'https://example.com/settings/*';\n    case 'tag':\n      return 'tag-value';\n    default:\n      return '';\n  }\n}\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  onAddRule: (rule: string) => void;\n  urls: string[];\n  paths: string[];\n  disabled: boolean;\n};\n\ntype State = {\n  text: string;\n  tagName: string;\n  type: string;\n  owners: Owner[];\n  isValid: boolean;\n};\n\nclass RuleBuilder extends React.Component<Props, State> {\n  state: State = initialState;\n\n  checkIsValid = () => {\n    this.setState(state => ({\n      isValid: !!state.text && state.owners && !!state.owners.length,\n    }));\n  };\n\n  handleTypeChange = (val: string) => {\n    this.setState({type: val});\n    this.checkIsValid();\n  };\n\n  handleTagNameChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({tagName: e.target.value}, this.checkIsValid);\n  };\n\n  handleChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({text: e.target.value});\n    this.checkIsValid();\n  };\n\n  handleChangeOwners = (owners: Owner[]) => {\n    this.setState({owners});\n    this.checkIsValid();\n  };\n\n  handleAddRule = () => {\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    if (!isValid) {\n      addErrorMessage('A rule needs a type, a value, and one or more issue owners.');\n      return;\n    }\n\n    const ownerText = owners\n      .map(owner =>\n        owner.actor.type === 'team'\n          ? `#${owner.actor.name}`\n          : MemberListStore.getById(owner.actor.id)?.email\n      )\n      .join(' ');\n\n    const quotedText = text.match(/\\s/) ? `\"${text}\"` : text;\n\n    const rule = `${\n      type === 'tag' ? `tags.${tagName}` : type\n    }:${quotedText} ${ownerText}`;\n    this.props.onAddRule(rule);\n    this.setState(initialState);\n  };\n\n  handleSelectCandidate = (text: string, type: string) => {\n    this.setState({text, type});\n    this.checkIsValid();\n  };\n\n  render() {\n    const {urls, paths, disabled, project, organization} = this.props;\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    return (\n      <React.Fragment>\n        {(paths || urls) && (\n          <Candidates>\n            {paths &&\n              paths.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'path')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[PATH]</TypeHint>\n                </RuleCandidate>\n              ))}\n            {urls &&\n              urls.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'url')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[URL]</TypeHint>\n                </RuleCandidate>\n              ))}\n          </Candidates>\n        )}\n        <BuilderBar>\n          <BuilderSelect\n            deprecatedSelectControl\n            name=\"select-type\"\n            value={type}\n            onChange={this.handleTypeChange}\n            options={[\n              {value: 'path', label: t('Path')},\n              {value: 'tag', label: t('Tag')},\n              {value: 'url', label: t('URL')},\n            ]}\n            style={{width: 140}}\n            clearable={false}\n            disabled={disabled}\n          />\n          {type === 'tag' && (\n            <BuilderTagNameInput\n              value={tagName}\n              onChange={this.handleTagNameChangeValue}\n              disabled={disabled}\n              placeholder=\"tag-name\"\n            />\n          )}\n          <BuilderInput\n            value={text}\n            onChange={this.handleChangeValue}\n            disabled={disabled}\n            placeholder={getMatchPlaceholder(type)}\n          />\n          <Divider direction=\"right\" />\n          <SelectOwnersWrapper>\n            <SelectOwners\n              organization={organization}\n              project={project}\n              value={owners}\n              onChange={this.handleChangeOwners}\n              disabled={disabled}\n            />\n          </SelectOwnersWrapper>\n\n          <AddButton\n            priority=\"primary\"\n            disabled={!isValid}\n            onClick={this.handleAddRule}\n            icon={<IconAdd isCircled />}\n            size=\"small\"\n          />\n        </BuilderBar>\n      </React.Fragment>\n    );\n  }\n}\nconst Candidates = styled('div')`\n  margin-bottom: 10px;\n`;\n\nconst TypeHint = styled('div')`\n  color: ${p => p.theme.border};\n`;\n\nconst StyledTextOverflow = styled(TextOverflow)`\n  flex: 1;\n`;\n\nconst RuleCandidate = styled('div')`\n  font-family: ${p => p.theme.text.familyMono};\n  border: 1px solid ${p => p.theme.border};\n  background-color: #f8fafd;\n  padding-left: 5px;\n  margin-bottom: 3px;\n  cursor: pointer;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconAdd = styled(IconAdd)`\n  color: ${p => p.theme.border};\n  margin-right: 5px;\n  flex-shrink: 0;\n`;\n\nconst BuilderBar = styled('div')`\n  display: flex;\n  height: 40px;\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nconst BuilderSelect = styled(SelectField)`\n  margin-right: ${space(1.5)};\n  width: 50px;\n  flex-shrink: 0;\n`;\n\nconst BuilderInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n`;\n\nconst BuilderTagNameInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n  width: 200px;\n`;\n\nconst Divider = styled(IconChevron)`\n  color: ${p => p.theme.border};\n  flex-shrink: 0;\n  margin-right: 5px;\n`;\n\nconst SelectOwnersWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(1)};\n`;\n\nconst AddButton = styled(Button)`\n  padding: ${space(0.5)}; /* this sizes the button up to align with the inputs */\n`;\n\nexport default RuleBuilder;\n","import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport {inputStyles} from 'app/styles/input';\nimport {Organization, Project, Team} from 'app/types';\nimport theme from 'app/utils/theme';\n\nimport RuleBuilder from './ruleBuilder';\n\nconst defaultProps = {\n  urls: [] as string[],\n  paths: [] as string[],\n  disabled: false,\n};\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  initialText: string;\n} & typeof defaultProps;\n\ntype State = {\n  hasChanges: boolean;\n  text: string;\n  error: null | {\n    raw: string[];\n  };\n};\n\nclass OwnerInput extends React.Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    hasChanges: false,\n    text: '',\n    error: null,\n  };\n\n  parseError(error: State['error']) {\n    const text = error?.raw?.[0];\n    if (!text) {\n      return null;\n    }\n\n    if (text.startsWith('Invalid rule owners:')) {\n      return <InvalidOwners>{text}</InvalidOwners>;\n    } else {\n      return (\n        <SyntaxOverlay line={parseInt(text.match(/line (\\d*),/)?.[1] ?? '', 10) - 1} />\n      );\n    }\n  }\n\n  handleUpdateOwnership = () => {\n    const {organization, project} = this.props;\n    const {text} = this.state;\n    this.setState({error: null});\n\n    const api = new Client();\n    const request = api.requestPromise(\n      `/projects/${organization.slug}/${project.slug}/ownership/`,\n      {\n        method: 'PUT',\n        data: {raw: text || ''},\n      }\n    );\n\n    request\n      .then(() => {\n        addSuccessMessage(t('Updated issue ownership rules'));\n        this.setState({\n          hasChanges: false,\n          text,\n        });\n      })\n      .catch(error => {\n        this.setState({error: error.responseJSON});\n        if (error.status === 403) {\n          addErrorMessage(\n            t(\n              \"You don't have permission to modify issue ownership rules for this project\"\n            )\n          );\n        } else if (\n          error.status === 400 &&\n          error.responseJSON.raw &&\n          error.responseJSON.raw[0].startsWith('Invalid rule owners:')\n        ) {\n          addErrorMessage(\n            t('Unable to save issue ownership rule changes: ' + error.responseJSON.raw[0])\n          );\n        } else {\n          addErrorMessage(t('Unable to save issue ownership rule changes'));\n        }\n      });\n\n    return request;\n  };\n\n  mentionableUsers() {\n    return MemberListStore.getAll().map(member => ({\n      id: member.id,\n      display: member.email,\n      email: member.email,\n    }));\n  }\n\n  mentionableTeams() {\n    const {project} = this.props;\n    const projectWithTeams = ProjectsStore.getBySlug(project.slug);\n    if (!projectWithTeams) {\n      return [];\n    }\n    return projectWithTeams.teams.map((team: Team) => ({\n      id: team.id,\n      display: `#${team.slug}`,\n      email: team.id,\n    }));\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({\n      hasChanges: true,\n      text: e.target.value,\n    });\n  };\n\n  handleAddRule = (rule: string) => {\n    const {initialText} = this.props;\n    this.setState(\n      ({text}) => ({\n        text: (text || initialText) + '\\n' + rule,\n      }),\n      this.handleUpdateOwnership\n    );\n  };\n\n  render() {\n    const {project, organization, disabled, urls, paths, initialText} = this.props;\n    const {hasChanges, text, error} = this.state;\n\n    return (\n      <React.Fragment>\n        <RuleBuilder\n          urls={urls}\n          paths={paths}\n          organization={organization}\n          project={project}\n          onAddRule={this.handleAddRule.bind(this)}\n          disabled={disabled}\n        />\n        <div\n          style={{position: 'relative'}}\n          onKeyDown={e => {\n            if (e.metaKey && e.key === 'Enter') {\n              this.handleUpdateOwnership();\n            }\n          }}\n        >\n          <StyledTextArea\n            placeholder={\n              '#example usage\\n' +\n              'path:src/example/pipeline/* person@sentry.io #infra\\n' +\n              'url:http://example.com/settings/* #product\\n' +\n              'tags.sku_class:enterprise #enterprise'\n            }\n            onChange={this.handleChange}\n            disabled={disabled}\n            value={text || initialText}\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            theme={theme}\n          />\n          <ActionBar>\n            <div>{this.parseError(error)}</div>\n            <SaveButton>\n              <Button\n                size=\"small\"\n                priority=\"primary\"\n                onClick={this.handleUpdateOwnership}\n                disabled={disabled || !hasChanges}\n              >\n                {t('Save Changes')}\n              </Button>\n            </SaveButton>\n          </ActionBar>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst TEXTAREA_PADDING = 4;\nconst TEXTAREA_LINE_HEIGHT = 24;\n\nconst ActionBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst SyntaxOverlay = styled('div')<{line: number}>`\n  ${inputStyles};\n  width: 100%;\n  height: ${TEXTAREA_LINE_HEIGHT}px;\n  background-color: red;\n  opacity: 0.1;\n  pointer-events: none;\n  position: absolute;\n  top: ${({line}) => TEXTAREA_PADDING + line * 24}px;\n`;\n\nconst SaveButton = styled('div')`\n  text-align: end;\n  padding-top: 10px;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${inputStyles};\n  min-height: 140px;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  padding-top: ${TEXTAREA_PADDING}px;\n  line-height: ${TEXTAREA_LINE_HEIGHT}px;\n`;\n\nconst InvalidOwners = styled('div')`\n  color: ${p => p.theme.error};\n  font-weight: bold;\n  margin-top: 12px;\n`;\n\nexport default OwnerInput;\n"],"sourceRoot":""}