{"version":3,"sources":["webpack:///./app/views/organizationIntegrations/addIntegration.tsx","webpack:///./app/views/organizationIntegrations/integrationIcon.tsx","webpack:///./app/views/organizationIntegrations/integrationItem.tsx","webpack:///./app/views/organizationIntegrations/addIntegrationButton.tsx","webpack:///./app/views/organizationIntegrations/installedIntegration.tsx","webpack:///./app/views/organizationIntegrations/integrationDetailedView.tsx"],"names":["AddIntegration","dialog","openDialog","urlParams","integrationId","props","trackIntegrationEvent","eventKey","eventName","integration","provider","key","integration_type","analyticsParams","organization","setupDialog","url","width","height","computeCenteredWindow","left","top","query","integration_id","account","installUrl","queryString","opts","window","open","focus","didReceiveMessage","message","origin","document","location","source","data","success","addSuccessMessage","t","name","onInstall","addErrorMessage","error","addEventListener","this","removeEventListener","close","screenLeft","undefined","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","children","React","Component","StyledIcon","p","size","Icon","state","imgSrc","icon","src","onError","setState","ICON_PATHS","DEFAULT_ICON","IntegrationIcon","pluginId","IntegrationItem","compact","Flex","Labels","IntegrationName","data-test-id","DomainName","domainName","defaultProps","space","theme","gray200","gray400","AddIntegrationButton","buttonText","onAddIntegration","reinstall","buttonProps","label","metadata","noun","disabled","canAdd","title","onClick","InstalledIntegration","handleReAuthIntegration","onReAuthIntegration","handleUninstallClick","aspects","removal_dialog","body","actionText","onRemove","className","showReauthMessage","removeConfirmProps","status","canDisable","disableConfirmProps","access","hasAccess","IntegrationFlex","id","IntegrationItemBox","priority","position","StyledButton","borderless","to","slug","onConfirming","IntegrationStatus","getRemovalBodyAndText","Fragment","type","confirmText","onConfirm","handleRemove","disable_dialog","onDisable","Button","gray300","color","titleText","IntegrationStatusText","IntegrationDetailedView","orgId","params","router","push","origIntegrations","configurations","integrations","filter","i","options","method","api","request","uninstallationUrl","dynamicDisplayInformation","integration_detail","split","orgName","accountType","handleExternalInstall","integrationSlug","disabledFromFeatures","userHasAccess","style","marginBottom","view","already_installed","installationStatus","externalInstall","href","external","renderRequestIntegrationButton","length","hasWorkspaceApp","some","isSlackWorkspaceApp","features","hasFeature","getReauthAlertText","map","InstallWrapper","renderEmptyConfigurations","information","providers","description","author","alerts","item","text","noticeText","source_url","issue_url","isEnabled","AbstractIntegrationDetailedView","border","background","withOrganization"],"mappings":"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","file":"IntegrationDetailedView.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as queryString from 'query-string';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport {IntegrationProvider, IntegrationWithConfig, Organization} from 'app/types';\nimport {trackIntegrationEvent} from 'app/utils/integrationUtil';\n\ntype Props = {\n  children: (\n    openDialog: (urlParams?: {[key: string]: string}) => void\n  ) => React.ReactNode;\n  provider: IntegrationProvider;\n  onInstall: (data: IntegrationWithConfig) => void;\n  integrationId?: string;\n  account?: string;\n  organization?: Organization; //for analytics\n  analyticsParams?: {\n    view: 'integrations_directory_integration_detail' | 'integrations_directory';\n    already_installed: boolean;\n  };\n};\n\nexport default class AddIntegration extends React.Component<Props> {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    provider: PropTypes.object.isRequired,\n    onInstall: PropTypes.func.isRequired,\n    integrationId: PropTypes.string,\n    account: PropTypes.string,\n    organization: SentryTypes.Organization,\n  };\n\n  componentDidMount() {\n    window.addEventListener('message', this.didReceiveMessage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.didReceiveMessage);\n    this.dialog && this.dialog.close();\n  }\n\n  dialog: Window | null = null;\n\n  computeCenteredWindow(width: number, height: number) {\n    //Taken from: https://stackoverflow.com/questions/4068373/center-a-popup-window-on-screen\n    const screenLeft =\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n\n    const screenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const innerWidth = window.innerWidth\n      ? window.innerWidth\n      : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : screen.width;\n\n    const innerHeight = window.innerHeight\n      ? window.innerHeight\n      : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : screen.height;\n\n    const left = innerWidth / 2 - width / 2 + screenLeft;\n    const top = innerHeight / 2 - height / 2 + screenTop;\n\n    return {left, top};\n  }\n\n  openDialog = (urlParams?: {[key: string]: string}) => {\n    const {integrationId} = this.props;\n    //if we have the integrationId, it's used for the re-auth flow\n    trackIntegrationEvent(\n      {\n        eventKey: integrationId\n          ? 'integrations.reauth_start'\n          : 'integrations.installation_start',\n        eventName: integrationId\n          ? 'Integrations: Reauth Start'\n          : 'Integrations: Installation Start',\n        integration: this.props.provider.key,\n        integration_type: 'first_party',\n        ...this.props.analyticsParams,\n      },\n      this.props.organization\n    );\n    const name = 'sentryAddIntegration';\n    const {url, width, height} = this.props.provider.setupDialog;\n    const {left, top} = this.computeCenteredWindow(width, height);\n\n    const query: {[key: string]: string} = {...urlParams};\n\n    if (integrationId) {\n      query.integration_id = integrationId;\n    }\n\n    if (this.props.account) {\n      query.account = this.props.account;\n    }\n\n    const installUrl = `${url}?${queryString.stringify(query)}`;\n    const opts = `scrollbars=yes,width=${width},height=${height},top=${top},left=${left}`;\n\n    this.dialog = window.open(installUrl, name, opts);\n    this.dialog && this.dialog.focus();\n  };\n\n  didReceiveMessage = (message: MessageEvent) => {\n    const {integrationId} = this.props;\n    if (message.origin !== document.location.origin) {\n      return;\n    }\n\n    if (message.source !== this.dialog) {\n      return;\n    }\n\n    const {success, data} = message.data;\n    this.dialog = null;\n\n    if (!success) {\n      addErrorMessage(data.error);\n      return;\n    }\n\n    if (!data) {\n      return;\n    }\n    trackIntegrationEvent(\n      {\n        eventKey: integrationId\n          ? 'integrations.reauth_complete'\n          : 'integrations.installation_complete',\n        eventName: integrationId\n          ? 'Integrations: Reauth Complete'\n          : 'Integrations: Installation Complete',\n        integration: this.props.provider.key,\n        integration_type: 'first_party',\n        ...this.props.analyticsParams,\n      },\n      this.props.organization\n    );\n    addSuccessMessage(t('%s added', this.props.provider.name));\n    this.props.onInstall(data);\n  };\n\n  render() {\n    return this.props.children(this.openDialog);\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nimport PluginIcon, {DEFAULT_ICON, ICON_PATHS} from 'app/plugins/components/pluginIcon';\nimport {Integration} from 'app/types';\n\ntype Props = {\n  integration: Integration;\n  size?: number;\n};\n\ntype IconProps = Pick<Props, 'size'>;\n\nconst StyledIcon = styled('img')<IconProps>`\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n  border-radius: 2px;\n  display: block;\n`;\n\nclass Icon extends React.Component<Props> {\n  state = {\n    imgSrc: this.props.integration.icon,\n  };\n\n  render() {\n    const {integration, size} = this.props;\n\n    return (\n      <StyledIcon\n        size={size}\n        src={this.state.imgSrc}\n        onError={() => {\n          this.setState({imgSrc: ICON_PATHS[integration.provider.key] || DEFAULT_ICON});\n        }}\n      />\n    );\n  }\n}\n\nconst IntegrationIcon = ({integration, size = 32}: Props) =>\n  integration.icon ? (\n    <Icon size={size} integration={integration} />\n  ) : (\n    <PluginIcon size={size} pluginId={integration.provider.key} />\n  );\n\nIntegrationIcon.propTypes = {\n  integration: PropTypes.object.isRequired,\n  size: PropTypes.number,\n};\n\nexport default IntegrationIcon;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nimport space from 'app/styles/space';\nimport {Integration} from 'app/types';\nimport IntegrationIcon from 'app/views/organizationIntegrations/integrationIcon';\n\ntype DefaultProps = {\n  compact: boolean;\n};\n\ntype Props = DefaultProps & {\n  integration: Integration;\n};\nexport default class IntegrationItem extends React.Component<Props> {\n  static propTypes = {\n    integration: PropTypes.object.isRequired,\n    compact: PropTypes.bool,\n  };\n\n  static defaultProps: DefaultProps = {\n    compact: false,\n  };\n\n  render() {\n    const {integration, compact} = this.props;\n    return (\n      <Flex>\n        <div>\n          <IntegrationIcon size={compact ? 22 : 32} integration={integration} />\n        </div>\n        <Labels compact={compact}>\n          <IntegrationName data-test-id=\"integration-name\">\n            {integration.name}\n          </IntegrationName>\n          <DomainName compact={compact}>{integration.domainName}</DomainName>\n        </Labels>\n      </Flex>\n    );\n  }\n}\n\nconst Flex = styled('div')`\n  display: flex;\n`;\ntype StyledProps = Pick<Props, 'compact'>;\nconst Labels = styled('div')<StyledProps>`\n  box-sizing: border-box;\n  display: flex;\n  ${p => (p.compact ? 'align-items: center;' : '')};\n  flex-direction: ${p => (p.compact ? 'row' : 'column')};\n  padding-left: ${space(1)};\n  min-width: 0;\n  justify-content: center;\n`;\n\nconst IntegrationName = styled('div')`\n  font-size: 1.6rem;\n`;\n\n// Not using the overflowEllipsis style import here\n// as it sets width 100% which causes layout issues in the\n// integration list.\nconst DomainName = styled('div')<StyledProps>`\n  color: ${p => (p.compact ? p.theme.gray200 : p.theme.gray400)};\n  margin-left: ${p => (p.compact ? space(1) : 'inherit')};\n  margin-top: ${p => (!p.compact ? space(0.25) : 'inherit')};\n  font-size: 1.4rem;\n  line-height: 1.2;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import React from 'react';\n\nimport Button from 'app/components/button';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport {IntegrationProvider, IntegrationWithConfig, Organization} from 'app/types';\n\nimport AddIntegration from './addIntegration';\n\ntype Props = {\n  provider: IntegrationProvider;\n  onAddIntegration: (data: IntegrationWithConfig) => void;\n  buttonText?: string;\n  reinstall?: boolean;\n  integrationId?: string;\n  organization?: Organization; //for analytics\n  analyticsParams?: {\n    view: 'integrations_directory_integration_detail';\n    already_installed: boolean;\n  };\n} & React.ComponentProps<typeof Button>;\n\nexport default class AddIntegrationButton extends React.Component<Props> {\n  render() {\n    const {\n      provider,\n      buttonText,\n      onAddIntegration,\n      organization,\n      reinstall,\n      integrationId,\n      analyticsParams,\n      ...buttonProps\n    } = this.props;\n\n    const label =\n      buttonText || t(reinstall ? 'Enable' : 'Add %s', provider.metadata.noun);\n\n    return (\n      <Tooltip\n        disabled={provider.canAdd}\n        title={`Integration cannot be added on Sentry. Enable this integration via the ${provider.name} instance.`}\n      >\n        <AddIntegration\n          provider={provider}\n          onInstall={onAddIntegration}\n          organization={organization}\n          analyticsParams={analyticsParams}\n          integrationId={integrationId}\n        >\n          {onClick => (\n            <Button\n              disabled={!provider.canAdd}\n              {...buttonProps}\n              onClick={() => onClick()}\n            >\n              {label}\n            </Button>\n          )}\n        </AddIntegration>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport CircleIndicator from 'app/components/circleIndicator';\nimport Confirm from 'app/components/confirm';\nimport Tooltip from 'app/components/tooltip';\nimport {IconDelete, IconFlag, IconSettings, IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Integration, IntegrationProvider, ObjectStatus, Organization} from 'app/types';\nimport {SingleIntegrationEvent} from 'app/utils/integrationUtil';\nimport theme from 'app/utils/theme';\n\nimport AddIntegrationButton from './addIntegrationButton';\nimport IntegrationItem from './integrationItem';\n\nexport type Props = {\n  organization: Organization;\n  provider: IntegrationProvider;\n  integration: Integration;\n  onRemove: (integration: Integration) => void;\n  onDisable: (integration: Integration) => void;\n  onReAuthIntegration: (integration: Integration) => void;\n  trackIntegrationEvent: (\n    options: Pick<SingleIntegrationEvent, 'eventKey' | 'eventName'>\n  ) => void; //analytics callback\n  className?: string;\n  showReauthMessage: boolean;\n};\n\nexport default class InstalledIntegration extends React.Component<Props> {\n  handleReAuthIntegration = (integration: Integration) => {\n    this.props.onReAuthIntegration(integration);\n  };\n\n  handleUninstallClick = () => {\n    this.props.trackIntegrationEvent({\n      eventKey: 'integrations.uninstall_clicked',\n      eventName: 'Integrations: Uninstall Clicked',\n    });\n  };\n\n  getRemovalBodyAndText(aspects: Integration['provider']['aspects']) {\n    if (aspects && aspects.removal_dialog) {\n      return {\n        body: aspects.removal_dialog.body,\n        actionText: aspects.removal_dialog.actionText,\n      };\n    } else {\n      return {\n        body: t(\n          'Deleting this integration will remove any project associated data. This action cannot be undone. Are you sure you want to delete this integration?'\n        ),\n        actionText: t('Delete'),\n      };\n    }\n  }\n\n  handleRemove(integration: Integration) {\n    this.props.onRemove(integration);\n    this.props.trackIntegrationEvent({\n      eventKey: 'integrations.uninstall_completed',\n      eventName: 'Integrations: Uninstall Completed',\n    });\n  }\n\n  get removeConfirmProps() {\n    const {integration} = this.props;\n    const {body, actionText} = this.getRemovalBodyAndText(integration.provider.aspects);\n\n    const message = (\n      <React.Fragment>\n        <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n          {t('Deleting this integration has consequences!')}\n        </Alert>\n        {body}\n      </React.Fragment>\n    );\n    return {\n      message,\n      confirmText: actionText,\n      onConfirm: () => this.handleRemove(integration),\n    };\n  }\n\n  get disableConfirmProps() {\n    const {integration} = this.props;\n    const {body, actionText} = integration.provider.aspects.disable_dialog || {};\n    const message = (\n      <React.Fragment>\n        <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n          {t('This integration cannot be removed in Sentry')}\n        </Alert>\n        {body}\n      </React.Fragment>\n    );\n\n    return {\n      message,\n      confirmText: actionText,\n      onConfirm: () => this.props.onDisable(integration),\n    };\n  }\n\n  render() {\n    const {\n      className,\n      integration,\n      provider,\n      organization,\n      showReauthMessage,\n    } = this.props;\n\n    const removeConfirmProps =\n      integration.status === 'active' && integration.provider.canDisable\n        ? this.disableConfirmProps\n        : this.removeConfirmProps;\n\n    return (\n      <Access access={['org:integrations']}>\n        {({hasAccess}) => (\n          <IntegrationFlex key={integration.id} className={className}>\n            <IntegrationItemBox>\n              <IntegrationItem integration={integration} />\n            </IntegrationItemBox>\n            <div>\n              {showReauthMessage && (\n                <Tooltip\n                  disabled={hasAccess}\n                  title={t(\n                    'You must be an organization owner, manager or admin to upgrade'\n                  )}\n                >\n                  <AddIntegrationButton\n                    disabled={!hasAccess}\n                    provider={provider}\n                    onAddIntegration={this.handleReAuthIntegration}\n                    integrationId={integration.id}\n                    priority=\"primary\"\n                    size=\"small\"\n                    buttonText={t('Upgrade Now')}\n                    organization={organization}\n                    icon={<IconWarning size=\"sm\" />}\n                  />\n                </Tooltip>\n              )}\n              <Tooltip\n                disabled={hasAccess}\n                position=\"left\"\n                title={t(\n                  'You must be an organization owner, manager or admin to configure'\n                )}\n              >\n                <StyledButton\n                  borderless\n                  icon={<IconSettings />}\n                  disabled={!hasAccess || integration.status !== 'active'}\n                  to={`/settings/${organization.slug}/integrations/${provider.key}/${integration.id}/`}\n                  data-test-id=\"integration-configure-button\"\n                >\n                  {t('Configure')}\n                </StyledButton>\n              </Tooltip>\n            </div>\n            <div>\n              <Tooltip\n                disabled={hasAccess}\n                title={t(\n                  'You must be an organization owner, manager or admin to uninstall'\n                )}\n              >\n                <Confirm\n                  priority=\"danger\"\n                  onConfirming={this.handleUninstallClick}\n                  disabled={!hasAccess}\n                  {...removeConfirmProps}\n                >\n                  <StyledButton\n                    disabled={!hasAccess}\n                    borderless\n                    icon={<IconDelete />}\n                    data-test-id=\"integration-remove-button\"\n                  >\n                    {t('Uninstall')}\n                  </StyledButton>\n                </Confirm>\n              </Tooltip>\n            </div>\n\n            <IntegrationStatus status={integration.status} />\n          </IntegrationFlex>\n        )}\n      </Access>\n    );\n  }\n}\n\nconst StyledButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n`;\n\nconst IntegrationFlex = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst IntegrationItemBox = styled('div')`\n  flex: 1;\n`;\n\nconst IntegrationStatus = styled(\n  (props: React.HTMLAttributes<HTMLElement> & {status: ObjectStatus}) => {\n    const {status, ...p} = props;\n    const color = status === 'active' ? theme.success : theme.gray300;\n    const titleText =\n      status === 'active'\n        ? t('This Integration can be disabled by clicking the Uninstall button')\n        : t('This Integration has been disconnected from the external provider');\n    return (\n      <Tooltip title={titleText}>\n        <div {...p}>\n          <CircleIndicator size={6} color={color} />\n          <IntegrationStatusText>{`${\n            status === 'active' ? t('enabled') : t('disabled')\n          }`}</IntegrationStatusText>\n        </div>\n      </Tooltip>\n    );\n  }\n)`\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme.gray300};\n  font-weight: light;\n  text-transform: capitalize;\n  &:before {\n    content: '|';\n    color: ${p => p.theme.gray200};\n    margin-right: ${space(1)};\n    font-weight: normal;\n  }\n`;\n\nconst IntegrationStatusText = styled('div')`\n  margin: 0 ${space(0.75)} 0 ${space(0.5)};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {RequestOptions} from 'app/api';\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport {IconFlag, IconOpen, IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Integration, IntegrationProvider} from 'app/types';\nimport {getReauthAlertText, isSlackWorkspaceApp} from 'app/utils/integrationUtil';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport AbstractIntegrationDetailedView from './abstractIntegrationDetailedView';\nimport AddIntegrationButton from './addIntegrationButton';\nimport InstalledIntegration from './installedIntegration';\n\ntype State = {\n  configurations: Integration[];\n  information: {providers: IntegrationProvider[]};\n};\n\nclass IntegrationDetailedView extends AbstractIntegrationDetailedView<\n  AbstractIntegrationDetailedView['props'],\n  State & AbstractIntegrationDetailedView['state']\n> {\n  getEndpoints(): ([string, string, any] | [string, string])[] {\n    const {orgId, integrationSlug} = this.props.params;\n    const baseEndpoints: ([string, string, any] | [string, string])[] = [\n      [\n        'information',\n        `/organizations/${orgId}/config/integrations/?provider_key=${integrationSlug}`,\n      ],\n      [\n        'configurations',\n        `/organizations/${orgId}/integrations/?provider_key=${integrationSlug}&includeConfig=0`,\n      ],\n    ];\n\n    return baseEndpoints;\n  }\n\n  get integrationType() {\n    return 'first_party' as const;\n  }\n\n  get provider() {\n    return this.state.information.providers[0];\n  }\n\n  get description() {\n    return this.metadata.description;\n  }\n\n  get author() {\n    return this.metadata.author;\n  }\n\n  get alerts() {\n    const provider = this.provider;\n    const metadata = this.metadata;\n    // The server response for integration installations includes old icon CSS classes\n    // We map those to the currently in use values to their react equivalents\n    // and fallback to IconFlag just in case.\n    const alerts = (metadata.aspects.alerts || []).map(item => {\n      switch (item.icon) {\n        case 'icon-warning':\n        case 'icon-warning-sm':\n          return {...item, icon: <IconWarning />};\n        default:\n          return {...item, icon: <IconFlag />};\n      }\n    });\n\n    if (!provider.canAdd && metadata.aspects.externalInstall) {\n      alerts.push({\n        type: 'warning',\n        icon: <IconOpen />,\n        text: metadata.aspects.externalInstall.noticeText,\n      });\n    }\n    return alerts;\n  }\n\n  get resourceLinks() {\n    const metadata = this.metadata;\n    return [\n      {url: metadata.source_url, title: 'View Source'},\n      {url: metadata.issue_url, title: 'Report Issue'},\n    ];\n  }\n\n  get metadata() {\n    return this.provider.metadata;\n  }\n\n  get isEnabled() {\n    return this.state.configurations.length > 0;\n  }\n\n  get installationStatus() {\n    return this.isEnabled ? 'Installed' : 'Not Installed';\n  }\n\n  get integrationName() {\n    return this.provider.name;\n  }\n\n  get featureData() {\n    return this.metadata.features;\n  }\n\n  onInstall = (integration: Integration) => {\n    // send the user to the configure integration view for that integration\n    const {orgId} = this.props.params;\n    this.props.router.push(\n      `/settings/${orgId}/integrations/${integration.provider.key}/${integration.id}/`\n    );\n  };\n\n  onRemove = (integration: Integration) => {\n    const {orgId} = this.props.params;\n\n    const origIntegrations = [...this.state.configurations];\n\n    const integrations = this.state.configurations.filter(i => i.id !== integration.id);\n    this.setState({configurations: integrations});\n\n    const options: RequestOptions = {\n      method: 'DELETE',\n      error: () => {\n        this.setState({configurations: origIntegrations});\n        addErrorMessage(t('Failed to remove Integration'));\n      },\n    };\n\n    this.api.request(`/organizations/${orgId}/integrations/${integration.id}/`, options);\n  };\n\n  onDisable = (integration: Integration) => {\n    let url: string;\n\n    // some integrations have a custom uninstalltion URL we show\n    const uninstallationUrl =\n      integration.dynamicDisplayInformation?.integration_detail?.uninstallationUrl;\n    if (uninstallationUrl) {\n      url = uninstallationUrl;\n    } else {\n      const [domainName, orgName] = integration.domainName.split('/');\n      if (integration.accountType === 'User') {\n        url = `https://${domainName}/settings/installations/`;\n      } else {\n        url = `https://${domainName}/organizations/${orgName}/settings/installations/`;\n      }\n    }\n\n    window.open(url, '_blank');\n  };\n\n  handleExternalInstall = () => {\n    this.trackIntegrationEvent({\n      eventKey: 'integrations.installation_start',\n      eventName: 'Integrations: Installation Start',\n    });\n  };\n\n  renderTopButton(disabledFromFeatures: boolean, userHasAccess: boolean) {\n    const {organization} = this.props;\n    const provider = this.provider;\n    const {metadata} = provider;\n\n    const size = 'small' as const;\n    const priority = 'primary' as const;\n\n    const buttonProps = {\n      style: {marginBottom: space(1)},\n      size,\n      priority,\n      'data-test-id': 'install-button',\n      disabled: disabledFromFeatures,\n      organization,\n    };\n\n    if (!userHasAccess) {\n      return this.renderRequestIntegrationButton();\n    }\n\n    if (provider.canAdd) {\n      return (\n        <AddIntegrationButton\n          provider={provider}\n          onAddIntegration={this.onInstall}\n          analyticsParams={{\n            view: 'integrations_directory_integration_detail',\n            already_installed: this.installationStatus !== 'Not Installed',\n          }}\n          {...buttonProps}\n        />\n      );\n    }\n    if (metadata.aspects.externalInstall) {\n      return (\n        <Button\n          icon={<IconOpen />}\n          href={metadata.aspects.externalInstall.url}\n          onClick={this.handleExternalInstall}\n          external\n          {...buttonProps}\n        >\n          {metadata.aspects.externalInstall.buttonText}\n        </Button>\n      );\n    }\n\n    // This should never happen but we can't return undefined without some refactoring.\n    return <React.Fragment />;\n  }\n\n  renderConfigurations() {\n    const {configurations} = this.state;\n    const {organization} = this.props;\n    const provider = this.provider;\n    if (configurations.length) {\n      // check if we have a workspace app to render the alert\n      const hasWorkspaceApp = configurations.some(isSlackWorkspaceApp);\n\n      return (\n        <Feature organization={organization} features={['slack-migration']}>\n          {({hasFeature}) => (\n            <div>\n              {hasFeature && hasWorkspaceApp && (\n                <Alert type=\"warning\" icon={<IconWarning size=\"sm\" />}>\n                  {getReauthAlertText(provider)}\n                </Alert>\n              )}\n              {configurations.map(integration => (\n                <InstallWrapper key={integration.id}>\n                  <InstalledIntegration\n                    organization={organization}\n                    provider={provider}\n                    integration={integration}\n                    onRemove={this.onRemove}\n                    onDisable={this.onDisable}\n                    onReAuthIntegration={this.onInstall}\n                    data-test-id={integration.id}\n                    trackIntegrationEvent={this.trackIntegrationEvent}\n                    showReauthMessage={hasFeature && isSlackWorkspaceApp(integration)}\n                  />\n                </InstallWrapper>\n              ))}\n            </div>\n          )}\n        </Feature>\n      );\n    }\n    return this.renderEmptyConfigurations();\n  }\n}\n\nconst InstallWrapper = styled('div')`\n  padding: ${space(2)};\n  border: 1px solid ${p => p.theme.border};\n  border-bottom: none;\n  background-color: ${p => p.theme.background};\n\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.border};\n  }\n`;\n\nexport default withOrganization(IntegrationDetailedView);\n"],"sourceRoot":""}