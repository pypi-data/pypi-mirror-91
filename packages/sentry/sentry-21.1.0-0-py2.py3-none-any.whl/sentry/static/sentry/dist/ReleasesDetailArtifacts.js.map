{"version":3,"sources":["webpack:///./app/components/alertLink.tsx","webpack:///./app/views/releases/detail/artifacts/index.tsx"],"names":["AlertLink","this","props","size","priority","icon","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","React","Component","defaultProps","linkProps","omit","p","theme","alert","backgroundLight","textColor","border","space","ReleaseArtifacts","params","organization","routeTitleGen","t","formatVersion","release","slug","project","context","fullWidth","encodeURIComponent","tct","sourceMaps","AsyncView","contextType","ReleaseContext","withOrganization"],"mappings":"gtBAkCMA,E,qIAQK,MAYHC,KAAKC,MAVPC,EAFK,EAELA,KACAC,EAHK,EAGLA,SACAC,EAJK,EAILA,KACAC,EALK,EAKLA,SACAC,EANK,EAMLA,QACAC,EAPK,EAOLA,oBACAC,EARK,EAQLA,aACAC,EATK,EASLA,GACAC,EAVK,EAULA,KACkBC,EAXb,EAWJ,gBAGH,OACE,YAACC,EAAD,CACEC,eAAcF,EACdF,GAAIA,EACJC,KAAMA,EACNJ,QAASA,EACTJ,KAAMA,EACNC,SAAUA,EACVI,oBAAqBA,EACrBC,aAAcA,GAEbJ,GAAQ,YAACU,EAAD,KAAcV,GACvB,YAACW,EAAD,KAAgBV,GAChB,YAACW,EAAD,KACE,YAAC,IAAD,CAAaC,UAAU,gB,GApCTC,IAAMC,WAAxBpB,E,wBAAAA,EACGqB,aAA6B,CAClCjB,SAAU,UACVD,KAAM,SACNK,qBAAqB,EACrBC,cAAc,GAsCHT,MAEf,IAAMa,EAAa,aAAO,YAAyD,IAAvDJ,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,KAAST,EAA4B,oCAC3EoB,EAAYC,IAAKrB,EAAO,CAAC,sBAAuB,WAAY,SAClE,OAAIS,EACK,YAAC,IAAD,OAAkBW,EAAlB,CAA6BX,KAAMA,EAAMF,aAAcA,KAGzD,YAAC,IAAD,OAAUa,EAAV,CAAqBZ,GAAIA,GAAM,QANrB,yCAAH,kCASM,SAAAc,GAAC,OAAIA,EAAEC,MAAMC,MAAMF,EAAEpB,UAAUuB,kBATrC,WAUL,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAVR,uBAWO,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,MAAMF,EAAEpB,UAAUyB,SAXtC,aAYH,SAAAL,GAAC,MAAgB,UAAXA,EAAErB,KAAF,UAAwB2B,YAAM,GAA9B,YAAoCA,YAAM,MAASA,YAAM,KAZ5D,mBAaG,SAAAN,GAAC,OAAKA,EAAEhB,oBAAsB,EAAIsB,YAAM,KAb3C,+FAmBE,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,MAAMF,EAAEpB,UAAUyB,SAnBjC,kBAuBVd,EAAc,YAAO,OAAP,0CAAH,uBAELe,YAAM,IAFD,IAESA,YAAM,KAFf,IAEuBA,YAAM,IAF7B,OAKXb,EAAW,YAAOF,EAAP,uCAAH,UACFe,YAAM,IADJ,OAIRd,EAAgB,YAAO,MAAP,4CAAH,wD,koBCxFbe,E,uIAGO,MACsB9B,KAAKC,MAA7B8B,EADE,EACFA,OAAQC,EADN,EACMA,aACf,OAAOC,YACLC,YAAE,yBAA0BC,YAAcJ,EAAOK,UACjDJ,EAAaK,MACb,K,mCAIS,IACJC,EAAWtC,KAAKuC,QAAhBD,QADI,EAEoBtC,KAAKC,MAA7B8B,EAFI,EAEJA,OAAQC,EAFJ,EAEIA,aAEf,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAMQ,WAAS,GACb,YAAC,IAAD,CACE/B,GAAE,oBAAeuB,EAAaK,KAA5B,qBACAC,EAAQD,KADR,wBAEcI,mBAAmBV,EAAOK,SAFxC,KAGFjC,SAAS,QAERuC,YAAI,oDAAqD,CACxDC,WAAY,qBAAIT,YAAE,yB,GA1BDU,KAAzBd,EACGe,YAAcC,iBAkCRC,sBAAiBjB","file":"ReleasesDetailArtifacts.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport AlertLink from 'app/components/alertLink';\nimport {Body, Main} from 'app/components/layouts/thirds';\nimport {t, tct} from 'app/locale';\nimport {Organization} from 'app/types';\nimport {formatVersion} from 'app/utils/formatters';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport {ReleaseContext} from '..';\n\ntype RouteParams = {\n  orgId: string;\n  release: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n};\n\nclass ReleaseArtifacts extends AsyncView<Props> {\n  static contextType = ReleaseContext;\n\n  getTitle() {\n    const {params, organization} = this.props;\n    return routeTitleGen(\n      t('Artifacts - Release %s', formatVersion(params.release)),\n      organization.slug,\n      false\n    );\n  }\n\n  renderBody() {\n    const {project} = this.context;\n    const {params, organization} = this.props;\n\n    return (\n      <Body>\n        <Main fullWidth>\n          <AlertLink\n            to={`/settings/${organization.slug}/projects/${\n              project.slug\n            }/source-maps/${encodeURIComponent(params.release)}/`}\n            priority=\"info\"\n          >\n            {tct('Artifacts were moved to [sourceMaps] in Settings.', {\n              sourceMaps: <u>{t('Source Maps')}</u>,\n            })}\n          </AlertLink>\n        </Main>\n      </Body>\n    );\n  }\n}\n\nexport default withOrganization(ReleaseArtifacts);\n"],"sourceRoot":""}