{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/admin/adminUserEdit.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","userEditForm","fields","name","type","required","label","t","help","REMOVE_BUTTON_LABEL","disable","delete","RemoveUserModal","state","deleteType","onRemove","props","closeModal","user","Fragment","tct","email","value","onChange","setState","choices","ModalFooter","priority","onClick","React","Component","AdminUserEdit","removeUser","actionTypes","deleteUser","deactivateUser","formModel","FormModel","userEndpoint","api","requestPromise","method","data","hardDelete","organizations","addSuccessMessage","browserHistory","replace","isActive","response","setInitialData","model","initialData","apiMethod","apiEndpoint","requireChanges","onSubmitError","addErrorMessage","onSubmitSuccess","extraButton","openModal","opts","style","marginLeft","space","forms","params","id","p","theme","border"],"mappings":"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","file":"AdminUserEdit.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {openModal} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport {t, tct} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport AsyncView from 'app/views/asyncView';\nimport RadioGroup from 'app/views/settings/components/forms/controls/radioGroup';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport FormModel from 'app/views/settings/components/forms/model';\n\nconst userEditForm = {\n  title: 'User details',\n  fields: [\n    {\n      name: 'name',\n      type: 'string',\n      required: true,\n      label: t('Name'),\n    },\n    {\n      name: 'username',\n      type: 'string',\n      required: true,\n      label: t('Username'),\n      help: t('The username is the unique id of the user in the system'),\n    },\n    {\n      name: 'email',\n      type: 'string',\n      required: true,\n      label: t('Email'),\n      help: t('The users primary email address'),\n    },\n    {\n      name: 'isActive',\n      type: 'boolean',\n      required: true,\n      label: t('Active'),\n      help: t(\n        'Designates whether this user should be treated as active. Unselect this instead of deleting accounts.'\n      ),\n    },\n    {\n      name: 'isStaff',\n      type: 'boolean',\n      required: true,\n      label: t('Admin'),\n      help: t('Designates whether this user can perform administrative functions.'),\n    },\n    {\n      name: 'isSuperuser',\n      type: 'boolean',\n      required: true,\n      label: t('Superuser'),\n      help: t(\n        'Designates whether this user has all permissions without explicitly assigning them.'\n      ),\n    },\n  ],\n};\n\nconst REMOVE_BUTTON_LABEL = {\n  disable: t('Disable User'),\n  delete: t('Permanently Delete User'),\n};\n\nclass RemoveUserModal extends React.Component {\n  static propTypes = {\n    user: SentryTypes.User,\n    onRemove: PropTypes.func,\n    closeModal: PropTypes.func,\n  };\n\n  state = {\n    deleteType: 'disable',\n  };\n\n  onRemove = () => {\n    this.props.onRemove(this.state.deleteType);\n    this.props.closeModal();\n  };\n\n  render() {\n    const {user} = this.props;\n    const {deleteType} = this.state;\n\n    return (\n      <React.Fragment>\n        <p>{tct('Removing user [user]', {user: <strong>{user.email}</strong>})}</p>\n        <RadioGroup\n          value={deleteType}\n          onChange={type => this.setState({deleteType: type})}\n          choices={[\n            ['disable', t('Disable the account.')],\n            ['delete', t('Permanently remove the user and their data.')],\n          ]}\n        />\n        <ModalFooter>\n          <Button priority=\"danger\" onClick={this.onRemove}>\n            {REMOVE_BUTTON_LABEL[deleteType]}\n          </Button>\n          <Button onClick={this.props.closeModal}>{t('Nevermind')}</Button>\n        </ModalFooter>\n      </React.Fragment>\n    );\n  }\n}\n\nclass AdminUserEdit extends AsyncView {\n  get userEndpoint() {\n    const {params} = this.props;\n    return `/users/${params.id}/`;\n  }\n\n  getEndpoints() {\n    return [['user', this.userEndpoint]];\n  }\n\n  async deleteUser() {\n    await this.api.requestPromise(this.userEndpoint, {\n      method: 'DELETE',\n      data: {hardDelete: true, organizations: []},\n    });\n\n    addSuccessMessage(t(\"%s's account has been deleted.\", this.state.user.email));\n    browserHistory.replace('/manage/users/');\n  }\n\n  async deactivateUser() {\n    const response = await this.api.requestPromise(this.userEndpoint, {\n      method: 'PUT',\n      data: {isActive: false},\n    });\n\n    this.setState({user: response});\n    this.formModel.setInitialData(response);\n    addSuccessMessage(t(\"%s's account has been deactivated.\", response.email));\n  }\n\n  removeUser = actionTypes =>\n    actionTypes === 'delete' ? this.deleteUser() : this.deactivateUser();\n\n  formModel = new FormModel();\n\n  renderBody() {\n    const {user} = this.state;\n    const openDeleteModal = () =>\n      openModal(opts => (\n        <RemoveUserModal user={user} onRemove={this.removeUser} {...opts} />\n      ));\n\n    return (\n      <React.Fragment>\n        <h3>{t('Users')}</h3>\n        <p>{t('Editing user: %s', user.email)}</p>\n        <Form\n          model={this.formModel}\n          initialData={user}\n          apiMethod=\"PUT\"\n          apiEndpoint={this.userEndpoint}\n          requireChanges\n          onSubmitError={addErrorMessage}\n          onSubmitSuccess={data => {\n            this.setState({user: data});\n            addSuccessMessage('User account updated.');\n          }}\n          extraButton={\n            <Button\n              type=\"button\"\n              onClick={openDeleteModal}\n              style={{marginLeft: space(1)}}\n              priority=\"danger\"\n            >\n              {t('Remove User')}\n            </Button>\n          }\n        >\n          <JsonForm forms={[userEditForm]} />\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ModalFooter = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  justify-content: end;\n  padding: 20px 30px;\n  margin: 20px -30px -30px;\n  border-top: 1px solid ${p => p.theme.border};\n`;\n\nexport default AdminUserEdit;\n"],"sourceRoot":""}