{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/data/platforms.tsx","webpack:///./app/components/platformPicker.tsx","webpack:///./app/views/projectInstall/overview.tsx"],"names":["UnstyledSettingsPageHeader","this","props","icon","title","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","SentryDocumentTitle","_title","objSlug","children","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","otherPlatform","integrations","link","type","id","name","t","concat","platforms","platform","i","language","filter","integration","tracing","includes","PLATFORM_CATEGORIES","categoryList","PlatformPicker","keydown","state","category","noAutoFilter","split","logSearch","debounce","analytics","query","toLowerCase","num_results","platformList","length","searchInput","createRef","e","target","current","focus","preventDefault","setPlatform","listProps","listClassName","Fragment","NavContainer","CategoryNav","key","onClick","setState","isActive","SearchBar","size","ref","value","placeholder","onChange","PlatformList","className","PlatformCard","data-test-id","selected","onClear","stopPropagation","tct","href","currentCategory","find","filtered","sort","a","b","localeCompare","showOther","border","inputStyles","subText","NavTabs","StyledPlatformIcon","PlatformIcon","ClearButton","Button","background","textColor","isCircled","borderless","radius","withLanguageIcon","format","fontSizeExtraSmall","ProjectInstallOverview","redirectToDocs","orgId","projectId","installUrl","isGettingStarted","browserHistory","push","toggleDsn","showDsn","keyList","issueStreamLink","DsnInfo","DsnContainer","DsnValue","dsn","priority","docLink","window","AsyncComponent","withOrganization"],"mappings":"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","file":"ProjectInstallOverview.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","/* eslint import/no-unresolved:0 import/order:0 */\nimport {platforms} from 'integration-docs-platforms';\n\nimport {t} from 'app/locale';\nimport {PlatformIntegration} from 'app/types';\n\nimport {tracing} from './platformCategories';\n\nconst otherPlatform = {\n  integrations: [\n    {\n      link: 'https://docs.sentry.io/platforms/',\n      type: 'language',\n      id: 'other',\n      name: t('Other'),\n    },\n  ],\n  id: 'other',\n  name: t('Other'),\n};\n\nexport default ([] as PlatformIntegration[]).concat(\n  [],\n  ...[...platforms, otherPlatform].map(platform =>\n    platform.integrations\n      .map(i => ({...i, language: platform.id}))\n      // filter out any tracing platforms; as they're not meant to be used as a platform for\n      // the project creation flow\n      .filter(integration => !(tracing as readonly string[]).includes(integration.id))\n  )\n);\n","import React from 'react';\nimport keydown from 'react-keydown';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport {PlatformIcon} from 'platformicons';\n\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport ListLink from 'app/components/links/listLink';\nimport NavTabs from 'app/components/navTabs';\nimport categoryList, {PlatformKey} from 'app/data/platformCategories';\nimport platforms from 'app/data/platforms';\nimport {IconClose, IconProject, IconSearch} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport {inputStyles} from 'app/styles/input';\nimport space from 'app/styles/space';\nimport {PlatformIntegration} from 'app/types';\nimport {analytics} from 'app/utils/analytics';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\nconst PLATFORM_CATEGORIES = [...categoryList, {id: 'all', name: t('All')}] as const;\n\ntype Props = {\n  setPlatform: (key: PlatformKey | null) => void;\n  platform?: string | null;\n  showOther?: boolean;\n  listClassName?: string;\n  listProps?: React.HTMLProps<HTMLDivElement>;\n  noAutoFilter?: boolean;\n};\n\ntype State = {\n  category: typeof PLATFORM_CATEGORIES[number]['id'];\n  filter: string;\n};\n\nclass PlatformPicker extends React.Component<Props, State> {\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state: State = {\n    category: PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const filter = this.state.filter.toLowerCase();\n\n    const subsetMatch = (platform: PlatformIntegration) =>\n      platform.id.includes(filter) || platform.name.toLowerCase().includes(filter);\n\n    const categoryMatch = (platform: PlatformIntegration) =>\n      category === 'all' ||\n      (currentCategory?.platforms as undefined | string[])?.includes(platform.id);\n\n    const filtered = platforms\n      .filter(this.state.filter ? subsetMatch : categoryMatch)\n      .sort((a, b) => a.id.localeCompare(b.id));\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      analytics('platformpicker.search', {\n        query: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n      });\n    }\n  }, 300);\n\n  @keydown('/')\n  focusSearch(e: KeyboardEvent) {\n    if (e.target !== this.searchInput.current) {\n      this.searchInput?.current?.focus();\n      e.preventDefault();\n    }\n  }\n\n  searchInput = React.createRef<HTMLInputElement>();\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <React.Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={(e: React.MouseEvent) => {\n                  analytics('platformpicker.select_tab', {category: id});\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <SearchBar>\n            <IconSearch size=\"xs\" />\n            <input\n              type=\"text\"\n              ref={this.searchInput}\n              value={filter}\n              placeholder={t('Filter Platforms')}\n              onChange={e => this.setState({filter: e.target.value}, this.logSearch)}\n            />\n          </SearchBar>\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => (\n            <PlatformCard\n              data-test-id={`platform-${platform.id}`}\n              key={platform.id}\n              platform={platform}\n              selected={this.props.platform === platform.id}\n              onClear={(e: React.MouseEvent) => {\n                setPlatform(null);\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                analytics('platformpicker.select_platform', {platform: platform.id});\n                setPlatform(platform.id as PlatformKey);\n              }}\n            />\n          ))}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  display: grid;\n  grid-gap: ${space(2)};\n  grid-template-columns: 1fr minmax(0, 300px);\n  align-items: start;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst SearchBar = styled('div')`\n  ${p => inputStyles(p)};\n  padding: 0 8px;\n  color: ${p => p.theme.subText};\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  margin-top: -${space(0.75)};\n\n  input {\n    border: none;\n    background: none;\n    padding: 2px 4px;\n    width: 100%;\n    /* Ensure a consistent line height to keep the input the desired height */\n    line-height: 24px;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n  white-space: nowrap;\n\n  > li {\n    float: none;\n    display: inline-block;\n  }\n`;\n\nconst PlatformList = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin: ${space(2)};\n`;\n\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\n\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xsmall',\n};\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIcon\n      platform={platform.id}\n      size={56}\n      radius={5}\n      withLanguageIcon\n      format=\"lg\"\n    />\n\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  cursor: pointer;\n  background: ${p => p.selected && '#ecf5fd'};\n\n  &:hover {\n    background: #ebebef;\n  }\n\n  h3 {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    color: ${p => p.theme.subText};\n    text-align: center;\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    text-transform: uppercase;\n    margin: 0;\n    padding: 0 ${space(0.5)};\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport AutoSelectText from 'app/components/autoSelectText';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport PlatformPicker from 'app/components/platformPicker';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {PlatformKey} from 'app/data/platformCategories';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withOrganization from 'app/utils/withOrganization';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n} & AsyncComponent['props'];\n\ntype State = {\n  keyList: Array<ProjectKey> | null;\n} & AsyncComponent['state'];\n\nclass ProjectInstallOverview extends AsyncComponent<Props, State> {\n  get isGettingStarted() {\n    return window.location.href.indexOf('getting-started') > 0;\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  redirectToDocs = (platform: PlatformKey | null) => {\n    const {orgId, projectId} = this.props.params;\n\n    const installUrl = this.isGettingStarted\n      ? `/organizations/${orgId}/projects/${projectId}/getting-started/${platform}/`\n      : recreateRoute(`install/${platform}/`, {\n          ...this.props,\n          stepBack: -3,\n        });\n\n    browserHistory.push(installUrl);\n  };\n\n  toggleDsn = () => {\n    this.setState(state => ({showDsn: !state.showDsn}));\n  };\n\n  render() {\n    const {orgId, projectId} = this.props.params;\n    const {keyList, showDsn} = this.state;\n\n    const issueStreamLink = `/organizations/${orgId}/issues/#welcome`;\n\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Instrumentation')} objSlug={projectId} />\n        <SettingsPageHeader title={t('Configure your application')} />\n        <TextBlock>\n          {t(\n            'Get started by selecting the platform or language that powers your application.'\n          )}\n        </TextBlock>\n\n        {showDsn ? (\n          <DsnInfo>\n            <DsnContainer>\n              <strong>{t('DSN')}</strong>\n              <DsnValue>{keyList?.[0].dsn.public}</DsnValue>\n            </DsnContainer>\n\n            <Button priority=\"primary\" to={issueStreamLink}>\n              {t('Got it! Take me to the Issue Stream.')}\n            </Button>\n          </DsnInfo>\n        ) : (\n          <p>\n            <small>\n              {tct('Already have things setup? [link:Get your DSN]', {\n                link: <Button priority=\"link\" onClick={this.toggleDsn} />,\n              })}\n              .\n            </small>\n          </p>\n        )}\n        <PlatformPicker setPlatform={this.redirectToDocs} showOther={false} />\n        <p>\n          {tct(\n            `For a complete list of client integrations, please see\n             [docLink:our in-depth documentation].`,\n            {docLink: <ExternalLink href=\"https://docs.sentry.io\" />}\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n\nconst DsnValue = styled(p => (\n  <code {...p}>\n    <AutoSelectText>{p.children}</AutoSelectText>\n  </code>\n))`\n  overflow: hidden;\n`;\n\nconst DsnInfo = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst DsnContainer = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: ${space(1.5)} ${space(2)};\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nexport default withOrganization(ProjectInstallOverview);\n"],"sourceRoot":""}