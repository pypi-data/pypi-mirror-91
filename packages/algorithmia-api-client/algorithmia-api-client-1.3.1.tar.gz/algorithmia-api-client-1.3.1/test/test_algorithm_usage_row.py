# coding: utf-8

"""
    Algorithmia Management APIs

    APIs for managing actions on the Algorithmia platform  # noqa: E501

    The version of the OpenAPI document: 1.3.0
    Contact: support@algorithmia.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import algorithmia_api_client
from algorithmia_api_client.models.algorithm_usage_row import AlgorithmUsageRow  # noqa: E501
from algorithmia_api_client.rest import ApiException

class TestAlgorithmUsageRow(unittest.TestCase):
    """AlgorithmUsageRow unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AlgorithmUsageRow
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = algorithmia_api_client.models.algorithm_usage_row.AlgorithmUsageRow()  # noqa: E501
        if include_optional :
            return AlgorithmUsageRow(
                algorithm_called = '0', 
                algorithm_version = '0', 
                total_calls = '0', 
                algorithm_owner = '0', 
                total_errors = 56, 
                total_error_duration = 56, 
                total_duration = 56, 
                machine_type = 'cpu'
            )
        else :
            return AlgorithmUsageRow(
                algorithm_called = '0',
                algorithm_version = '0',
                total_calls = '0',
                algorithm_owner = '0',
                total_errors = 56,
                total_error_duration = 56,
                total_duration = 56,
                machine_type = 'cpu',
        )

    def testAlgorithmUsageRow(self):
        """Test AlgorithmUsageRow"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
