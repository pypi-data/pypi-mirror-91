# coding: utf-8

"""
    Algorithmia Management APIs

    APIs for managing actions on the Algorithmia platform  # noqa: E501

    The version of the OpenAPI document: 1.3.0
    Contact: support@algorithmia.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import algorithmia_api_client
from algorithmia_api_client.models.api_key import ApiKey  # noqa: E501
from algorithmia_api_client.rest import ApiException

class TestApiKey(unittest.TestCase):
    """ApiKey unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ApiKey
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = algorithmia_api_client.models.api_key.ApiKey()  # noqa: E501
        if include_optional :
            return ApiKey(
                username = '0', 
                key_label = '0', 
                created_at = null, 
                api_key_mask = '0', 
                api_key = '0', 
                key_type = 'ManagementKey', 
                permissions = algorithmia_api_client.models.auth_permissions.AuthPermissions(
                    allow_data = True, 
                    allow_data_write = True, 
                    allow_algo = True, 
                    allow_web_algo = True, 
                    referer_host = '0', 
                    allow_algo_management = True, 
                    algo_acl = [
                        '0'
                        ], ), 
                owner_name = '0'
            )
        else :
            return ApiKey(
                username = '0',
                key_label = '0',
                created_at = null,
                api_key_mask = '0',
                key_type = 'ManagementKey',
        )

    def testApiKey(self):
        """Test ApiKey"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
