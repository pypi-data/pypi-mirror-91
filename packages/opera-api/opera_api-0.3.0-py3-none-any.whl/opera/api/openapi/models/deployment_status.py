# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from opera.api.openapi.models.base_model_ import Model
from opera.api.openapi.models.invocation import Invocation
from opera.api.openapi import util

from opera.api.openapi.models.invocation import Invocation  # noqa: E501

class DeploymentStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, success=None, history=None):  # noqa: E501
        """DeploymentStatus - a model defined in OpenAPI

        :param success: The success of this DeploymentStatus.  # noqa: E501
        :type success: bool
        :param history: The history of this DeploymentStatus.  # noqa: E501
        :type history: List[Invocation]
        """
        self.openapi_types = {
            'success': bool,
            'history': List[Invocation]
        }

        self.attribute_map = {
            'success': 'success',
            'history': 'history'
        }

        self._success = success
        self._history = history

    @classmethod
    def from_dict(cls, dikt) -> 'DeploymentStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeploymentStatus of this DeploymentStatus.  # noqa: E501
        :rtype: DeploymentStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def success(self):
        """Gets the success of this DeploymentStatus.

        Whether the latest invocation was successful.  # noqa: E501

        :return: The success of this DeploymentStatus.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this DeploymentStatus.

        Whether the latest invocation was successful.  # noqa: E501

        :param success: The success of this DeploymentStatus.
        :type success: bool
        """

        self._success = success

    @property
    def history(self):
        """Gets the history of this DeploymentStatus.


        :return: The history of this DeploymentStatus.
        :rtype: List[Invocation]
        """
        return self._history

    @history.setter
    def history(self, history):
        """Sets the history of this DeploymentStatus.


        :param history: The history of this DeploymentStatus.
        :type history: List[Invocation]
        """

        self._history = history
