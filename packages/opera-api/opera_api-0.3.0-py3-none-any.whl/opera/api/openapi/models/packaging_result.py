# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from opera.api.openapi.models.base_model_ import Model
from opera.api.openapi import util


class PackagingResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, package_path=None):  # noqa: E501
        """PackagingResult - a model defined in OpenAPI

        :param package_path: The package_path of this PackagingResult.  # noqa: E501
        :type package_path: str
        """
        self.openapi_types = {
            'package_path': str
        }

        self.attribute_map = {
            'package_path': 'package_path'
        }

        self._package_path = package_path

    @classmethod
    def from_dict(cls, dikt) -> 'PackagingResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PackagingResult of this PackagingResult.  # noqa: E501
        :rtype: PackagingResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def package_path(self):
        """Gets the package_path of this PackagingResult.


        :return: The package_path of this PackagingResult.
        :rtype: str
        """
        return self._package_path

    @package_path.setter
    def package_path(self, package_path):
        """Sets the package_path of this PackagingResult.


        :param package_path: The package_path of this PackagingResult.
        :type package_path: str
        """
        if package_path is None:
            raise ValueError("Invalid value for `package_path`, must not be `None`")  # noqa: E501

        self._package_path = package_path
