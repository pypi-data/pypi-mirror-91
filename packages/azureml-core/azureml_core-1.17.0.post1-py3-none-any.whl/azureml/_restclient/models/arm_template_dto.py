# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ArmTemplateDto(Model):
    """object used for creating workspace through calling arm template.

    :param workspace_name: Name of the workspace to deploy. Required
     parameter.
    :type workspace_name: str
    :param location: Location where the workspace should be deployed. Required
     parameter. Required parameter.
    :type location: str
    :param is_byo_storage: boolean parameter specifying if the workspace is
     going to associate with byo storage.
    :type is_byo_storage: bool
    :param byo_storage_arm_id: ArmId of storage account to associate with this
     workspace.
    :type byo_storage_arm_id: str
    :param byo_acr_arm_id: ArmId of ACR to associate with this workspace.
    :type byo_acr_arm_id: str
    :param byo_key_vault_arm_id: ArmId of key vault to associate with this
     workspace.
    :type byo_key_vault_arm_id: str
    :param byo_app_insight_arm_id: ArmId of application insight to associate
     with this workspace.
    :type byo_app_insight_arm_id: str
    :param is_byo_acr: boolean parameter specifying if the workspace is going
     to associate with byo acr.
    :type is_byo_acr: bool
    :param is_byo_key_vault: boolean parameter specifying if the workspace is
     going to associate with byo keyvault.
    :type is_byo_key_vault: bool
    :param is_byo_app_insights: boolean parameter specifying if the workspace
     is going to associate with byo appinsight.
    :type is_byo_app_insights: bool
    :param provision_storage_behind_private_endpoint: Should the storage
     account associated with this workspace have private endpoint.
    :type provision_storage_behind_private_endpoint: bool
    :param provision_storage_behind_service_endpoint: Should the storage
     account associated with this workspace have service endpoints.
    :type provision_storage_behind_service_endpoint: bool
    :param provision_key_vault_behind_private_endpoint: Should the keyvault
     associated with this workspace have private endpoints.
    :type provision_key_vault_behind_private_endpoint: bool
    :param provision_key_vault_behind_service_endpoint: Should the keyvault
     account associated with this workspace have service endpoint.
    :type provision_key_vault_behind_service_endpoint: bool
    :param cmk_keyvault_uri: If the workspace is enabled for CMK encryption,
     then this should point to the uri of the key for CMK encryption.
    :type cmk_keyvault_uri: str
    :param cmk_keyvault_arm_id: If the workspace is enabled for CMK
     encryption, then this should point to the keyvault armid of the keyvault
     holding the CMK key.
    :type cmk_keyvault_arm_id: str
    :param adb_workspace_arm_id: ArmId of adb workspace to associate with this
     workspace.
    :type adb_workspace_arm_id: str
    :param is_hbi_workspace: boolean parameter specifying if the workspace is
     high business impact workspace.
    :type is_hbi_workspace: bool
    :param sku: Sku of the workspace.
    :type sku: str
    :param auto_approve_private_endpoint: Should private endpoint be auto
     approved.
    :type auto_approve_private_endpoint: bool
    :param properties: Configuration of the private endpoint attached with the
     workspace.
    :type properties: ~_restclient.models.WorkspacePrivateEndpointConfig
    """

    _attribute_map = {
        'workspace_name': {'key': 'workspaceName', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'is_byo_storage': {'key': 'isByoStorage', 'type': 'bool'},
        'byo_storage_arm_id': {'key': 'byoStorageArmId', 'type': 'str'},
        'byo_acr_arm_id': {'key': 'byoAcrArmId', 'type': 'str'},
        'byo_key_vault_arm_id': {'key': 'byoKeyVaultArmId', 'type': 'str'},
        'byo_app_insight_arm_id': {'key': 'byoAppInsightArmId', 'type': 'str'},
        'is_byo_acr': {'key': 'isByoAcr', 'type': 'bool'},
        'is_byo_key_vault': {'key': 'isByoKeyVault', 'type': 'bool'},
        'is_byo_app_insights': {'key': 'isByoAppInsights', 'type': 'bool'},
        'provision_storage_behind_private_endpoint': {'key': 'provisionStorageBehindPrivateEndpoint', 'type': 'bool'},
        'provision_storage_behind_service_endpoint': {'key': 'provisionStorageBehindServiceEndpoint', 'type': 'bool'},
        'provision_key_vault_behind_private_endpoint': {'key': 'provisionKeyVaultBehindPrivateEndpoint', 'type': 'bool'},
        'provision_key_vault_behind_service_endpoint': {'key': 'provisionKeyVaultBehindServiceEndpoint', 'type': 'bool'},
        'cmk_keyvault_uri': {'key': 'cmkKeyvaultUri', 'type': 'str'},
        'cmk_keyvault_arm_id': {'key': 'cmkKeyvaultArmId', 'type': 'str'},
        'adb_workspace_arm_id': {'key': 'adbWorkspaceArmId', 'type': 'str'},
        'is_hbi_workspace': {'key': 'isHbiWorkspace', 'type': 'bool'},
        'sku': {'key': 'sku', 'type': 'str'},
        'auto_approve_private_endpoint': {'key': 'autoApprovePrivateEndpoint', 'type': 'bool'},
        'properties': {'key': 'properties', 'type': 'WorkspacePrivateEndpointConfig'},
    }

    def __init__(self, workspace_name=None, location=None, is_byo_storage=None, byo_storage_arm_id=None, byo_acr_arm_id=None, byo_key_vault_arm_id=None, byo_app_insight_arm_id=None, is_byo_acr=None, is_byo_key_vault=None, is_byo_app_insights=None, provision_storage_behind_private_endpoint=None, provision_storage_behind_service_endpoint=None, provision_key_vault_behind_private_endpoint=None, provision_key_vault_behind_service_endpoint=None, cmk_keyvault_uri=None, cmk_keyvault_arm_id=None, adb_workspace_arm_id=None, is_hbi_workspace=None, sku=None, auto_approve_private_endpoint=None, properties=None):
        super(ArmTemplateDto, self).__init__()
        self.workspace_name = workspace_name
        self.location = location
        self.is_byo_storage = is_byo_storage
        self.byo_storage_arm_id = byo_storage_arm_id
        self.byo_acr_arm_id = byo_acr_arm_id
        self.byo_key_vault_arm_id = byo_key_vault_arm_id
        self.byo_app_insight_arm_id = byo_app_insight_arm_id
        self.is_byo_acr = is_byo_acr
        self.is_byo_key_vault = is_byo_key_vault
        self.is_byo_app_insights = is_byo_app_insights
        self.provision_storage_behind_private_endpoint = provision_storage_behind_private_endpoint
        self.provision_storage_behind_service_endpoint = provision_storage_behind_service_endpoint
        self.provision_key_vault_behind_private_endpoint = provision_key_vault_behind_private_endpoint
        self.provision_key_vault_behind_service_endpoint = provision_key_vault_behind_service_endpoint
        self.cmk_keyvault_uri = cmk_keyvault_uri
        self.cmk_keyvault_arm_id = cmk_keyvault_arm_id
        self.adb_workspace_arm_id = adb_workspace_arm_id
        self.is_hbi_workspace = is_hbi_workspace
        self.sku = sku
        self.auto_approve_private_endpoint = auto_approve_private_endpoint
        self.properties = properties
