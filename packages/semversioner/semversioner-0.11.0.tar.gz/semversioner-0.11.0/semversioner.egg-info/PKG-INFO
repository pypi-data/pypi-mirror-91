Metadata-Version: 2.1
Name: semversioner
Version: 0.11.0
Summary: Manage properly semver in your repository
Home-page: https://github.com/raulgomis/semversioner
Author: Raul Gomis
Author-email: raulgomis@gmail.com
License: MIT
Description: # Semversioner
        The easiest way to manage [semantic versioning](https://semver.org/) in your project and generate CHANGELOG.md file automatically. 
        
        Semversioner will provide the tooling to automate semver release process for libraries, docker images, etc. 
        
        This project was inspired by the way AWS manages their versioning for [AWS-cli](https://github.com/aws/aws-cli/).
        
        ## Semantic Versioning
        The [semantic versioning](https://semver.org/) spec involves several possible variations, but to simplify, in _Semversioner_ we are using the three-part version number:
        
        `<major>.<minor>.<patch>`
        
        Constructed with the following guidelines:
        - Breaking backward compatibility or major features bumps the major (and resets the minor and patch).
        - New additions without breaking backward compatibility bumps the minor (and resets the patch).
        - Bug fixes and misc changes bumps the patch.
        
        An example would be 1.0.0
        
        ## How it works
        
        At any given time, the ``.semversioner/`` directory looks like:
        
            .semversioner
            └── next-release
                ├── minor-20181227010225.json
                └── major-20181228010225.json
            ├── 1.1.0.json
            ├── 1.1.1.json
            ├── 1.1.2.json
        
        The release process takes everything in ``next-release`` and aggregates them all together in a single JSON file for that release (e.g ``1.12.0.json``).  This
        JSON file is a list of all the individual JSON files from ``next-release``.
        
        ## Install
        
        ```shell
        $ pip install semversioner
        ```
        
        ## Usage
        
        ### Bumping the version
        
        In your local environment your will use the CLI to create the different changeset files that will be committed with your code. For example:
        ```shell
        $ semversioner add-change --type patch --description "Fix security vulnerability with authentication."
        ```
        
        Then, in your CI/CD tool you will need to release (generating automatically version number) and creating the the changelog file. 
        ```shell
        $ semversioner release
        ```
        
        ### Generating Changelog
        
        As a part of your CI/CD workflow, you will be able to generate the Changelog file with all changes.
        
        ```shell
        $ semversioner changelog > CHANGELOG.md
        ```
        
        You can filter the changelog by only showing changes for a specific version:
        
        ```shell
        $ semversioner changelog --version "1.0.0"
        ```
        
        Alternatively, you can use the following command to filter changes by the last released version:
        
        ```shell
        $ semversioner changelog --version $(semversioner current-version)
        ```
        
        ## License
        Copyright (c) 2020 Raul Gomis.
        MIT licensed, see [LICENSE](LICENSE) file.
        
        ---
        Made with ♥ by `Raul Gomis <https://twitter.com/rgomis>`.
        
        
        # Changelog
        Note: version releases in the 0.x.y range may introduce breaking changes.
        
        ## 0.11.0
        
        - minor: Add '--version' filter to the 'changelog' command to display the changelog only for a specific version
        
        ## 0.10.0
        
        - minor: Add new 'status' command to display the state of the working directory and unreleased changes
        - patch: Fix build and deployment configuration
        - patch: Refactor method names and code for better code readability and testability
        
        ## 0.9.0
        
        - minor: Deprecated .changes directory in favour of .semversioner directory
        - patch: Internal refactor to improve code quality and test coverage
        
        ## 0.8.1
        
        - patch: Fix installer error when referencing to LICENSE file
        
        ## 0.8.0
        
        - minor: Enabled autocompletion by default
        
        ## 0.7.1
        
        - patch: Improve docs for open source
        
        ## 0.7.0
        
        - minor: Fail with error code when no changes are provided in the release command
        
        ## 0.6.16
        
        - patch: Fix bug: add require module in setup.py
        
        ## 0.6.15
        
        - patch: Fix packaging for LICENSE
        - patch: Improve README.md documentation
        - patch: Use jinja2 template engine internally to generate the changelog
        
        ## 0.6.14
        
        - patch: Update docs
        
        ## 0.6.13
        
        - patch: Fix README.md
        
        ## 0.6.12
        
        - patch: Fix long description content type
        
        ## 0.6.11
        
        - patch: Add README.md file
        
        ## 0.6.10
        
        - patch: Fix code consistency
        
        ## 0.6.9
        
        - patch: Fix packaging
        
        ## 0.6.8
        
        - patch: Tag the repository when releasing
        
        ## 0.6.7
        
        - patch: Fix tests and improve coverage
        
        ## 0.6.6
        
        - minor: Initial version
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Operating System :: OS Independent
Requires-Python: >=3.1.0
Description-Content-Type: text/markdown
