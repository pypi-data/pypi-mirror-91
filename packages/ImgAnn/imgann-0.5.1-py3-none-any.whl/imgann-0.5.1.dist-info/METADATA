Metadata-Version: 2.1
Name: imgann
Version: 0.5.1
Summary: image annotation file operation provider.
Home-page: https://github.com/nipdep/img-ann.git
Author: nipdep
Author-email: nipun1deelaka@gmail.com
License: UNKNOWN
Project-URL: Bug Reports, https://github.com/nipdep/img-ann/issues
Project-URL: Source, https://github.com/nipdep/img-ann/
Keywords: sample,setuptools,development
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.5, <4
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: matplotlib
Requires-Dist: opencv-python
Provides-Extra: dev
Requires-Dist: check-manifest ; extra == 'dev'
Requires-Dist: pytest (>=3.7) ; extra == 'dev'
Provides-Extra: test
Requires-Dist: coverage ; extra == 'test'
Requires-Dist: unittest ; extra == 'test'

![Build Status](https://travis-ci.com/nipdep/img-ann.svg?branch=main)\
![Version](https://img.shields.io/pypi/v/ImgAnn)

# img-ann

The ImgAnn is a package for a simplify operations in image annotated files.
such as, annotation type converting \[coco format, pascalVOC format, csv format], image dataset sampling], etc.


## Installation
You can install the Real Python Feed Reader from [PyPI](https://pypi.org/project/ImgAnn/):

$`pip install ImgAnn`

The package is support Python 3.6 and above.

## Usage


 - To get N number of annotated images randomly.
    you can use coco format, pascalVOC format or csv format as annotation format.
    <annotation type> keywords can be from \['coco', 'csv', 'voc'] \
 `from ImgAnn import Sample ` \
 `Sample.show_samples( <image dataset dir> : string, <annotation file dit> : string, <number of images> : int, <annotation type> : string= 'coco' )` 

    _example :_ \
    `Sample.show_samples('./data/test','./annotations/test',5,'voc')` 

 - To convert annotation file format.
    - coco to pascal VOC format converting
    `from ImgAnn import Convertor` \
    `Convertor.coco2voc( <image dataset dir> : string, <coco annotated .json file dir> : string, <voc formatted .xml file saving folder dir> : string)` 

        _example :_ \
        `Convertor.coco2voc('../data/train', '../data/annotations/dataset.json', '../data/annotations/voc_dataset')`

    - coco to csv format converting
    `from ImgAnn import Convertor` \
    `Convertor.coco2csv( <image dataset dir> : string, <coco annotated .json file dir> : string, <voc formatted .csv file dir> : string)` 

        _example :_ \
        `Convertor.coco2csv('../data/train', '../data/annotations/dataset.json', '../data/annotations/dataset.csv')`


    - csv to coco format converting
    `from ImgAnn import Convertor` \
    `Convertor.coco2csv( <image dataset dir> : string, <csv annotated .csv file dir> : string, <coco formatted .json file dir> : string)` 

        _example :_ \
        `Convertor.csv2coco('../data/train', '../data/annotations/dataset.csv', '../data/annotations/dataset.json')` 

    - csv to pascal VOC format converting
    `from ImgAnn import Convertor` \
    `Convertor.csv2voc( <image dataset dir> : string, <csv annotated .csv file dir> : string, <pascal VOC formatted .xml file saving folder dir> : string)` 

        _example :_ \
        `Convertor.coco2csv('../data/train', '../data/annotations/dataset.csv', '../data/annotations/voc_dataset')` 

    - pascal VOC to coco format converting
    `from ImgAnn import Convertor` \
    `Convertor.voc2coc( <image dataset dir> : string, <pascal VOC annotated file included folder dir> : string, <coco formatted .json file dir> : string)`

        _example :_ \
        `Convertor.voc2coco('../data/train', '../data/annotations/voc_dataset', '../data/annotations/dataset.json)`

     - pascal VOC to csv format converting
    `from ImgAnn import Convertor` \
    `Convertor.voc2csv( <image dataset dir> : string, <pascal VOC annotated file included folder dir> : string, <csv formatted .csv file dir> : string)`

        _example :_ \
        `Convertor.voc2coco('../data/train', '../data/annotations/voc_dataset', '../data/annotations/dataset.csv)`










