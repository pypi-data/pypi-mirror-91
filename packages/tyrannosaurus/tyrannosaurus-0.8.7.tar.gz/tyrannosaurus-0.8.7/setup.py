# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['tyrannosaurus']

package_data = \
{'': ['*'], 'tyrannosaurus': ['resources/*']}

install_requires = \
['grayskull>=0.8.4,<1', 'requests>=2.24,<3', 'tomlkit>=0.7,<1', 'typer>=0.3,<1']

entry_points = \
{'console_scripts': ['tyrannosaurus = tyrannosaurus.cli:cli']}

setup_kwargs = {
    'name': 'tyrannosaurus',
    'version': '0.8.7',
    'description': 'Generate elegant, bleeding-edge, ready-to-use Python projects with seamless CI/CD, fit for 2021+.',
    'long_description': '# Tyrannosaurus Reqs\n[![Version status](https://img.shields.io/pypi/status/tyrannosaurus)](https://pypi.org/project/tyrannosaurus/)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/tyrannosaurus)](https://pypi.org/project/tyrannosaurus/)\n[![Docker](https://img.shields.io/docker/v/dmyersturnbull/tyrannosaurus?color=green&label=DockerHub)](https://hub.docker.com/repository/docker/dmyersturnbull/tyrannosaurus)\n[![GitHub release (latest SemVer including pre-releases)](https://img.shields.io/github/v/release/dmyersturnbull/tyrannosaurus?include_prereleases&label=GitHub)](https://github.com/dmyersturnbull/tyrannosaurus/releases)\n[![Latest version on PyPi](https://badge.fury.io/py/tyrannosaurus.svg)](https://pypi.org/project/tyrannosaurus/)\n[![Documentation status](https://readthedocs.org/projects/tyrannosaurus/badge/?version=latest&style=flat-square)](https://tyrannosaurus.readthedocs.io/en/stable/)\n[![Build & test](https://github.com/dmyersturnbull/tyrannosaurus/workflows/Build%20&%20test/badge.svg)](https://github.com/dmyersturnbull/tyrannosaurus/actions)\n[![Travis](https://img.shields.io/travis/dmyersturnbull/tyrannosaurus?label=Travis)](https://travis-ci.org/dmyersturnbull/tyrannosaurus)\n[![Maintainability](https://api.codeclimate.com/v1/badges/5e3b38c9b9c418461dc3/maintainability)](https://codeclimate.com/github/dmyersturnbull/tyrannosaurus/maintainability)\n[![Coverage (coveralls)](https://coveralls.io/repos/github/dmyersturnbull/tyrannosaurus/badge.svg?branch=master&service=github)](https://coveralls.io/github/dmyersturnbull/tyrannosaurus?branch=master)\n[![Coverage (codecov)](https://codecov.io/github/dmyersturnbull/tyrannosaurus/coverage.svg)](https://codecov.io/gh/dmyersturnbull/tyrannosaurus/)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/dmyersturnbull/tyrannosaurus/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/dmyersturnbull/tyrannosaurus/?branch=master)\n\n\nAn opinionated, forwards-looking Python template for 2021.  \nGenerate elegant, ready-to-use Python projects that have excellent continuous integration and deployment.\nIntegrated with Dockerhub, Github Packages, Azure, and Anaconda if you like those.\n\nThis is an upgraded, trimmed-down, modern alternative to\n[cookiecutter](https://github.com/cookiecutter/cookiecutter) built with [Poetry](https://python-poetry.org/),\n[Tox](https://github.com/tox-dev/tox), and [Github Actions](https://github.com/features/actions).  \n[No legacy files](https://dmyersturnbull.github.io/#-the-python-build-landscape) or tools.\n\nDonâ€™t make 55 commits trying to configure Travis, Docker, or readthedocs. Just use `tyrannosaurus new`\n\n\n```bash\npip install tyrannosaurus\ntyrannosaurus new projectname --user gituserororg --track\n```\n\nTyrannosaurus will then list final manual steps like adding API keys.  \n(`--track` will git track _gituserororg/projectname_.)\n\n\n#### Main behavior / features:\n\nGenerated projects are integrated with various tools (from PyPi) and external CI/CD/code-quality systems.\nGithub Actions are used by default, but config files for Travis and Azure Pipelines are also provided.\nYou can swap out, modify, or disable anything as you see fit.\n**[See the docs ðŸ“š](https://tyrannosaurus.readthedocs.io/en/stable/)** for more information.\n\n*By default*, hereâ€™s how your new project will behave:\n\n- **Commit** â‡’ Files are linted and verified for integrity\n- **Make a pull request** â‡’ Code is built and tested\n- **Push to the main branch** â‡’ Code is built and tested; code quality, coverage, and security badges are updated\n- **Make a Github release** â‡’ Artifacts are sent to Github, PyPi, DockerHub, Github Packages, and readthedocs\n- `tox` â‡’ Tests are run locally\n- `tyrannosaurus sync` â‡’ Project metadata is synced to pyproject.toml\n- `tyrannosaurus update` â‡’ New dependency versions from PyPi and/or Conda are listed\n\n\n#### Full features / integrations:\n\n  - Packaging and dependency management with [Poetry](https://python-poetry.org/)\n  - Python 3.8, 3.9, and 3.10 (3.6 and 3.7 with a small change)\n  - Only modern files: *no* manifest file, setup.py, requirements.txt, setup.cfg, or eggs\n  - Continuous integration with [Github Actions](https://github.com/features/actions),\n    [Travis](https://www.travis-ci.com/), or\n    [Azure Pipelines](https://azure.microsoft.com/en-us/services/devops/pipelines/)\n  - Continuous deployment to [PyPi](http://pypi.org/), [Dockerhub](https://hub.docker.com/),\n    and [Github Packages](https://github.com/features/packages).\n  - Automatic attachment of [sdits](https://docs.python.org/3/distutils/sourcedist.html)\n    and [wheels](https://pythonwheels.com/) to\n    [Github Releases](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/about-releases)\n  - Documentation sent to [readthedocs](https://readthedocs.org/)\n  - Nice documentation defaults with\n    [Sphinx extensions](https://www.sphinx-doc.org/en/master/usage/extensions/index.html)\n  - Test automation with [Tox](https://tox.readthedocs.io)\n  - Code quality and coverage [badges](https://github.com/badges/shields) with\n    [Coveralls](https://coveralls.io/),\n    [codecov](https://about.codecov.io/),\n    [CodeClimate](https://codeclimate.com/),\n    and [Scrutinizer](https://scrutinizer-ci.com/)\n    that reflect the main branch\n  - Code linting with [pre-commit](https://pre-commit.com/), [Black](https://pypi.org/project/black/),\n    and [Prettifier](https://prettier.io/)\n  - Security analysis with [Bandit](https://github.com/PyCQA/bandit),\n    [CodeQL](https://github.com/github/codeql-action),\n    and [safety](https://github.com/pyupio/safety) â€ \n  - Static type analysis with [mypy](https://mypy.readthedocs.io)\n  - [Conda-Forge](https://conda-forge.org/) [recipes](https://conda-forge.org/docs/maintainer/adding_pkgs.html#the-recipe-meta-yaml)\n    and [environment YML](https://medium.com/@balance1150/how-to-build-a-conda-environment-through-a-yaml-file-db185acf5d22)\n    with [Grayskull](https://github.com/conda-incubator/grayskull)\n    and [Tyrannosaurus](https://tyrannosaurus.readthedocs.io/)\n  - IDE hints via [EditorConfig](https://editorconfig.org/) with good defaults for most languages\n  - Fancy [issue labels](https://github.com/crazy-max/ghaction-github-labeler)\n  - Fancy Github-recognized readme, license,\n    [contributing guide](https://docs.github.com/en/free-pro-team@latest/github/building-a-strong-community/setting-guidelines-for-repository-contributors#adding-a-contributing-file),\n    [issue templates](https://docs.github.com/en/free-pro-team@latest/github/building-a-strong-community/configuring-issue-templates-for-your-repository), and\n    [pull request templates](https://docs.github.com/en/free-pro-team@latest/github/building-a-strong-community/creating-a-pull-request-template-for-your-repository)\n  - Nice gitignore, dockerignore, [ChangeLog](https://keepachangelog.com), and other misc files\n  - [CodeMeta](https://codemeta.github.io/user-guide/) and [CITATION.cff](https://citation-file-format.github.io/)\n  - Dependency updating with [Dependabot](https://dependabot.com/)\n  - `tyrannosaurus clean` to clean temp files\n  - `tyrannosaurus update` that lists dependency versions to bump\n  - `tyrannosaurus sync` to synchronize project metadata to pyproject.toml\n\nâ€  [Temporary issue in safety](https://github.com/pyupio/safety/issues/201)\n\n\n#### Syncing to pyproject.toml:\n\n*Note: This feature is only partly complete.*\n\nTyrannosaurus has an optional `sync` command that synchronizes metadata from `pyproject.toml` to other files,\nso that **all of your metadata is in pyproject.toml**.\nThere are 16 available target files, including `docs/conf.py`, `tox.ini`, `.pre-commit-config.yaml`, `readthedocs.yml`,\n`.travis.yml`, and `__init__.py`.\nSettings like dev dependencies, project version, license headers, and preferred line length can be listed exactly once,\nin pyproject.toml.\n\nTyrannosaurus itself can be included as a dependency (but is not by default).\nRunning `tyrannosaurus build` will run poetry lock, synchronize project metadata (via `sync`), build, run tests,\ninstall, and clean up.\nTarget files can be disabled in `[tool.tyrannosaurus.targets]`.\n\n\n#### Building your project locally:\n\nTo run locally, install [Poetry](https://github.com/python-poetry/poetry)\nand [Tox](https://tox.readthedocs.io/en/latest/) (`pip install tox`).\nThen just type `tox` to build artifacts and run tests.\nTo create an initial Anaconda recipe or environment file, run `tyrannosaurus recipe` or `tyrannosaurus env`.\n\n\n#### Similar tools:\n\n- [hypermodern-python](https://github.com/cjolowicz/hypermodern-python), a Python template that is similarly modern.\n  It looks solid but has fewer integrations.\n  A few choices were different, such as the use of [Nox](https://github.com/theacodes/nox).\n  Nox has less traction and <500 Github stars, and was not updated since 2020-04 as of 2020-12.\n- [cookiecutter-hypermodern-python](https://github.com/cjolowicz/cookiecutter-hypermodern-python)\n- [cookiecutter](https://github.com/cookiecutter/cookiecutter), which still uses setup.py\n- [python-blueprint](https://github.com/johnthagen/python-blueprint), which is useful to look through\n  but still uses setup.py\n\n\n#### Contributing:\n\n[New issues](https://github.com/dmyersturnbull/tyrannosaurus/issues) and pull requests are welcome.\nPlease refer to the [contributing guide](https://github.com/dmyersturnbull/tyrannosaurus/blob/master/CONTRIBUTING.md)\nand [security policy](https://github.com/dmyersturnbull/tyrannosaurus/blob/main/SECURITY.md).  \nGenerated with tyrannosaurus: `tyrannosaurus new tyrannosaurus`\n\n\n```text\n                                              .++++++++++++.\n                                           .++HHHHHHH^^HHH+.\n                                          .HHHHHHHHHH++-+-++.\n                                         .HHHHHHHHHHH:t~~~~~\n                                        .+HHHHHHHHHHjjjjjjjj.\n                                       .+NNNNNNNNN/++/:--..\n                              ........+NNNNNNNNNN.\n                          .++++BBBBBBBBBBBBBBB.\n .tttttttt:..           .++BBBBBBBBBBBBBBBBBBB.\n+tt+.      ``         .+BBBBBBBBBBBBBBBBBBBBB+++cccc.\nttt.               .-++BBBBBBBBBBBBBBBBBBBBBB++.ccc.\n+ttt++++:::::++++++BBBBBBBBBBBBBBBBBBBBBBB+..++.\n.+TTTTTTTTTTTTTBBBBBBBBBBBBBBBBBBBBBBBBB+.    .ccc.\n  .++TTTTTTTTTTBBBBBBBBBBBBBBBBBBBBBBBB+.      .cc.\n    ..:++++++++++++++++++BBBBBB++++BBBB.\n           .......      -LLLLL+. -LLLLL.\n                        -LLLL+.   -LLLL+.\n                        +LLL+       +LLL+\n                        +LL+         +ff+\n                        +ff++         +++:\n                        ++++:\n```\n',
    'author': 'Douglas Myers-Turnbull',
    'author_email': None,
    'maintainer': 'Douglas Myers-Turnbull',
    'maintainer_email': None,
    'url': 'https://github.com/dmyersturnbull/tyrannosaurus',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4',
}


setup(**setup_kwargs)
