Generated on 2020-10-31 11:44:44
"""
Eriksen flanker task
--------------------

Eriksen, B. A.; Eriksen, C. W. (1974). "Effects of noise letters upon
identification of a target letter in a non- search task". Perception and
Psychophysics. 16: 143â€“149.


"""

Tests: EriksenFlanker
Screens: intro, real

Variables:
  directions = [left, right]
  congruencies = [incongruent, congruent]
  repeats = 1


Test: EriksenFlanker
  --------------------------------------------------------------------------
  Conditions:

  | repeat          | direction       | category          |
  |-----------------+-----------------+-------------------|
  | 1..repeats loop | directions loop | congruencies loop |

  Components with param values:
  EriksenFlanker_cross = cross(position (0, 0) constant, size 20 constant, color #ffffff constant, fillColor #ffffff constant, )
  EriksenFlanker_image = image(file default path, size 100 constant, ori 0 constant, position (0, 0) constant, color #ffffff constant, fillColor #ffffff constant, )
  EriksenFlanker_keyboard = keyboard(valid [left, right] constant, correct space, )
  EriksenFlanker_circle = circle(fillColor green constant, color green constant, radius 100 constant, position (0, 0) constant, size 20 constant, )
  EriksenFlanker_circle_2 = circle(fillColor red constant, color green constant, radius 100 constant, position (0, 0) constant, size 20 constant, )


----------------------------------------------------------------------------
----------------------------------- FLOW -----------------------------------
----------------------------------------------------------------------------
 
1. SCREEN  intro
  ----------------------------------------------------------------------------

  Welcome
  -------

  In the following test you will be presented with a line of 5 arrow pointing
  left or right. You should respond by the direction of the *middle arrow* as
  fast as possible by pressing left or right arrow on the keyboard or
  touching/clicking on appropriate button on the screen.

  You will first do a practice run with 4 trials. After that a real run with
  20 trial will be performed.

  Press SPACE or touch/click the screen to continue
 
2. TEST EriksenFlanker
  ----------------------------------------------------------------------------

  Condition table (random=True, practice=True)
  | repeat | direction | category    |
  |--------+-----------+-------------|
  | 1      | left      | incongruent |
  | 1      | left      | congruent   |
  | 1      | right     | incongruent |
  | 1      | right     | congruent   |

  ---- Trials -----
    
    TRIAL 2:1
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 1      | left      | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 1
        repeat_index = 1
        practice = True
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2421

        exec:
          at 0 image(file images/left-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 2:2
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 1      | left      | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 1
        repeat_index = 1
        practice = True
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 1633

        exec:
          at 0 image(file images/left-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 2:3
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 1      | right     | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 1
        repeat_index = 1
        practice = True
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2821

        exec:
          at 0 image(file images/right-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 2:4
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 1      | right     | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 1
        repeat_index = 1
        practice = True
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 1351

        exec:
          at 0 image(file images/right-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300

 
3. SCREEN  real
  ----------------------------------------------------------------------------

  Real block
  ----------

  Now a real block of trials will be performed.

  Press SPACE or touch/click the screen to continue
 
4. TEST EriksenFlanker
  ----------------------------------------------------------------------------

  Condition table (random=True, practice=False)
  | repeat | direction | category    |
  |--------+-----------+-------------|
  | 1      | left      | incongruent |
  | 1      | left      | congruent   |
  | 1      | right     | incongruent |
  | 1      | right     | congruent   |
  | 2      | left      | incongruent |
  | 2      | left      | congruent   |
  | 2      | right     | incongruent |
  | 2      | right     | congruent   |
  | 3      | left      | incongruent |
  | 3      | left      | congruent   |
  | 3      | right     | incongruent |
  | 3      | right     | congruent   |
  | 4      | left      | incongruent |
  | 4      | left      | congruent   |
  | 4      | right     | incongruent |
  | 4      | right     | congruent   |
  | 5      | left      | incongruent |
  | 5      | left      | congruent   |
  | 5      | right     | incongruent |
  | 5      | right     | congruent   |

  ---- Trials -----
    
    TRIAL 4:1
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 1      | left      | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2608

        exec:
          at 0 image(file images/left-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:2
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 1      | left      | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2880

        exec:
          at 0 image(file images/left-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:3
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 1      | right     | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2895

        exec:
          at 0 image(file images/right-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:4
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 1      | right     | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2474

        exec:
          at 0 image(file images/right-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:5
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 2      | left      | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2414

        exec:
          at 0 image(file images/left-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:6
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 2      | left      | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 1893

        exec:
          at 0 image(file images/left-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:7
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 2      | right     | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 1345

        exec:
          at 0 image(file images/right-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:8
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 2      | right     | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 1173

        exec:
          at 0 image(file images/right-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:9
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 3      | left      | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 1080

        exec:
          at 0 image(file images/left-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:10
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 3      | left      | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2757

        exec:
          at 0 image(file images/left-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:11
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 3      | right     | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2466

        exec:
          at 0 image(file images/right-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:12
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 3      | right     | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2783

        exec:
          at 0 image(file images/right-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:13
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 4      | left      | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2391

        exec:
          at 0 image(file images/left-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:14
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 4      | left      | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2727

        exec:
          at 0 image(file images/left-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:15
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 4      | right     | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 1004

        exec:
          at 0 image(file images/right-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:16
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 4      | right     | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2059

        exec:
          at 0 image(file images/right-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:17
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 5      | left      | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2809

        exec:
          at 0 image(file images/left-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:18
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 5      | left      | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2964

        exec:
          at 0 image(file images/left-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct left) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:19
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 5      | right     | incongruent |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2276

        exec:
          at 0 image(file images/right-incongruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300


    TRIAL 4:20
      
      | repeat | direction | category    |
      |--------+-----------+-------------|
      | 5      | right     | congruent   |

      Variables:
        directions = [left, right]
        congruencies = [incongruent, congruent]
        repeats = 5
        repeat_index = 1
        practice = False
        random = True

      Phases:

        fix:
          at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 1167

        exec:
          at 0 image(file images/right-congruent.png, size 100, ori 0, position (0, 0), color #ffffff, fillColor #ffffff) for 0
          at 0 keyboard(valid [left, right], correct right) for 0

        error:
          at 0 circle(fillColor red, color green, radius 100, position (0, 0), size 20) for 300

        correct:
          at 0 circle(fillColor green, color green, radius 100, position (0, 0), size 20) for 300

