"""
A simple behavioural task to assess a Simon effect.

See also:
http://en.wikipedia.org/wiki/Simon_effect
"""

positions = [left, right]
colors = [green, red]
responses = positions
repetitions = 1
proba = black

test Simon {

      | repetition          | position       | color       | congruency                                         | expected                          |
      | ------------------- | -------------- | ----------- | -------------------------------------------------- | --------------------------------- |
      | 1..repetitions loop | positions loop | colors loop | congruent if position == expected else incongruent | left if color == green else right |


      /* Since this is a relatively small condition table we could just
         spell it out like:

      | position | color | congruency  | response |
      |----------+-------+-------------+----------|
      | left     | green | congruent   | left     |
      | left     | red   | incongruent | right    |
      | right    | green | incongruent | left     |
      | right    | red   | congruent   | right    |

        instead of using expressions in table cells.
      */

      fix -> cross() for 1000..2000 choose
      exec -> rectangle(position position, color color, fillColor color)
              keyboard(valid positions, correct expected)
      error -> circle(radius 100, fillColor red, color red) for 100
      correct -> circle(radius 100, fillColor green, color green) for 100
      //error -> sound(freq 1000) for 300
      //correct -> sound(freq 500) for 300

}

screen Practice {
    Simon test
    ----------
    
    You will be presented with a colored rectangle positioned
    left or right.
    Press LEFT for the GREEN rectangle and right for the red.
    
    Press SPACE for the practice block.
}

screen Real {
    Simon test
    ----------
    
    Now a REAL testing will be performed.
    
    Press SPACE for the real block.
}

flow {
    show Practice
    execute Simon(practice true)

    show Real
    execute Simon(repetitions 10, random true)
}
