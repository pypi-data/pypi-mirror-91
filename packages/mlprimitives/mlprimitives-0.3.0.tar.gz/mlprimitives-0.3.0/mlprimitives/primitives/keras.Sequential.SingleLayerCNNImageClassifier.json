{
    "name": "keras.Sequential.SingleLayerCNNImageClassifier",
    "contributors": [
        "Carles Sala <csala@csail.mit.edu>"
    ],
    "description": "keras.Sequential.SingleLayerCNNImageClassifier",
    "classifiers": {
        "type": "estimator",
        "subtype": "classifier"
    },
    "modalities": [
        "image"
    ],
    "primitive": "mlprimitives.adapters.keras.Sequential",
    "fit": {
        "method": "fit",
        "args": [
            {
                "name": "X",
                "type": "ndarray"
            },
            {
                "name": "y",
                "type": "array"
            },
            {
                "name": "classes",
                "type": "int",
                "description": "Number of classes"
            }
        ]
    },
    "produce": {
        "method": "predict",
        "args": [
            {
                "name": "X",
                "type": "ndarray"
            }
        ],
        "output": [
            {
                "name": "y",
                "type": "array"
            }
        ]
    },
    "hyperparameters": {
        "fixed": {
            "classification": {
                "type": "bool",
                "default": true
            },
            "verbose": {
                "type": "bool",
                "default": false
            },
            "input_shape": {
                "type": "list",
                "default": null
            },
            "conv_filters": {
                "type": "int",
                "default": 32
            },
            "conv_activation": {
                "type": "str",
                "default": "relu"
            },
            "dense_activation": {
                "type": "str",
                "default": "softmax"
            },
            "optimizer": {
                "type": "str",
                "default": "keras.optimizers.Adadelta"
            },
            "loss": {
                "type": "str",
                "default": "keras.losses.categorical_crossentropy"
            },
            "epochs": {
                "type": "int",
                "default": 20
            },
            "callbacks": {
                "type": "list",
                "default": []
            },
            "validation_split": {
                "type": "float",
                "default": 0.0
            },
            "bastch_size": {
                "type": "int",
                "default": 32
            },
            "layers": {
                "type": "list",
                "default": [
                    {
                        "class": "keras.layers.Conv2D",
                        "parameters": {
                            "filters": "conv_filters",
                            "kernel_size": "conv_kernel_size",
                            "activation": "conv_activation",
                            "input_shape": "input_shape"
                        }
                    },
                    {
                        "class": "keras.layers.MaxPooling2D",
                        "parameters": {
                            "pool_size": "max_pooling_pool_size"
                        }
                    },
                    {
                        "class": "keras.layers.Dropout",
                        "parameters": {
                            "rate": "dropout_rate"
                        }
                    },
                    {
                        "class": "keras.layers.Flatten",
                        "parameters": {}
                    },
                    {
                        "class": "keras.layers.Dense",
                        "parameters": {
                            "units": "classes",
                            "activation": "dense_activation"
                        }
                    }
                ]
            }
        },
        "tunable": {
            "conv_kernel_size": {
                "type": "int",
                "default": 3,
                "range": [
                    3,
                    10
                ]
            },
            "max_pooling_pool_size": {
                "type": "int",
                "default": 2,
                "range": [
                    2,
                    10
                ]
            },
            "dropout_rate": {
                "type": "float",
                "default": 0.0,
                "range": [
                    0.0,
                    0.75
                ]
            }
        }
    }
}
