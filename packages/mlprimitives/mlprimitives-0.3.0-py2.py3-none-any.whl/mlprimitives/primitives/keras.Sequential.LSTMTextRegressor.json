{
    "name": "keras.Sequential.LSTMTextRegressor",
    "contributors": [
        "Carles Sala <csala@csail.mit.edu>"
    ],
    "description": "keras.Sequential.LSTMTextRegressor",
    "classifiers": {
        "type": "estimator",
        "subtype": "regressor"
    },
    "modalities": [
        "text"
    ],
    "primitive": "mlprimitives.adapters.keras.Sequential",
    "fit": {
        "method": "fit",
        "args": [
            {
                "name": "X",
                "type": "ndarray"
            },
            {
                "name": "y",
                "type": "array"
            }
        ]
    },
    "produce": {
        "method": "predict",
        "args": [
            {
                "name": "X",
                "type": "ndarray"
            }
        ],
        "output": [
            {
                "name": "y",
                "type": "array"
            }
        ]
    },
    "hyperparameters": {
        "fixed": {
            "input_length": {
                "type": "int",
                "default": null
            },
            "classification": {
                "type": "bool",
                "default": false
            },
            "conv_activation": {
                "type": "str",
                "default": "relu"
            },
            "dense_units": {
                "type": "int",
                "default": 1
            },
            "dense_activation": {
                "type": "str",
                "default": "linear"
            },
            "optimizer": {
                "type": "str",
                "default": "keras.optimizers.Adam"
            },
            "loss": {
                "type": "str",
                "default": "keras.losses.mean_squared_error"
            },
            "vocabulary_size": {
                "type": "int",
                "description": "vocabulary size + 1: number of known words in input."
            },
            "epochs": {
                "type": "int",
                "default": 10
            },
            "layers": {
                "type": "list",
                "default": [
                    {
                        "class": "keras.layers.Embedding",
                        "parameters": {
                            "input_dim": "vocabulary_size",
                            "output_dim": "embedding_output_dim",
                            "input_length": "input_length"
                        }
                    },
                    {
                        "class": "keras.layers.Dropout",
                        "parameters": {
                            "rate": "dropout_rate"
                        }
                    },
                    {
                        "class": "keras.layers.Conv1D",
                        "parameters": {
                            "filters": "embedding_output_dim",
                            "kernel_size": "conv_kernel_size",
                            "activation": "conv_activation"
                        }
                    },
                    {
                        "class": "keras.layers.MaxPooling1D",
                        "parameters": {
                            "pool_size": "max_pooling_pool_size"
                        }
                    },
                    {
                        "class": "keras.layers.LSTM",
                        "parameters": {
                            "units": "embedding_output_dim"
                        }
                    },
                    {
                        "class": "keras.layers.Dense",
                        "parameters": {
                            "units": "dense_units",
                            "activation": "dense_activation"
                        }
                    }
                ]
            }
        },
        "tunable": {
            "embedding_output_dim": {
                "type": "int",
                "default": 100,
                "range": [
                    100,
                    500
                ]
            },
            "dropout_rate": {
                "type": "float",
                "default": 0.1,
                "range": [
                    0.1,
                    0.75
                ]
            },
            "conv_kernel_size": {
                "type": "int",
                "default": 3,
                "range": [
                    3,
                    10
                ]
            },
            "max_pooling_pool_size": {
                "type": "int",
                "default": 2,
                "range": [
                    2,
                    10
                ]
            }
        }
    }
}
