# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['brewblox_tilt']

package_data = \
{'': ['*']}

install_requires = \
['brewblox-service>=0.32.1,<0.33.0', 'numpy>=1.18.2,<2.0.0', 'pint>=0.11,<0.12']

setup_kwargs = {
    'name': 'brewblox-tilt',
    'version': '2.1.0',
    'description': 'Tilt hydrometer service for BrewBlox',
    'long_description': "# BrewBlox Service for the Tilt Hydrometer\n\nThe [Tilt hydrometer](https://tilthydrometer.com/) is a wireless hydrometer and thermometer used to gather live readings of specific gravity and temperature when brewing beer.\n\n[BrewBlox](https://brewpi.com/) is a modular brewery control system design to work with the BrewPi controller.\n\nThis brewBlox service integrates the Tilt hydrometer into BrewBlox.\n\n## Usage\n\n### Install script\n\nTo automatically install a new Tilt, you can use the `install_tilt.py` script.\nThis will create the ./tilt directory, and edit your `docker-compose.yml` file.\n\nIn your BrewBlox directory, run the following commands:\n\n```bash\ncurl -O https://raw.githubusercontent.com/j616/brewblox-tilt/develop/install_tilt.py\npython3 ./install_tilt.py\n```\n\n### Or: Deploy the Tilt service on the BrewBlox stack\n\nYou need to add the service and set the eventbus port in your `docker-compose.yml` file.\n\n```yaml\n  tilt:\n    image: j616s/brewblox-tilt:latest\n    restart: unless-stopped\n    privileged: true\n    network_mode: host\n    volumes:\n        - ./tilt:/share\n```\n\nFinally, you'll have to bring up the new service using\n\n```bash\nbrewblox-ctl up\n```\n\n### Running on a remote machine\nOn the remote machine in the directory you wish to install the service, create a `docker-compose.yml` file like this with the relevant IP address for the brewblox host.\n```yaml\nversion: '3.7'\nservices:\n  tilt:\n    command: --mqtt-host=<brewblox_hostname/IP>\n    image: j616s/brewblox-tilt:latest\n    network_mode: host\n    privileged: true\n    restart: unless-stopped\n    volumes: ['./tilt:/share']\n```\nIf you host brewblox on a different port (e.g. if you run brewblox on a NAS), you'll also want to add `--mqtt-port=<port>` to the command with the relevant port (https).\n\nCreate the directory for the tilt calibration\n```bash\nmkdir tilt\n```\n\nStart the service with the following command\n```bash\ndocker-compose up -d\n```\n\n### Add to your graphs\n\nOnce the Tilt service receives data from your Tilt(s), it should be available as graph metrics in BrewBlox.\n\n### Calibration\n\nCalibration is optional. While the Tilt provides a good indication of fermentation progress without calibration, it's values can be less accurate than a traditional hydrometer. With calibration its accuracy is approximately that of a traditional hydrometer. If you wish to use your Tilt for anything beyond simple tracking of fermentation progress (e.g. stepping temperatures at a given SG value) it is recommended you calibrate your Tilt.\n\nTo calibrate your Tilt, you first need to create a folder for the calibration files to be stored in. The recommended folder is `./tilt` in the BrewBlox directory. You can use other directories but you should change the volume parameter for the Tilt service in your docker compose file accordingly. You can create the `tilt` directory by running the following command in the BrewBlox directory:-\n\n```bash\nmkdir tilt\n```\n\n**NOTE:** It is recommended you create the `tilt` folder before launching the Tilt service for the first time. Failure to do so will result in the docker service creating the folder as root. If this happens, use `chown` to change the user and group ownership of the `tilt` folder to match the rest of the BrewBlox directory.\n\nIf you wish to calibrate your Specific Gravity readings, create a file called `SGCal.csv` in the `tilt` directory with lines of the form:-\n\n```\n<colour>, <uncalibrated_value>, <calibrated_value>\n```\n\nThe uncalibrated values are the raw values from the Tilt. The calibrated values are those from a known good hydrometer or calculated when creating your calibration solution. Calibration solutions can be made by adding sugar/DME to water a little at a time to increase the SG of the solution. You can take readings using a hydrometer and the Tilt app as you go. You can include calibration values for multiple colours of Tilt in the calibration file. A typical calibration file would look something like this:-\n\n```\nblack, 1.000, 1.001\nblack, 1.001, 1.002\nblack, 1.002, 1.003\nblack, 1.003, 1.004\nred, 1.000, 1.010\nred, 1.001, 1.011\nred, 1.002, 1.012\nred, 1.003, 1.013\nred, 1.004, 1.014\n```\n\nYou will need multiple calibration points. We recommend at least 6 distributed evenly across your typical gravity range for each Tilt. For example, if you usually brew with a starting gravity of 1.050, you may choose to calibrate at the values 1.000, 1.010, 1.020, 1.030, 1.040, 1.050, and 1.060. The more calibration points you have, the more accurate the calibrated values the service creates will be. Strange calibrated values from the service are an indication you have used too few or poorly distributed calibration values.\n\nCalibration values for temperature are placed in a file called `tempCal.csv` in the `tilt` directory and have the same structure. Temperature values in the calibration file MUST be in Fahrenheit. The tempCal file can also contain calibration values for multiple Tilts. Again, it should contain at least 6 points distributed evenly across your typical range. A typical tempCal file would look like this:-\n\n```\nblack,39,40\nblack,46,48\nblack,54,55\nblack,60,62\nblack,68,70\nblack,75,76\n```\n\nCalibrated values will be logged in BrewBlox separately to uncalibrated values. If you don't provide calibration values for a given colour of Tilt, only uncalibrated values will be logged. You don't need to calibrate both temperature and SG. If you only want to provide calibration values for SG, that works fine. Calibrated temp values would not be generated in this case but calibrate SG values would.\n\nIt is also recommended that you re-calibrate SG whenever you change your battery. Different batteries and different placements of the sled inside the Tilt can affect the calibration.\n\n## Limitations\n\nAs the Tilt does not talk directly to the BrewPi controller, you cannot use your Tilt to control the temperature of your system. This service currently only allows you to log values from the Tilt. To control your BrewPi/BrewBlox setup you will need a BrewPi temperature sensor.\n\n## Development\n\nTo get started:\n\nInstall deps & pyenv\n```bash\nsudo apt update -y\nsudo apt install -y \\\n    libglib2.0-dev \\\n    libatlas3-base \\\n    python3-bluez \\\n    make \\\n    build-essential \\\n    libssl-dev \\\n    zlib1g-dev \\\n    libbz2-dev \\\n    libreadline-dev \\\n    libsqlite3-dev \\\n    wget \\\n    curl \\\n    llvm \\\n    libncurses5-dev \\\n    libncursesw5-dev \\\n    xz-utils \\\n    tk-dev \\\n    libffi-dev \\\n    liblzma-dev \\\n    python-openssl \\\n    git\n```\n\nInstall pyenv\n```bash\ncurl https://pyenv.run | bash\n```\n\nInstall Python 3.7\n```bash\npyenv install 3.7.7\n```\nAfter installing, it may suggest to add initialization code to `~/.bashrc`. Do that.\n\nInstall Poetry\n```bash\npip3 install --user poetry\n```\n\nConfigure and install the environment used for this project.\n__Run in the root of the cloned brewblox-tilt directory__\n```bash\npyenv local 3.7.7\npoetry install\n```\n\nDuring development, you need to have your environment activated. When it is activated, your terminal prompt is prefixed with (.venv).\n\nVisual Studio code with suggested settings does this automatically whenever you open a .py file. If you prefer using a different editor, you can do it manually by running:\n```bash\npoetry shell\n```\n\nYou can build a docker container for x86 using the following:\n\n```bash\nbrewblox-dev localbuild\n```\n\nOr for ARM using the following:\n\n```bash\nbrewblox-dev localbuild --arch arm\n```\n\nYou can then run this container using the following:\n\n```bash\ndocker run --net=host --privileged -v ~/brewblox/tilt:/share j616s/brewblox-tilt:local\n```\n",
    'author': 'James Sandford',
    'author_email': 'brewblox-tilt@j616s.co.uk',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.7',
}


setup(**setup_kwargs)
