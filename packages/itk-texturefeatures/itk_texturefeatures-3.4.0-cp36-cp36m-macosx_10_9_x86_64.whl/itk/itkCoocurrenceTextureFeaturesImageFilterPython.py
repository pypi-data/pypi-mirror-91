# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _TextureFeaturesPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCoocurrenceTextureFeaturesImageFilterPython
else:
    import _itkCoocurrenceTextureFeaturesImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCoocurrenceTextureFeaturesImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCoocurrenceTextureFeaturesImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython
class vectoritkImageVF82(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageVF82_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82___nonzero__)
    __bool__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82___bool__)
    __len__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82___len__)
    __getslice__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82___getslice__)
    __setslice__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82___setslice__)
    __delslice__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82___delslice__)
    __delitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82___delitem__)
    __getitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82___getitem__)
    __setitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82___setitem__)
    pop = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_pop)
    append = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_append)
    empty = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_empty)
    size = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_size)
    swap = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_swap)
    begin = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_begin)
    end = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_end)
    rbegin = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_rbegin)
    rend = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_rend)
    clear = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_clear)
    get_allocator = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_get_allocator)
    pop_back = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_pop_back)
    erase = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageVF82
        __init__(self, other) -> vectoritkImageVF82

        Parameters
        ----------
        other: std::vector< itkImageVF82_Pointer > const &

        __init__(self, size) -> vectoritkImageVF82

        Parameters
        ----------
        size: std::vector< itkImageVF82_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageVF82

        Parameters
        ----------
        size: std::vector< itkImageVF82_Pointer >::size_type
        value: std::vector< itkImageVF82_Pointer >::value_type const &

        """
        _itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_swiginit(self, _itkCoocurrenceTextureFeaturesImageFilterPython.new_vectoritkImageVF82(*args))
    push_back = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_push_back)
    front = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_front)
    back = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_back)
    assign = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_assign)
    resize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_resize)
    insert = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_insert)
    reserve = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_reserve)
    capacity = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_capacity)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_vectoritkImageVF82

# Register vectoritkImageVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF82_swigregister(vectoritkImageVF82)

class vectoritkImageVF83(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageVF83_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83___nonzero__)
    __bool__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83___bool__)
    __len__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83___len__)
    __getslice__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83___getslice__)
    __setslice__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83___setslice__)
    __delslice__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83___delslice__)
    __delitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83___delitem__)
    __getitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83___getitem__)
    __setitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83___setitem__)
    pop = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_pop)
    append = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_append)
    empty = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_empty)
    size = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_size)
    swap = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_swap)
    begin = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_begin)
    end = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_end)
    rbegin = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_rbegin)
    rend = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_rend)
    clear = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_clear)
    get_allocator = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_get_allocator)
    pop_back = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_pop_back)
    erase = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageVF83
        __init__(self, other) -> vectoritkImageVF83

        Parameters
        ----------
        other: std::vector< itkImageVF83_Pointer > const &

        __init__(self, size) -> vectoritkImageVF83

        Parameters
        ----------
        size: std::vector< itkImageVF83_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageVF83

        Parameters
        ----------
        size: std::vector< itkImageVF83_Pointer >::size_type
        value: std::vector< itkImageVF83_Pointer >::value_type const &

        """
        _itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_swiginit(self, _itkCoocurrenceTextureFeaturesImageFilterPython.new_vectoritkImageVF83(*args))
    push_back = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_push_back)
    front = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_front)
    back = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_back)
    assign = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_assign)
    resize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_resize)
    insert = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_insert)
    reserve = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_reserve)
    capacity = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_capacity)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_vectoritkImageVF83

# Register vectoritkImageVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF83_swigregister(vectoritkImageVF83)

class vectoritkImageVF84(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageVF84_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84___nonzero__)
    __bool__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84___bool__)
    __len__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84___len__)
    __getslice__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84___getslice__)
    __setslice__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84___setslice__)
    __delslice__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84___delslice__)
    __delitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84___delitem__)
    __getitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84___getitem__)
    __setitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84___setitem__)
    pop = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_pop)
    append = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_append)
    empty = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_empty)
    size = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_size)
    swap = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_swap)
    begin = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_begin)
    end = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_end)
    rbegin = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_rbegin)
    rend = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_rend)
    clear = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_clear)
    get_allocator = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_get_allocator)
    pop_back = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_pop_back)
    erase = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageVF84
        __init__(self, other) -> vectoritkImageVF84

        Parameters
        ----------
        other: std::vector< itkImageVF84_Pointer > const &

        __init__(self, size) -> vectoritkImageVF84

        Parameters
        ----------
        size: std::vector< itkImageVF84_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageVF84

        Parameters
        ----------
        size: std::vector< itkImageVF84_Pointer >::size_type
        value: std::vector< itkImageVF84_Pointer >::value_type const &

        """
        _itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_swiginit(self, _itkCoocurrenceTextureFeaturesImageFilterPython.new_vectoritkImageVF84(*args))
    push_back = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_push_back)
    front = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_front)
    back = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_back)
    assign = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_assign)
    resize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_resize)
    insert = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_insert)
    reserve = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_reserve)
    capacity = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_capacity)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_vectoritkImageVF84

# Register vectoritkImageVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.vectoritkImageVF84_swigregister(vectoritkImageVF84)


def itkCoocurrenceTextureFeaturesImageFilterID2VIF2_New():
    return itkCoocurrenceTextureFeaturesImageFilterID2VIF2.New()

class itkCoocurrenceTextureFeaturesImageFilterID2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterID2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterID2VIF2
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterID2VIF2

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterID2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterID2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterID2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterID2VIF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterID2VIF2 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_swigregister(itkCoocurrenceTextureFeaturesImageFilterID2VIF2)
itkCoocurrenceTextureFeaturesImageFilterID2VIF2___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2___New_orig__
itkCoocurrenceTextureFeaturesImageFilterID2VIF2_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2VIF2_cast


def itkCoocurrenceTextureFeaturesImageFilterID3VIF3_New():
    return itkCoocurrenceTextureFeaturesImageFilterID3VIF3.New()

class itkCoocurrenceTextureFeaturesImageFilterID3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterID3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterID3VIF3
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterID3VIF3

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterID3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterID3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterID3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterID3VIF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterID3VIF3 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_swigregister(itkCoocurrenceTextureFeaturesImageFilterID3VIF3)
itkCoocurrenceTextureFeaturesImageFilterID3VIF3___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3___New_orig__
itkCoocurrenceTextureFeaturesImageFilterID3VIF3_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3VIF3_cast


def itkCoocurrenceTextureFeaturesImageFilterID4VIF4_New():
    return itkCoocurrenceTextureFeaturesImageFilterID4VIF4.New()

class itkCoocurrenceTextureFeaturesImageFilterID4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4VIF4):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterID4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterID4VIF4
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterID4VIF4

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterID4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterID4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterID4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterID4VIF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterID4VIF4 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_swigregister(itkCoocurrenceTextureFeaturesImageFilterID4VIF4)
itkCoocurrenceTextureFeaturesImageFilterID4VIF4___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4___New_orig__
itkCoocurrenceTextureFeaturesImageFilterID4VIF4_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4VIF4_cast


def itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_New():
    return itkCoocurrenceTextureFeaturesImageFilterIF2VIF2.New()

class itkCoocurrenceTextureFeaturesImageFilterIF2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIF2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIF2VIF2
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIF2VIF2

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIF2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIF2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIF2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIF2VIF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIF2VIF2 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_swigregister(itkCoocurrenceTextureFeaturesImageFilterIF2VIF2)
itkCoocurrenceTextureFeaturesImageFilterIF2VIF2___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2VIF2_cast


def itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_New():
    return itkCoocurrenceTextureFeaturesImageFilterIF3VIF3.New()

class itkCoocurrenceTextureFeaturesImageFilterIF3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIF3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIF3VIF3
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIF3VIF3

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIF3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIF3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIF3VIF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIF3VIF3 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_swigregister(itkCoocurrenceTextureFeaturesImageFilterIF3VIF3)
itkCoocurrenceTextureFeaturesImageFilterIF3VIF3___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3VIF3_cast


def itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_New():
    return itkCoocurrenceTextureFeaturesImageFilterIF4VIF4.New()

class itkCoocurrenceTextureFeaturesImageFilterIF4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4VIF4):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIF4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIF4VIF4
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIF4VIF4

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIF4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIF4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIF4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIF4VIF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIF4VIF4 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_swigregister(itkCoocurrenceTextureFeaturesImageFilterIF4VIF4)
itkCoocurrenceTextureFeaturesImageFilterIF4VIF4___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4VIF4_cast


def itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_New():
    return itkCoocurrenceTextureFeaturesImageFilterISS2VIF2.New()

class itkCoocurrenceTextureFeaturesImageFilterISS2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2VIF2):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterISS2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterISS2VIF2
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterISS2VIF2

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterISS2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterISS2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterISS2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterISS2VIF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterISS2VIF2 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_swigregister(itkCoocurrenceTextureFeaturesImageFilterISS2VIF2)
itkCoocurrenceTextureFeaturesImageFilterISS2VIF2___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2___New_orig__
itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2VIF2_cast


def itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_New():
    return itkCoocurrenceTextureFeaturesImageFilterISS3VIF3.New()

class itkCoocurrenceTextureFeaturesImageFilterISS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3VIF3):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterISS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterISS3VIF3
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterISS3VIF3

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterISS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterISS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterISS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterISS3VIF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterISS3VIF3 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_swigregister(itkCoocurrenceTextureFeaturesImageFilterISS3VIF3)
itkCoocurrenceTextureFeaturesImageFilterISS3VIF3___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3___New_orig__
itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3VIF3_cast


def itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_New():
    return itkCoocurrenceTextureFeaturesImageFilterISS4VIF4.New()

class itkCoocurrenceTextureFeaturesImageFilterISS4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4VIF4):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterISS4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterISS4VIF4
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterISS4VIF4

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterISS4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterISS4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterISS4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterISS4VIF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterISS4VIF4 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_swigregister(itkCoocurrenceTextureFeaturesImageFilterISS4VIF4)
itkCoocurrenceTextureFeaturesImageFilterISS4VIF4___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4___New_orig__
itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4VIF4_cast


def itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2.New()

class itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2)
itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2VIF2_cast


def itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3.New()

class itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3)
itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3VIF3_cast


def itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4.New()

class itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4VIF4):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4)
itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4VIF4_cast


def itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2.New()

class itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2)
itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2VIF2_cast


def itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3.New()

class itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3)
itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3VIF3_cast


def itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4.New()

class itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4VIF4):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4)
itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4VIF4_cast


def itkImageFileWriterIVF82_New():
    return itkImageFileWriterIVF82.New()

class itkImageFileWriterIVF82(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_Clone)
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_GetInput)
    SetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_SetFileName)
    GetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_GetImageIO)
    Write = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_Write)
    SetIORegion = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageFileWriterIVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF82

        Create a new object of the class itkImageFileWriterIVF82 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF82.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF82.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF82.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_swigregister(itkImageFileWriterIVF82)
itkImageFileWriterIVF82___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82___New_orig__
itkImageFileWriterIVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF82_cast


def itkImageFileWriterIVF83_New():
    return itkImageFileWriterIVF83.New()

class itkImageFileWriterIVF83(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_Clone)
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_GetInput)
    SetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_SetFileName)
    GetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_GetImageIO)
    Write = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_Write)
    SetIORegion = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageFileWriterIVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF83

        Create a new object of the class itkImageFileWriterIVF83 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF83.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF83.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF83.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_swigregister(itkImageFileWriterIVF83)
itkImageFileWriterIVF83___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83___New_orig__
itkImageFileWriterIVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF83_cast


def itkImageFileWriterIVF84_New():
    return itkImageFileWriterIVF84.New()

class itkImageFileWriterIVF84(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_Clone)
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_GetInput)
    SetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_SetFileName)
    GetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_GetImageIO)
    Write = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_Write)
    SetIORegion = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageFileWriterIVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF84

        Create a new object of the class itkImageFileWriterIVF84 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF84.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF84.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF84.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_swigregister(itkImageFileWriterIVF84)
itkImageFileWriterIVF84___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84___New_orig__
itkImageFileWriterIVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileWriterIVF84_cast

class itkImageSourceIVF82(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceIVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF82_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF82_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF82_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF82_MakeOutput)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageSourceIVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF82_cast)

# Register itkImageSourceIVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF82_swigregister(itkImageSourceIVF82)
itkImageSourceIVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF82_cast

class itkImageSourceIVF83(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceIVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF83_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF83_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF83_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF83_MakeOutput)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageSourceIVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF83_cast)

# Register itkImageSourceIVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF83_swigregister(itkImageSourceIVF83)
itkImageSourceIVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF83_cast

class itkImageSourceIVF84(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceIVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF84_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF84_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF84_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF84_MakeOutput)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageSourceIVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF84_cast)

# Register itkImageSourceIVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF84_swigregister(itkImageSourceIVF84)
itkImageSourceIVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageSourceIVF84_cast

class itkImageToImageFilterID2IVF82(itkImageSourceIVF82):
    r"""Proxy of C++ itkImageToImageFilterID2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterID2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_cast)

# Register itkImageToImageFilterID2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_swigregister(itkImageToImageFilterID2IVF82)
itkImageToImageFilterID2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID2IVF82_cast

class itkImageToImageFilterID3IVF83(itkImageSourceIVF83):
    r"""Proxy of C++ itkImageToImageFilterID3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterID3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_cast)

# Register itkImageToImageFilterID3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_swigregister(itkImageToImageFilterID3IVF83)
itkImageToImageFilterID3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID3IVF83_cast

class itkImageToImageFilterID4IVF84(itkImageSourceIVF84):
    r"""Proxy of C++ itkImageToImageFilterID4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterID4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_cast)

# Register itkImageToImageFilterID4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_swigregister(itkImageToImageFilterID4IVF84)
itkImageToImageFilterID4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterID4IVF84_cast

class itkImageToImageFilterIF2IVF82(itkImageSourceIVF82):
    r"""Proxy of C++ itkImageToImageFilterIF2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIF2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_cast)

# Register itkImageToImageFilterIF2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_swigregister(itkImageToImageFilterIF2IVF82)
itkImageToImageFilterIF2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF2IVF82_cast

class itkImageToImageFilterIF3IVF83(itkImageSourceIVF83):
    r"""Proxy of C++ itkImageToImageFilterIF3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIF3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_cast)

# Register itkImageToImageFilterIF3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_swigregister(itkImageToImageFilterIF3IVF83)
itkImageToImageFilterIF3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF3IVF83_cast

class itkImageToImageFilterIF4IVF84(itkImageSourceIVF84):
    r"""Proxy of C++ itkImageToImageFilterIF4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIF4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_cast)

# Register itkImageToImageFilterIF4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_swigregister(itkImageToImageFilterIF4IVF84)
itkImageToImageFilterIF4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIF4IVF84_cast

class itkImageToImageFilterISS2IVF82(itkImageSourceIVF82):
    r"""Proxy of C++ itkImageToImageFilterISS2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterISS2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_cast)

# Register itkImageToImageFilterISS2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_swigregister(itkImageToImageFilterISS2IVF82)
itkImageToImageFilterISS2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS2IVF82_cast

class itkImageToImageFilterISS3IVF83(itkImageSourceIVF83):
    r"""Proxy of C++ itkImageToImageFilterISS3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterISS3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_cast)

# Register itkImageToImageFilterISS3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_swigregister(itkImageToImageFilterISS3IVF83)
itkImageToImageFilterISS3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS3IVF83_cast

class itkImageToImageFilterISS4IVF84(itkImageSourceIVF84):
    r"""Proxy of C++ itkImageToImageFilterISS4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterISS4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_cast)

# Register itkImageToImageFilterISS4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_swigregister(itkImageToImageFilterISS4IVF84)
itkImageToImageFilterISS4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterISS4IVF84_cast

class itkImageToImageFilterIUC2IVF82(itkImageSourceIVF82):
    r"""Proxy of C++ itkImageToImageFilterIUC2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUC2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_cast)

# Register itkImageToImageFilterIUC2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_swigregister(itkImageToImageFilterIUC2IVF82)
itkImageToImageFilterIUC2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC2IVF82_cast

class itkImageToImageFilterIUC3IVF83(itkImageSourceIVF83):
    r"""Proxy of C++ itkImageToImageFilterIUC3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUC3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_cast)

# Register itkImageToImageFilterIUC3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_swigregister(itkImageToImageFilterIUC3IVF83)
itkImageToImageFilterIUC3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF83_cast

class itkImageToImageFilterIUC4IVF84(itkImageSourceIVF84):
    r"""Proxy of C++ itkImageToImageFilterIUC4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUC4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_cast)

# Register itkImageToImageFilterIUC4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_swigregister(itkImageToImageFilterIUC4IVF84)
itkImageToImageFilterIUC4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUC4IVF84_cast

class itkImageToImageFilterIUS2IVF82(itkImageSourceIVF82):
    r"""Proxy of C++ itkImageToImageFilterIUS2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUS2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_cast)

# Register itkImageToImageFilterIUS2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_swigregister(itkImageToImageFilterIUS2IVF82)
itkImageToImageFilterIUS2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS2IVF82_cast

class itkImageToImageFilterIUS3IVF83(itkImageSourceIVF83):
    r"""Proxy of C++ itkImageToImageFilterIUS3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUS3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_cast)

# Register itkImageToImageFilterIUS3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_swigregister(itkImageToImageFilterIUS3IVF83)
itkImageToImageFilterIUS3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF83_cast

class itkImageToImageFilterIUS4IVF84(itkImageSourceIVF84):
    r"""Proxy of C++ itkImageToImageFilterIUS4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_SetInput)
    GetInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_GetInput)
    PushBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_GetDirectionTolerance)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageToImageFilterIUS4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_cast)

# Register itkImageToImageFilterIUS4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_swigregister(itkImageToImageFilterIUS4IVF84)
itkImageToImageFilterIUS4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageToImageFilterIUS4IVF84_cast


def itkImageVF82_New():
    return itkImageVF82.New()

class itkImageVF82(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkImageVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_Clone)
    Allocate = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_cast)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageVF82

        Create a new object of the class itkImageVF82 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageVF82.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageVF82.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageVF82.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_swigregister(itkImageVF82)
itkImageVF82___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82___New_orig__
itkImageVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF82_cast


def itkImageVF83_New():
    return itkImageVF83.New()

class itkImageVF83(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkImageVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_Clone)
    Allocate = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_cast)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageVF83

        Create a new object of the class itkImageVF83 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageVF83.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageVF83.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageVF83.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_swigregister(itkImageVF83)
itkImageVF83___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83___New_orig__
itkImageVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF83_cast


def itkImageVF84_New():
    return itkImageVF84.New()

class itkImageVF84(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkImageVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_Clone)
    Allocate = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_cast)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageVF84

        Create a new object of the class itkImageVF84 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageVF84.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageVF84.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageVF84.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_swigregister(itkImageVF84)
itkImageVF84___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84___New_orig__
itkImageVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageVF84_cast

class itkVectorF8(itk.itkFixedArrayPython.itkFixedArrayF8):
    r"""Proxy of C++ itkVectorF8 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_GetVnlVector)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkVectorF8

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorF8
        __init__(self, arg0) -> itkVectorF8

        Parameters
        ----------
        arg0: itkVectorF8 const &

        __init__(self, r) -> itkVectorF8

        Parameters
        ----------
        r: float const &

        __init__(self, r) -> itkVectorF8

        Parameters
        ----------
        r: float const *

        """
        _itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_swiginit(self, _itkCoocurrenceTextureFeaturesImageFilterPython.new_itkVectorF8(*args))
    __iadd__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___iadd__)
    __isub__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___isub__)
    __neg__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___neg__)
    __add__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___add__)
    __sub__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___sub__)
    __mul__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___mul__)
    __eq__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___eq__)
    __ne__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___ne__)
    GetNorm = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_SetNthComponent)
    __getitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___getitem__)
    __setitem__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___setitem__)
    __len__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___len__)
    __repr__ = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___repr__)

# Register itkVectorF8 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_swigregister(itkVectorF8)
itkVectorF8_GetVectorDimension = _itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_GetVectorDimension
itkVectorF8_GetNumberOfComponents = _itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8_GetNumberOfComponents
itkVectorF8___len__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkVectorF8___len__


def itkCoocurrenceTextureFeaturesImageFilterID2IVF82_New():
    return itkCoocurrenceTextureFeaturesImageFilterID2IVF82.New()

class itkCoocurrenceTextureFeaturesImageFilterID2IVF82(itkImageToImageFilterID2IVF82):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterID2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterID2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterID2IVF82

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterID2IVF82 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterID2IVF82.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterID2IVF82.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterID2IVF82.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterID2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_swigregister(itkCoocurrenceTextureFeaturesImageFilterID2IVF82)
itkCoocurrenceTextureFeaturesImageFilterID2IVF82___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82___New_orig__
itkCoocurrenceTextureFeaturesImageFilterID2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID2IVF82_cast


def itkCoocurrenceTextureFeaturesImageFilterID3IVF83_New():
    return itkCoocurrenceTextureFeaturesImageFilterID3IVF83.New()

class itkCoocurrenceTextureFeaturesImageFilterID3IVF83(itkImageToImageFilterID3IVF83):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterID3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterID3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterID3IVF83

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterID3IVF83 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterID3IVF83.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterID3IVF83.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterID3IVF83.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterID3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_swigregister(itkCoocurrenceTextureFeaturesImageFilterID3IVF83)
itkCoocurrenceTextureFeaturesImageFilterID3IVF83___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83___New_orig__
itkCoocurrenceTextureFeaturesImageFilterID3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID3IVF83_cast


def itkCoocurrenceTextureFeaturesImageFilterID4IVF84_New():
    return itkCoocurrenceTextureFeaturesImageFilterID4IVF84.New()

class itkCoocurrenceTextureFeaturesImageFilterID4IVF84(itkImageToImageFilterID4IVF84):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterID4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterID4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterID4IVF84

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterID4IVF84 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterID4IVF84.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterID4IVF84.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterID4IVF84.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterID4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_swigregister(itkCoocurrenceTextureFeaturesImageFilterID4IVF84)
itkCoocurrenceTextureFeaturesImageFilterID4IVF84___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84___New_orig__
itkCoocurrenceTextureFeaturesImageFilterID4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterID4IVF84_cast


def itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_New():
    return itkCoocurrenceTextureFeaturesImageFilterIF2IVF82.New()

class itkCoocurrenceTextureFeaturesImageFilterIF2IVF82(itkImageToImageFilterIF2IVF82):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIF2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIF2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIF2IVF82

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIF2IVF82 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIF2IVF82.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIF2IVF82.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIF2IVF82.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIF2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_swigregister(itkCoocurrenceTextureFeaturesImageFilterIF2IVF82)
itkCoocurrenceTextureFeaturesImageFilterIF2IVF82___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF2IVF82_cast


def itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_New():
    return itkCoocurrenceTextureFeaturesImageFilterIF3IVF83.New()

class itkCoocurrenceTextureFeaturesImageFilterIF3IVF83(itkImageToImageFilterIF3IVF83):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIF3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIF3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIF3IVF83

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIF3IVF83 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIF3IVF83.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIF3IVF83.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIF3IVF83.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIF3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_swigregister(itkCoocurrenceTextureFeaturesImageFilterIF3IVF83)
itkCoocurrenceTextureFeaturesImageFilterIF3IVF83___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF3IVF83_cast


def itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_New():
    return itkCoocurrenceTextureFeaturesImageFilterIF4IVF84.New()

class itkCoocurrenceTextureFeaturesImageFilterIF4IVF84(itkImageToImageFilterIF4IVF84):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIF4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIF4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIF4IVF84

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIF4IVF84 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIF4IVF84.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIF4IVF84.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIF4IVF84.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIF4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_swigregister(itkCoocurrenceTextureFeaturesImageFilterIF4IVF84)
itkCoocurrenceTextureFeaturesImageFilterIF4IVF84___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIF4IVF84_cast


def itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_New():
    return itkCoocurrenceTextureFeaturesImageFilterISS2IVF82.New()

class itkCoocurrenceTextureFeaturesImageFilterISS2IVF82(itkImageToImageFilterISS2IVF82):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterISS2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterISS2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterISS2IVF82

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterISS2IVF82 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterISS2IVF82.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterISS2IVF82.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterISS2IVF82.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterISS2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_swigregister(itkCoocurrenceTextureFeaturesImageFilterISS2IVF82)
itkCoocurrenceTextureFeaturesImageFilterISS2IVF82___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82___New_orig__
itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS2IVF82_cast


def itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_New():
    return itkCoocurrenceTextureFeaturesImageFilterISS3IVF83.New()

class itkCoocurrenceTextureFeaturesImageFilterISS3IVF83(itkImageToImageFilterISS3IVF83):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterISS3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterISS3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterISS3IVF83

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterISS3IVF83 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterISS3IVF83.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterISS3IVF83.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterISS3IVF83.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterISS3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_swigregister(itkCoocurrenceTextureFeaturesImageFilterISS3IVF83)
itkCoocurrenceTextureFeaturesImageFilterISS3IVF83___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83___New_orig__
itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS3IVF83_cast


def itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_New():
    return itkCoocurrenceTextureFeaturesImageFilterISS4IVF84.New()

class itkCoocurrenceTextureFeaturesImageFilterISS4IVF84(itkImageToImageFilterISS4IVF84):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterISS4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterISS4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterISS4IVF84

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterISS4IVF84 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterISS4IVF84.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterISS4IVF84.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterISS4IVF84.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterISS4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_swigregister(itkCoocurrenceTextureFeaturesImageFilterISS4IVF84)
itkCoocurrenceTextureFeaturesImageFilterISS4IVF84___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84___New_orig__
itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterISS4IVF84_cast


def itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82.New()

class itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82(itkImageToImageFilterIUC2IVF82):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82)
itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC2IVF82_cast


def itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83.New()

class itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83(itkImageToImageFilterIUC3IVF83):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83)
itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC3IVF83_cast


def itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84.New()

class itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84(itkImageToImageFilterIUC4IVF84):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84)
itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUC4IVF84_cast


def itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82.New()

class itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82(itkImageToImageFilterIUS2IVF82):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82)
itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS2IVF82_cast


def itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83.New()

class itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83(itkImageToImageFilterIUS3IVF83):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83)
itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS3IVF83_cast


def itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_New():
    return itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84.New()

class itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84(itkImageToImageFilterIUS4IVF84):
    r"""Proxy of C++ itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_Clone)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_GetNeighborhoodRadius)
    SetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_GetMaskImage)
    SetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_SetOffsets)
    SetOffset = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_SetOffset)
    GetModifiableOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_GetModifiableOffsets)
    GetOffsets = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_SetNumberOfBinsPerAxis)
    GetNumberOfBinsPerAxis = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_GetNumberOfBinsPerAxis)
    GetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_GetHistogramMaximum)
    SetHistogramMaximum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_SetHistogramMaximum)
    GetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_GetHistogramMinimum)
    SetHistogramMinimum = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_SetHistogramMinimum)
    SetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_SetInsidePixelValue)
    GetInsidePixelValue = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_GetInsidePixelValue)
    SetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_NormalizeOff)
    OutputPixelTypeCheck = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_OutputPixelTypeCheck
    
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_cast)

    def New(*args, **kargs):
        """New() -> itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84

        Create a new object of the class itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_swigregister(itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84)
itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84___New_orig__
itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkCoocurrenceTextureFeaturesImageFilterIUS4IVF84_cast


def itkImageFileReaderIVF82_New():
    return itkImageFileReaderIVF82.New()

class itkImageFileReaderIVF82(itkImageSourceIVF82):
    r"""Proxy of C++ itkImageFileReaderIVF82 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_UseStreamingOff)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageFileReaderIVF82
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF82

        Create a new object of the class itkImageFileReaderIVF82 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF82.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF82.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF82.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF82 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_swigregister(itkImageFileReaderIVF82)
itkImageFileReaderIVF82___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82___New_orig__
itkImageFileReaderIVF82_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF82_cast


def itkImageFileReaderIVF83_New():
    return itkImageFileReaderIVF83.New()

class itkImageFileReaderIVF83(itkImageSourceIVF83):
    r"""Proxy of C++ itkImageFileReaderIVF83 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_UseStreamingOff)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageFileReaderIVF83
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF83

        Create a new object of the class itkImageFileReaderIVF83 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF83.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF83.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF83.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF83 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_swigregister(itkImageFileReaderIVF83)
itkImageFileReaderIVF83___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83___New_orig__
itkImageFileReaderIVF83_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF83_cast


def itkImageFileReaderIVF84_New():
    return itkImageFileReaderIVF84.New()

class itkImageFileReaderIVF84(itkImageSourceIVF84):
    r"""Proxy of C++ itkImageFileReaderIVF84 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84___New_orig__)
    Clone = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_UseStreamingOff)
    __swig_destroy__ = _itkCoocurrenceTextureFeaturesImageFilterPython.delete_itkImageFileReaderIVF84
    cast = _swig_new_static_method(_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF84

        Create a new object of the class itkImageFileReaderIVF84 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF84.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF84.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF84.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF84 in _itkCoocurrenceTextureFeaturesImageFilterPython:
_itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_swigregister(itkImageFileReaderIVF84)
itkImageFileReaderIVF84___New_orig__ = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84___New_orig__
itkImageFileReaderIVF84_cast = _itkCoocurrenceTextureFeaturesImageFilterPython.itkImageFileReaderIVF84_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_file_reader(*args, **kwargs):
    """Procedural interface for ImageFileReader"""
    import itk

    instance = itk.ImageFileReader.New(*args, **kwargs)
    return instance.__internal_call__()


def image_file_reader_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    if isinstance(itk.ImageFileReader, itkTemplate.itkTemplate):
        filter_object = itk.ImageFileReader.values()[0]
    else:
        filter_object = itk.ImageFileReader

    image_file_reader.__doc__ = filter_object.__doc__
    image_file_reader.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_file_reader.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageFileReader, itkTemplate.itkTemplate):
        image_file_reader.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_file_reader.__doc__ += "\n"
        image_file_reader.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_file_reader.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )

from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_source(*args, **kwargs):
    """Procedural interface for ImageSource"""
    import itk

    instance = itk.ImageSource.New(*args, **kwargs)
    return instance.__internal_call__()


def image_source_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    if isinstance(itk.ImageSource, itkTemplate.itkTemplate):
        filter_object = itk.ImageSource.values()[0]
    else:
        filter_object = itk.ImageSource

    image_source.__doc__ = filter_object.__doc__
    image_source.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_source.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageSource, itkTemplate.itkTemplate):
        image_source.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_source.__doc__ += "\n"
        image_source.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_source.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )

from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_file_writer(*args, **kwargs):
    """Procedural interface for ImageFileWriter"""
    import itk

    instance = itk.ImageFileWriter.New(*args, **kwargs)
    return instance.__internal_call__()


def image_file_writer_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    if isinstance(itk.ImageFileWriter, itkTemplate.itkTemplate):
        filter_object = itk.ImageFileWriter.values()[0]
    else:
        filter_object = itk.ImageFileWriter

    image_file_writer.__doc__ = filter_object.__doc__
    image_file_writer.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_file_writer.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageFileWriter, itkTemplate.itkTemplate):
        image_file_writer.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_file_writer.__doc__ += "\n"
        image_file_writer.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_file_writer.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )

from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def coocurrence_texture_features_image_filter(*args, **kwargs):
    """Procedural interface for CoocurrenceTextureFeaturesImageFilter"""
    import itk

    instance = itk.CoocurrenceTextureFeaturesImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def coocurrence_texture_features_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    if isinstance(itk.CoocurrenceTextureFeaturesImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.CoocurrenceTextureFeaturesImageFilter.values()[0]
    else:
        filter_object = itk.CoocurrenceTextureFeaturesImageFilter

    coocurrence_texture_features_image_filter.__doc__ = filter_object.__doc__
    coocurrence_texture_features_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    coocurrence_texture_features_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.CoocurrenceTextureFeaturesImageFilter, itkTemplate.itkTemplate):
        coocurrence_texture_features_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        coocurrence_texture_features_image_filter.__doc__ += "\n"
        coocurrence_texture_features_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        coocurrence_texture_features_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )

from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_to_image_filter(*args, **kwargs):
    """Procedural interface for ImageToImageFilter"""
    import itk

    instance = itk.ImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def image_to_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    if isinstance(itk.ImageToImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ImageToImageFilter.values()[0]
    else:
        filter_object = itk.ImageToImageFilter

    image_to_image_filter.__doc__ = filter_object.__doc__
    image_to_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_to_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageToImageFilter, itkTemplate.itkTemplate):
        image_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_to_image_filter.__doc__ += "\n"
        image_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_to_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




