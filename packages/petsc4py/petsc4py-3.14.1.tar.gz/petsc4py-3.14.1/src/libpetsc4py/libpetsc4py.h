/* Generated by Cython 0.29.21 */

#ifndef __PYX_HAVE__libpetsc4py
#define __PYX_HAVE__libpetsc4py

#include "Python.h"

#ifndef __PYX_HAVE_API__libpetsc4py

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C int import_libpetsc4py(void);
__PYX_EXTERN_C PetscErrorCode MatPythonGetContext(Mat, void **);
__PYX_EXTERN_C PetscErrorCode MatPythonSetContext(Mat, void *);
__PYX_EXTERN_C PetscErrorCode PCPythonGetContext(PC, void **);
__PYX_EXTERN_C PetscErrorCode PCPythonSetContext(PC, void *);
__PYX_EXTERN_C PetscErrorCode KSPPythonGetContext(KSP, void **);
__PYX_EXTERN_C PetscErrorCode KSPPythonSetContext(KSP, void *);
__PYX_EXTERN_C PetscErrorCode SNESPythonGetContext(SNES, void **);
__PYX_EXTERN_C PetscErrorCode SNESPythonSetContext(SNES, void *);
__PYX_EXTERN_C PetscErrorCode TSPythonGetContext(TS, void **);
__PYX_EXTERN_C PetscErrorCode TSPythonSetContext(TS, void *);
__PYX_EXTERN_C PetscErrorCode PetscPythonRegisterAll(void);

#endif /* !__PYX_HAVE_API__libpetsc4py */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initlibpetsc4py(void);
#else
PyMODINIT_FUNC PyInit_libpetsc4py(void);
#endif

#endif /* !__PYX_HAVE__libpetsc4py */
