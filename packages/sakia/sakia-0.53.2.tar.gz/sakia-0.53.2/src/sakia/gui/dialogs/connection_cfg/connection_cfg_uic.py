# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/builds/clients/python/sakia/src/sakia/gui/dialogs/connection_cfg/connection_cfg.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_ConnectionConfigurationDialog(object):
    def setupUi(self, ConnectionConfigurationDialog):
        ConnectionConfigurationDialog.setObjectName("ConnectionConfigurationDialog")
        ConnectionConfigurationDialog.resize(623, 577)
        ConnectionConfigurationDialog.setModal(True)
        self.verticalLayout = QtWidgets.QVBoxLayout(ConnectionConfigurationDialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.stacked_pages = QtWidgets.QStackedWidget(ConnectionConfigurationDialog)
        self.stacked_pages.setObjectName("stacked_pages")
        self.page_node = QtWidgets.QWidget()
        self.page_node.setObjectName("page_node")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.page_node)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout()
        self.verticalLayout_13.setContentsMargins(-1, 6, -1, -1)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.button_pubkey = QtWidgets.QPushButton(self.page_node)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/duniter_info_icon"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_pubkey.setIcon(icon)
        self.button_pubkey.setIconSize(QtCore.QSize(32, 32))
        self.button_pubkey.setObjectName("button_pubkey")
        self.verticalLayout_13.addWidget(self.button_pubkey)
        self.button_wallet = QtWidgets.QPushButton(self.page_node)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/wallet_icon"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_wallet.setIcon(icon1)
        self.button_wallet.setIconSize(QtCore.QSize(50, 32))
        self.button_wallet.setObjectName("button_wallet")
        self.verticalLayout_13.addWidget(self.button_wallet)
        self.button_connect = QtWidgets.QPushButton(self.page_node)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/connect_icon"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_connect.setIcon(icon2)
        self.button_connect.setIconSize(QtCore.QSize(32, 32))
        self.button_connect.setObjectName("button_connect")
        self.verticalLayout_13.addWidget(self.button_connect)
        self.button_register = QtWidgets.QPushButton(self.page_node)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/new_membership"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_register.setIcon(icon3)
        self.button_register.setIconSize(QtCore.QSize(32, 32))
        self.button_register.setObjectName("button_register")
        self.verticalLayout_13.addWidget(self.button_register)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_13.addItem(spacerItem)
        self.verticalLayout_12.addLayout(self.verticalLayout_13)
        self.stacked_pages.addWidget(self.page_node)
        self.page_licence = QtWidgets.QWidget()
        self.page_licence.setObjectName("page_licence")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.page_licence)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_2 = QtWidgets.QLabel(self.page_licence)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_8.addWidget(self.label_2)
        self.text_license = QtWidgets.QTextEdit(self.page_licence)
        self.text_license.setObjectName("text_license")
        self.verticalLayout_8.addWidget(self.text_license)
        self.label_3 = QtWidgets.QLabel(self.page_licence)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_8.addWidget(self.label_3)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(-1, 6, -1, -1)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.button_accept = QtWidgets.QPushButton(self.page_licence)
        self.button_accept.setObjectName("button_accept")
        self.horizontalLayout_3.addWidget(self.button_accept)
        self.verticalLayout_8.addLayout(self.horizontalLayout_3)
        self.stacked_pages.addWidget(self.page_licence)
        self.page_connection = QtWidgets.QWidget()
        self.page_connection.setObjectName("page_connection")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.page_connection)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.groupBox = QtWidgets.QGroupBox(self.page_connection)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_action = QtWidgets.QLabel(self.groupBox)
        self.label_action.setObjectName("label_action")
        self.horizontalLayout.addWidget(self.label_action)
        self.edit_uid = QtWidgets.QLineEdit(self.groupBox)
        self.edit_uid.setObjectName("edit_uid")
        self.horizontalLayout.addWidget(self.edit_uid)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.layout_key = QtWidgets.QVBoxLayout()
        self.layout_key.setObjectName("layout_key")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setContentsMargins(-1, 6, -1, -1)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.groupbox_pubkey = QtWidgets.QGroupBox(self.groupBox)
        self.groupbox_pubkey.setObjectName("groupbox_pubkey")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.groupbox_pubkey)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.edit_pubkey = QtWidgets.QLineEdit(self.groupbox_pubkey)
        self.edit_pubkey.setObjectName("edit_pubkey")
        self.verticalLayout_7.addWidget(self.edit_pubkey)
        self.verticalLayout_5.addWidget(self.groupbox_pubkey)
        self.layout_key.addLayout(self.verticalLayout_5)
        self.groupbox_key = QtWidgets.QGroupBox(self.groupBox)
        self.groupbox_key.setObjectName("groupbox_key")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.groupbox_key)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.edit_salt = QtWidgets.QLineEdit(self.groupbox_key)
        self.edit_salt.setText("")
        self.edit_salt.setEchoMode(QtWidgets.QLineEdit.Password)
        self.edit_salt.setObjectName("edit_salt")
        self.verticalLayout_6.addWidget(self.edit_salt)
        self.edit_salt_bis = QtWidgets.QLineEdit(self.groupbox_key)
        self.edit_salt_bis.setEchoMode(QtWidgets.QLineEdit.Password)
        self.edit_salt_bis.setObjectName("edit_salt_bis")
        self.verticalLayout_6.addWidget(self.edit_salt_bis)
        self.edit_password = QtWidgets.QLineEdit(self.groupbox_key)
        self.edit_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.edit_password.setObjectName("edit_password")
        self.verticalLayout_6.addWidget(self.edit_password)
        self.edit_password_repeat = QtWidgets.QLineEdit(self.groupbox_key)
        self.edit_password_repeat.setText("")
        self.edit_password_repeat.setEchoMode(QtWidgets.QLineEdit.Password)
        self.edit_password_repeat.setObjectName("edit_password_repeat")
        self.verticalLayout_6.addWidget(self.edit_password_repeat)
        self.button_generate = QtWidgets.QPushButton(self.groupbox_key)
        self.button_generate.setObjectName("button_generate")
        self.verticalLayout_6.addWidget(self.button_generate)
        self.layout_key.addWidget(self.groupbox_key)
        self.line = QtWidgets.QFrame(self.groupBox)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.layout_key.addWidget(self.line)
        self.verticalLayout_2.addLayout(self.layout_key)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem2)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setContentsMargins(-1, 6, -1, -1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_2.addWidget(self.label_6)
        self.combo_scrypt_params = QtWidgets.QComboBox(self.groupBox)
        self.combo_scrypt_params.setObjectName("combo_scrypt_params")
        self.combo_scrypt_params.addItem("")
        self.combo_scrypt_params.addItem("")
        self.combo_scrypt_params.addItem("")
        self.combo_scrypt_params.addItem("")
        self.horizontalLayout_2.addWidget(self.combo_scrypt_params)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem3)
        self.label = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName("label")
        self.horizontalLayout_2.addWidget(self.label)
        self.spin_n = QtWidgets.QSpinBox(self.groupBox)
        self.spin_n.setObjectName("spin_n")
        self.horizontalLayout_2.addWidget(self.spin_n)
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_2.addWidget(self.label_4)
        self.spin_r = QtWidgets.QSpinBox(self.groupBox)
        self.spin_r.setObjectName("spin_r")
        self.horizontalLayout_2.addWidget(self.spin_r)
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_2.addWidget(self.label_5)
        self.spin_p = QtWidgets.QSpinBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spin_p.sizePolicy().hasHeightForWidth())
        self.spin_p.setSizePolicy(sizePolicy)
        self.spin_p.setObjectName("spin_p")
        self.horizontalLayout_2.addWidget(self.spin_p)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setContentsMargins(-1, 5, -1, -1)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem4)
        self.button_next = QtWidgets.QPushButton(self.groupBox)
        self.button_next.setObjectName("button_next")
        self.horizontalLayout_4.addWidget(self.button_next)
        self.verticalLayout_2.addLayout(self.horizontalLayout_4)
        self.verticalLayout_4.addWidget(self.groupBox)
        self.stacked_pages.addWidget(self.page_connection)
        self.page_services = QtWidgets.QWidget()
        self.page_services.setObjectName("page_services")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.page_services)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.progress_bar = QtWidgets.QProgressBar(self.page_services)
        self.progress_bar.setProperty("value", 24)
        self.progress_bar.setObjectName("progress_bar")
        self.verticalLayout_3.addWidget(self.progress_bar)
        self.plain_text_edit = QtWidgets.QPlainTextEdit(self.page_services)
        self.plain_text_edit.setReadOnly(True)
        self.plain_text_edit.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.plain_text_edit.setObjectName("plain_text_edit")
        self.verticalLayout_3.addWidget(self.plain_text_edit)
        self.stacked_pages.addWidget(self.page_services)
        self.verticalLayout.addWidget(self.stacked_pages)
        self.label_currency = QtWidgets.QLabel(ConnectionConfigurationDialog)
        self.label_currency.setText("")
        self.label_currency.setObjectName("label_currency")
        self.verticalLayout.addWidget(self.label_currency)
        self.label_info = QtWidgets.QLabel(ConnectionConfigurationDialog)
        self.label_info.setText("")
        self.label_info.setObjectName("label_info")
        self.verticalLayout.addWidget(self.label_info)

        self.retranslateUi(ConnectionConfigurationDialog)
        self.stacked_pages.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(ConnectionConfigurationDialog)

    def retranslateUi(self, ConnectionConfigurationDialog):
        _translate = QtCore.QCoreApplication.translate
        ConnectionConfigurationDialog.setWindowTitle(_translate("ConnectionConfigurationDialog", "Add an account"))
        self.button_pubkey.setText(_translate("ConnectionConfigurationDialog", "Add using a public key (quick)"))
        self.button_wallet.setText(_translate("ConnectionConfigurationDialog", "Add a wallet"))
        self.button_connect.setText(_translate("ConnectionConfigurationDialog", "Add an existing member account"))
        self.button_register.setText(_translate("ConnectionConfigurationDialog", "Create a new member account"))
        self.label_2.setText(_translate("ConnectionConfigurationDialog", "<html><head/><body><p><span style=\" font-size:large; font-weight:600;\">Licence</span></p></body></html>"))
        self.text_license.setHtml(_translate("ConnectionConfigurationDialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    This program is free software: you can redistribute it and/or modify</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    it under the terms of the GNU General Public License as published by</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    the Free Software Foundation, either version 3 of the License, or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    (at your option) any later version.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Hack\'; font-size:10pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    This program is distributed in the hope that it will be useful,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    GNU General Public License for more details.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Hack\'; font-size:10pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    You should have received a copy of the GNU General Public License</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Hack\'; font-size:10pt;\">    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;. </span><a name=\"TransNote1-rev\"></a><a href=\"https://www.gnu.org/licenses/gpl-howto.fr.html#TransNote1\"><span style=\" font-family:\'Hack\'; font-size:10pt; text-decoration: underline; color:#2980b9; vertical-align:super;\">1</span></a></p></body></html>"))
        self.label_3.setText(_translate("ConnectionConfigurationDialog", "By going throught the process of creating a wallet, you accept the licence above."))
        self.button_accept.setText(_translate("ConnectionConfigurationDialog", "I accept the above licence"))
        self.groupBox.setTitle(_translate("ConnectionConfigurationDialog", "Account parameters"))
        self.label_action.setText(_translate("ConnectionConfigurationDialog", "Identity name (UID)"))
        self.groupbox_pubkey.setTitle(_translate("ConnectionConfigurationDialog", "Public key"))
        self.edit_pubkey.setPlaceholderText(_translate("ConnectionConfigurationDialog", "Public key"))
        self.groupbox_key.setTitle(_translate("ConnectionConfigurationDialog", "Credentials"))
        self.edit_salt.setPlaceholderText(_translate("ConnectionConfigurationDialog", "Secret key"))
        self.edit_salt_bis.setPlaceholderText(_translate("ConnectionConfigurationDialog", "Please repeat your secret key"))
        self.edit_password.setPlaceholderText(_translate("ConnectionConfigurationDialog", "Your password"))
        self.edit_password_repeat.setPlaceholderText(_translate("ConnectionConfigurationDialog", "Please repeat your password"))
        self.button_generate.setText(_translate("ConnectionConfigurationDialog", "Show public key"))
        self.label_6.setText(_translate("ConnectionConfigurationDialog", "Scrypt parameters"))
        self.combo_scrypt_params.setItemText(0, _translate("ConnectionConfigurationDialog", "Simple"))
        self.combo_scrypt_params.setItemText(1, _translate("ConnectionConfigurationDialog", "Secure"))
        self.combo_scrypt_params.setItemText(2, _translate("ConnectionConfigurationDialog", "Hardest"))
        self.combo_scrypt_params.setItemText(3, _translate("ConnectionConfigurationDialog", "Extreme"))
        self.label.setText(_translate("ConnectionConfigurationDialog", "N"))
        self.label_4.setText(_translate("ConnectionConfigurationDialog", "r"))
        self.label_5.setText(_translate("ConnectionConfigurationDialog", "p"))
        self.button_next.setText(_translate("ConnectionConfigurationDialog", "Export revocation document to continue"))

import sakia.icons_rc
