---

classes:
  SwerveDriveKinematics:
    shared_ptr: false
    template_params:
    - size_t NumModules
    methods:
      SwerveDriveKinematics:
        overloads:
          Translation2d, Wheels ...&&:
            ignore: true
          std::array<Translation2d, NumModules>&:
            ignore: true
      ToSwerveModuleStates:
      ToChassisSpeeds:
        overloads:
          ModuleStates ...&& [const]:
            ignore: true
          std::array<SwerveModuleState, NumModules> [const]:
      NormalizeWheelSpeeds:
        cpp_code: |
          [](std::array<SwerveModuleState, NumModules> moduleStates, units::meters_per_second_t attainableMaxSpeed) {
            frc::SwerveDriveKinematics<NumModules>::NormalizeWheelSpeeds(&moduleStates, attainableMaxSpeed);
            return moduleStates;
          }

    template_inline_code: |
      if constexpr (NumModules == 3) {
        cls_SwerveDriveKinematics.def(py::init<Translation2d, Translation2d, Translation2d>());
      } else if constexpr (NumModules == 4) {
        cls_SwerveDriveKinematics.def(py::init<Translation2d, Translation2d, Translation2d, Translation2d>());
      } else if constexpr (NumModules == 6) {
        cls_SwerveDriveKinematics.def(py::init<Translation2d, Translation2d, Translation2d, Translation2d, Translation2d, Translation2d>());
      }
  

templates:
  SwerveDrive3Kinematics:
    qualname: frc::SwerveDriveKinematics
    params:
    - 3
  SwerveDrive4Kinematics:
    qualname: frc::SwerveDriveKinematics
    params:
    - 4
  SwerveDrive6Kinematics:
    qualname: frc::SwerveDriveKinematics
    params:
    - 6