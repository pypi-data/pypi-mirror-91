from typing import Any, Optional

from .base import ViewInspector

class SwaggerAutoSchema(ViewInspector):
    operation_keys: Any = ...
    def __init__(
        self,
        view: Any,
        path: Any,
        method: Any,
        components: Any,
        request: Any,
        overrides: Any,
        operation_keys: Optional[Any] = ...,
    ): ...
    def get_operation(self, operation_keys: Optional[Any] = ...): ...
    def get_request_body_parameters(self, consumes: Any): ...
    def get_view_serializer(self): ...
    def get_request_serializer(self): ...
    def get_request_form_parameters(self, serializer: Any): ...
    def get_request_body_schema(self, serializer: Any): ...
    def make_body_parameter(self, schema: Any): ...
    def add_manual_parameters(self, parameters: Any): ...
    def get_responses(self): ...
    def get_default_response_serializer(self): ...
    def get_default_responses(self): ...
    def get_response_serializers(self): ...
    def get_response_schemas(self, response_serializers: Any): ...
    def get_query_serializer(self): ...
    def get_query_parameters(self): ...
    def get_operation_id(self, operation_keys: Optional[Any] = ...): ...
    def split_summary_from_description(self, description: Any): ...
    def get_summary_and_description(self): ...
    def get_security(self): ...
    def is_deprecated(self): ...
    def get_tags(self, operation_keys: Optional[Any] = ...): ...
    def get_consumes(self): ...
    def get_produces(self): ...
