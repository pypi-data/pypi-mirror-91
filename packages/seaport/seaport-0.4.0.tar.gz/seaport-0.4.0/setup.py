# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['seaport',
 'seaport.clipboard',
 'seaport.clipboard.portfile',
 'seaport.commands',
 'seaport.commands.autocomplete',
 'seaport.pull_request']

package_data = \
{'': ['*'], 'seaport.commands.autocomplete': ['bash/*', 'fish/*', 'zsh/*']}

install_requires = \
['click>=7.1.2,<8.0.0']

entry_points = \
{'console_scripts': ['seaport = seaport.init:seaport']}

setup_kwargs = {
    'name': 'seaport',
    'version': '0.4.0',
    'description': 'A more mighty port bump',
    'long_description': '# 🌊 seaport\n\n*A more mighty `port bump` for MacPorts!*\n\n| Test Status | [![GitHub Workflow Status](https://img.shields.io/github/workflow/status/harens/seaport/Tests?logo=github&style=flat-square)](https://github.com/harens/seaport/actions?query=workflow%3ATests) [![GitHub Workflow Status](https://img.shields.io/github/workflow/status/harens/seaport/ShellCheck?label=ShellCheck&logo=github%20actions&logoColor=white&style=flat-square)](https://github.com/harens/seaport/actions?query=workflow%3AShellCheck) [![Codecov](https://img.shields.io/codecov/c/github/harens/seaport?logo=codecov&style=flat-square)](https://codecov.io/gh/harens/seaport)  |\n|:--|:--|\n| __Version Info__ | [![PyPI](https://img.shields.io/pypi/v/seaport?logo=pypi&logoColor=white&style=flat-square)](https://pypi.org/project/seaport/) [![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/harens/seaport?logo=github&style=flat-square)](https://github.com/harens/seaport/releases) [![PyPI - Downloads](https://img.shields.io/pypi/dm/seaport?logo=python&logoColor=white&style=flat-square)](https://pypi.org/project/seaport/) |\n| __Code Analysis__ |[![LGTM Grade](https://img.shields.io/lgtm/grade/python/github/harens/seaport?logo=lgtm&style=flat-square)](https://lgtm.com/projects/g/harens/seaport/) [![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability/harens/seaport?logo=code%20climate&style=flat-square)](https://codeclimate.com/github/harens/seaport) [![CodeFactor Grade](https://img.shields.io/codefactor/grade/github/harens/seaport?logo=codefactor&style=flat-square)](https://www.codefactor.io/repository/github/harens/seaport) [![Codacy grade](https://img.shields.io/codacy/grade/8539131738c3433f8057e65aab21de03?logo=codacy&style=flat-square)](https://app.codacy.com/gh/harens/seaport/dashboard?branch=master)|\n\n## ✨ Features\n\n* __Automatically determines new version numbers and checksums__ for MacPorts portfiles.\n* __Copies the changes to your clipboard 📋__, and optionally __sends a PR to update them__.\n* Contains __additional checking functionality__, such as running tests, linting and installing the updated program.\n* __[PEP 561 compatible](https://www.python.org/dev/peps/pep-0561)__, with built in support for type checking.\n\n## 🤖 Example\n\n```\n> seaport clip gping\n🌊 Starting seaport...\n👍 New version is 1.2.0-post\n🔻 Downloading from https://github.com/orf/gping/tarball/v1.2.0-post/gping-1.2.0-post.tar.gz\n🔎 Checksums:\nOld rmd160: 8b274132c8389ec560f213007368c7f521fdf682\nNew rmd160: 4a614e35d4e1e496871ee2b270ba8836f84650c6\nOld sha256: 1879b37f811c09e43d3759ccd97d9c8b432f06c75a27025cfa09404abdeda8f5\nNew sha256: 1008306e8293e7c59125de02e2baa6a17bc1c10de1daba2247bfc789eaf34ff5\nOld size: 853432\nNew size: 853450\n⏪️ Changing revision numbers\nNo changes necessary\n📋 The contents of the portfile have been copied to your clipboard!\n```\n\n## ⬇️ Install\n\nNote that if installing from PyPi or building from source, [MacPorts](https://www.macports.org/) needs to already be installed, and [GitHub CLI](https://cli.github.com/) is required if using the `--pr` flag.\n\n### Homebrew 🍺\n\nBinary bottles are available for x86_64_linux, catalina and big_sur.\n\n```\nbrew install harens/tap/seaport\n```\n\n### PyPi 🐍\n\n```\npip install seaport\n```\n\n## 💻 Usage\n\n```txt\n> seaport --help\nUsage: seaport [OPTIONS] COMMAND [ARGS]...\n\n  Bumps the version number and checksum of a port.\n\n  For more information, please visit https://github.com/harens/seaport\n\nOptions:\n  --version  Show the version and exit.\n  --help     Show this message and exit.\n\nCommands:\n  clip  Bumps the version number and checksum of NAME, and copies the\n        result...\n\n  pr    Bumps the version number and checksum of NAME, and sends a PR to...\n```\n\n### 📋 `seaport clip NAME`\n\nCopies the updated portfile to your clipboard\n\n```txt\n> seaport clip --help\n🌊 Starting seaport...\nUsage: seaport clip [OPTIONS] NAME\n\n  Bumps the version number and checksum of NAME, and copies the result to\n  your clipboard.\n\nOptions:\n  --bump TEXT               The new version number\n  --test / --no-test        Runs port test\n  --lint / --no-lint        Runs port lint --nitpick\n  --install / --no-install  Installs the port and allows testing of basic\n                            functionality\n\n  --help                    Show this message and exit.\n```\n\n#### 📛 `name` (_Required_)\n\nThe name of the port to update.\n\ne.g. `seaport clip gping`\n\n#### 🔻 `--bump TEXT`\n\nManually set the version number to bump it to. This should be in the same format as the output of the livecheck.\n\nBy default, it uses the value outputted from the livecheck.\n\nThis flag can be useful if there\'s no livecheck available or you want to override it.\n\ne.g. `seaport clip gping --bump 1.2.0-post`\n\n#### 🧪 `--test / --no-test` (_default `--no-test`_)\n\nRuns `sudo port test NAME` after updating the portfile.\n\ne.g. `seaport clip py-rich --test`\n\n#### 🤔 `--lint / --no-lint` (_default `--no-lint`_)\n\nRuns `port lint --nitpick NAME` after updating the portfile.\n\ne.g. `seaport clip gping --lint`\n\n#### 🔨 `--install / --no-install` (_default `--no-install`_)\n\nInstalls the port via the updated portfile and allows testing of basic functionality. After this has been completed, the port is uninstalled from the user\'s system.\n\ne.g. `seaport clip gping --install`\n\n### ✉️ `seaport pr NAME`\n\nSends a pull requrest to [macports/macports-ports](https://github.com/macports/macports-ports) with the updated portfile contents.\n\nThe flags in `clip` are also valid for this subcommand.\n\nThe pull request template is automatically filled in depending on what flags the command was run with (e.g. if `--lint` was used, this would be noted in the verification section of the template).\n\n```txt\n> seaport pr --help\n🌊 Starting seaport...\nUsage: seaport pr [OPTIONS] NAME LOCATION\n\n  Bumps the version number and checksum of NAME, and sends a PR to update\n  it.\n\nOptions:\n  --bump TEXT               The new version number\n  --test / --no-test        Runs port test\n  --lint / --no-lint        Runs port lint --nitpick\n  --install / --no-install  Installs the port and allows testing of basic\n                            functionality\n\n  --new                     Send a PR from the local portfile repo\n  --help                    Show this message and exit.\n  ```\n\n#### 🗺 `location` (_Required_)\n\nWhere to clone the macports-ports directory to.\nNote that macports-ports should not be in the location (unless you want to clone the repo to a folder with that name)\n\nIt is recommended to set the direction to a directory that already contains the cloned repo to speed up the process.\nHowever, if you do so, please make sure your master branch is clear and has upstream defined.\n\nThe following example would create the folder ~/GitHub/macports-ports, creating any subdirectories if they don\'t exist.\ne.g. `seaport pr gping ~/GitHub/`\n  \n#### ✅ `--new`\n\nThis flag is used if sending a PR for a new portfile from the user\'s [local portfile repo](https://guide.macports.org/chunked/development.local-repositories.html).\n\n### 🚀 Use of sudo\n\nSudo is only required if `--test`, `--lint` or `--install` are specified, and it will be asked for during runtime. This is since the local portfile repo needs to be modified to be able to run the relevant commands.\n\nAny changes made to the local portfile repo are reverted during the cleanup stage.\n\n## 🔨 Contributing\n\nAny change, big or small, that you think can help improve this action is more than welcome 🎉.\n\nAs well as this, feel free to open an issue with any new suggestions or bug reports. Every contribution is appreciated.\n\n## 📒 Notice of Non-Affiliation and Disclaimer\n\n<img src="https://avatars2.githubusercontent.com/u/4225322?s=280&v=4" align="right"\n     alt="MacPorts Logo" width="150">\n\nThis project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with the MacPorts Project, or any of its subsidiaries or its affiliates. The official MacPorts Project website can be found at <https://www.macports.org>.\n\nThe name MacPorts as well as related names, marks, emblems and images are registered trademarks of their respective owners.\n\n## ©️ License\n\nSimilar to other MacPorts-based projects, seaport is licensed under the [BSD 3-Clause "New" or "Revised" License](https://github.com/harens/seaport/blob/master/LICENSE).\n\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fharens%2Fseaport.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Fharens%2Fseaport?ref=badge_large)\n',
    'author': 'harens',
    'author_email': 'harensdeveloper@gmail.com',
    'maintainer': 'harens',
    'maintainer_email': 'harensdeveloper@gmail.com',
    'url': 'https://github.com/harens/seaport',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
