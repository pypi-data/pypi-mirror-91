# from outflow.core.test import TaskTestCase, CommandTestCase
#
#
# class Test{{ camel_case_plugin_name }}Tasks(TaskTestCase):
#     def test_task1(self):
#         # --- initialize the task ---
#         from my_plugin import task1
#
#         self.task = task1()
#
#         self.config = {
#             "tasks": {
#                 "my_task_name": {
#                     "param_a": "aaaaaa",
#                     "param_b": "bbbb",
#                 }
#             }
#         }
#
#         # --- run the task ---
#
#         result = self.run_task(target_a='my_data', target_b='my_data')
#
#         # --- make assertions ---
#
#         # test the result
#         result == 'my_result'
#
#         # (...)
#
#     def test_task2(self):
#         # --- initialize the task ---
#         from my_plugin import task2
#
#         self.task = task2()
#
#         # (...)
#
#
#
# class Test{{ camel_case_plugin_name }}Commands(CommandTestCase):
#     def test_sub_command1(self):
#
#         # --- create some fake data ---
#
#         value1 = 'value1'
#         value2 = 'value2'
#
#         # --- initialize the command ---
#
#         self.root_command_class = MyRootCommand
#
#
#         arg_list = ['my_sub_command',
#                     '--my_option1', value1,
#                     '--my_option2', value2]
#
#         # --- run the command ---
#
#         return_code, result = self.run_command(arg_list)
#
#         # --- make assertions ---
#
#         # test the result
#         assert return_code == 0
#         assert result == {}
#
#         # (...)
#
