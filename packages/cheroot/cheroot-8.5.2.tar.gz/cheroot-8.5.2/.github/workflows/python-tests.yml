name: Test suite

on:
  create:  # is used for publishing to PyPI and TestPyPI
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any branch but not tag
    - >-
      **
    tags-ignore:
    - >-
      **
  pull_request:
  schedule:
  - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  tests:
    if: >-  # https://twitter.com/webKnjaZ/status/1308803017001652225
      github.event_name != 'create' ||
      github.event.ref_type == 'tag'
    runs-on: ${{ matrix.os }}
    strategy:
      # max-parallel: 5
      fail-fast: true
      matrix:
        python-version:
        - 3.9
        - pypy2
        - 3.8
        - 3.7
        - pypy3
        - 3.6
        - 3.5
        - 2.7
        - 3.10.0-alpha - 3.10.0
        os:
        - ubuntu-20.04
        - ubuntu-18.04
        - ubuntu-16.04
        - macOS-11.0
        - macOS-latest
        - windows-latest
        - windows-2016
        exclude:
        # NOTE: Windows PyPy jobs are excluded to address the tox bug
        # NOTE: https://github.com/tox-dev/tox/issues/1704.
        # NOTE: They should be re-added once it's fixed.
        - os: windows-latest
          python-version: pypy2
        - os: windows-2016
          python-version: pypy2
        - os: windows-latest
          python-version: pypy3
        - os: windows-2016
          python-version: pypy3
        # NOTE: macOS PyPy jobs are excluded because installing cryptography
        # NOTE: needs openssl headers that aren't present at the moment.
        # TODO: Remove the exclusions once this is addressed.
        - os: macOS-11.0
          python-version: pypy2
        - os: macOS-latest
          python-version: pypy2
        - os: macOS-11.0
          python-version: pypy3
        - os: macOS-latest
          python-version: pypy3
        include:
        # NOTE: The only GNU/Linux CPython 3.4 available is built for Ubuntu 18
        # https://github.com/actions/python-versions/blob/c483657/versions-manifest.json#L1228
        - os: ubuntu-18.04
          python-version: 3.4

    continue-on-error: >-
      ${{
          (
            contains(matrix.python-version, 'alpha') ||
            (
              matrix.python-version == '2.7' &&
              startsWith(matrix.os, 'windows-')
            )
          ) && true || false
      }}

    env:
      PYTEST_ADDOPTS: >-
        ${{
            (
                matrix.python-version == 'pypy2' &&
                startsWith(matrix.os, 'ubuntu-')
            ) &&
            '-p no:warnings' || ''
        }}
      PY_COLORS: 1
      TOXENV: >-
        ${{
            (
                contains(matrix.python-version, 'pypy') &&
                matrix.python-version
            ) ||
            'python'
        }}
      TOX_PARALLEL_NO_SPINNER: 1

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: >-
          ${{
            runner.os == 'Linux' &&
            '~/.cache/pip'
            || ''
          }}${{
            runner.os == 'macOS' &&
            '~/Library/Caches/pip'
            || ''
          }}${{
            runner.os == 'Windows' &&
            '~\AppData\Local\pip\Cache'
            || ''
          }}
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('.pre-commit-config.yaml.failing') }}-${{ hashFiles('pytest.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install tox
      # Ref: https://github.com/dstanek/tox-run-command/issues/4
      run: |
        python -m pip install --upgrade 'tox<3.21.0' tox-run-command
    - name: 'Initialize tox envs: ${{ matrix.env.TOXENV }}'
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
        --skip-missing-interpreters false
        --notest
    - name: Windows system info
      run: systeminfo
      if: >-
        startsWith(matrix.os, 'windows-')
    - name: >-
        Log platform.platform()
      run: >-
        python -m platform
    - name: >-
        Log platform.version()
      run: >-
        python -c "import platform;
        print(platform.version())"
    - name: >-
        Log platform.uname()
      run: >-
        python -c "import platform;
        print(platform.uname())"
    - name: >-
        Log platform.release()
      run: >-
        python -c "import platform;
        print(platform.release())"
    - name: Log stdlib OpenSSL version
      run: >-
        python -c
        "import ssl; print('\nOPENSSL_VERSION: '
        + ssl.OPENSSL_VERSION + '\nOPENSSL_VERSION_INFO: '
        + repr(ssl.OPENSSL_VERSION_INFO)
        + '\nOPENSSL_VERSION_NUMBER: '
        + repr(ssl.OPENSSL_VERSION_NUMBER))"
    - name: Log PyOpenSSL version
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
        --run-command
        "{envpython} -m OpenSSL.debug"
    - name: Test with tox
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv

  publish:
    needs:
    - tests
    runs-on: ${{ matrix.os }}
    strategy:
      # NOTE: Even though it's one job, it's easier to keep the params in one
      # NOTE: place using a matrix:
      matrix:
        python-version:
        - 3.9
        os:
        - ubuntu-latest

    env:
      PY_COLORS: 1
      TOXENV: build-dists,metadata-validation
      TOX_PARALLEL_NO_SPINNER: 1

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: >-
          ${{
            runner.os == 'Linux' &&
            '~/.cache/pip'
            || ''
          }}${{
            runner.os == 'macOS' &&
            '~/Library/Caches/pip'
            || ''
          }}${{
            runner.os == 'Windows' &&
            '~\AppData\Local\pip\Cache'
            || ''
          }}
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('.pre-commit-config.yaml.failing') }}-${{ hashFiles('pytest.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install tox
      run: |
        python -m pip install --upgrade tox
    - name: 'Initialize tox envs: ${{ matrix.env.TOXENV }}'
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
        --skip-missing-interpreters false
        --notest
    - name: Build dists with tox
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
    - name: Publish to pypi.org
      if: >-  # "create" workflows run separately from "push" & "pull_request"
        github.event_name == 'create' &&
        github.event.ref_type == 'tag'
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_TOKEN }}
